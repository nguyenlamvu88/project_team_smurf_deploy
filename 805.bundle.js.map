{"version":3,"file":"805.bundle.js","mappings":"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","sources":["webpack://project_team_smurf_deploy/./src/components/graphs/003_ForceDirectedGraph.js","webpack://project_team_smurf_deploy/./public/countryCoordinates.js","webpack://project_team_smurf_deploy/./src/components/graphs/003_WorldChord.js","webpack://project_team_smurf_deploy/./src/components/003_alliance.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nconst ForceDirectedGraph = () => {\r\n  const svgRef = useRef();\r\n  const width = 1200;\r\n  const height = 670;\r\n  const dataUrl = '/data/processed/processed_recipients_of_combined_us_china_russia_arms_hierarchical.json';\r\n  \r\n  // State for the selected year\r\n  const [selectedYear, setSelectedYear] = useState(2014);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the provided URL\r\n    d3.json(dataUrl).then(rawData => {\r\n      const data = rawData.data; // Access the main data array\r\n\r\n      // Clear previous SVG contents\r\n      const svg = d3.select(svgRef.current);\r\n      svg.selectAll(\"*\").remove();\r\n\r\n      // Process nodes and links based on the dataset structure and selected year\r\n      const nodesArray = [];\r\n      const links = [];\r\n      const nodeMap = new Map(); // For faster lookup and avoiding duplicates\r\n\r\n      data.forEach(supplierEntry => {\r\n        const supplier = supplierEntry.supplier;\r\n        if (!nodeMap.has(supplier)) {\r\n          nodeMap.set(supplier, { name: supplier, group: 'supplier' });\r\n          nodesArray.push({ name: supplier, group: 'supplier' });\r\n        }\r\n\r\n        supplierEntry.recipients.forEach(recipientEntry => {\r\n          const recipient = recipientEntry.recipient;\r\n          const tradeValue = recipientEntry.years[selectedYear] || 0;\r\n\r\n          // Only add the link if there's a trade value for the selected year\r\n          if (tradeValue > 0) {\r\n            if (!nodeMap.has(recipient)) {\r\n              nodeMap.set(recipient, { name: recipient, group: 'recipient' });\r\n              nodesArray.push({ name: recipient, group: 'recipient' });\r\n            }\r\n            links.push({\r\n              source: supplier,\r\n              target: recipient,\r\n              value: tradeValue,\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n      // Define color assignments for specific suppliers\r\n      const colorScale = d3.scaleOrdinal()\r\n        .domain(['United States', 'Russia', 'China', 'India'])\r\n        .range(['#4682B4', '#DC143C', '#FFDB58', '#FF671F']); // Blue for US, Red for Russia, Yellow for China\r\n\r\n      const nodeSizeScale = d3.scaleSqrt()\r\n        .domain([0, d3.max(links, d => d.value)])\r\n        .range([5, 20]);\r\n\r\n      svg.attr(\"viewBox\", [0, 0, width, height]);\r\n\r\n      // Add container group for zooming\r\n      const container = svg.append(\"g\");\r\n\r\n      const defaultTransform = d3.zoomIdentity\r\n        .translate(width / 8, height / 4) // Pan to adjust initial position\r\n        .scale(0.75); // Zoom level\r\n\r\n      svg.call(d3.zoom()\r\n        .scaleExtent([0.5, 5])\r\n        .on(\"zoom\", (event) => {\r\n          container.attr(\"transform\", event.transform);\r\n        }));\r\n\r\n      svg.call(d3.zoom().transform, defaultTransform);\r\n\r\n      // Set the initial transform on the container\r\n      container.attr(\"transform\", defaultTransform);\r\n\r\n      // Draw links with lower opacity for aesthetic effect\r\n      const link = container.append(\"g\")\r\n        .attr(\"stroke-opacity\", 0.3)\r\n        .selectAll(\"line\")\r\n        .data(links)\r\n        .join(\"line\")\r\n        .attr(\"stroke\", \"#e0e0e0\")\r\n        .attr(\"stroke-width\", d => d.value / 100);\r\n\r\n      // Draw nodes with size and color based on group\r\n      const node = container.append(\"g\")\r\n        .selectAll(\"circle\")\r\n        .data(nodesArray)\r\n        .join(\"circle\")\r\n        .attr(\"r\", d => nodeSizeScale(links.find(link => link.target === d.name || link.source === d.name)?.value || 1))\r\n        .attr(\"fill\", d => {\r\n          if (d.group === 'supplier') return colorScale(d.name) || '#e0e0e0';\r\n          if (d.name === 'India') return colorScale(d.name) || '#e0e0e0';\r\n          return '#e0e0e0'; // Default color for recipients\r\n        })\r\n        .call(d3.drag()\r\n          .on(\"start\", (event, d) => {\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            d.fx = d.x;\r\n            d.fy = d.y;\r\n          })\r\n          .on(\"drag\", (event, d) => {\r\n            d.fx = event.x;\r\n            d.fy = event.y;\r\n          })\r\n          .on(\"end\", (event, d) => {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            d.fx = null;\r\n            d.fy = null;\r\n          })\r\n        );\r\n\r\n      // Add labels for each node\r\n      const label = container.append(\"g\")\r\n        .selectAll(\"text\")\r\n        .data(nodesArray)\r\n        .join(\"text\")\r\n        .attr(\"dx\", d => {\r\n          const nodeValue = links.find(link => link.target === d.name || link.source === d.name)?.value || 1;\r\n          return nodeSizeScale(nodeValue) + 5; // Add 5px padding after the radius\r\n        })\r\n        .attr(\"dy\", 4)\r\n        .attr(\"font-size\", \"16px\")\r\n        .attr(\"fill\", \"#e0e0e0\")\r\n        .text(d => d.name);\r\n\r\n      // Tooltip for node hover details\r\n      const tooltip = d3.select(\"body\").append(\"div\")\r\n        .style(\"position\", \"absolute\")\r\n        .style(\"background\", \"rgba(0, 0, 0, 0.8)\")\r\n        .style(\"color\", \"#e0e0e0\")\r\n        .style(\"padding\", \"12px\")\r\n        .style(\"border-radius\", \"8px\")\r\n        .style(\"font-size\", \"16px\")\r\n        .style(\"pointer-events\", \"none\")\r\n        .style(\"display\", \"none\");\r\n\r\n      node.on(\"mouseover\", (event, d) => {\r\n        tooltip.style(\"display\", \"block\")\r\n          .html(`\r\n            <strong>${d.name}</strong>\r\n          `);\r\n      })\r\n      .on(\"mousemove\", (event) => {\r\n        tooltip.style(\"top\", `${event.pageY + 10}px`)\r\n          .style(\"left\", `${event.pageX + 10}px`);\r\n      })\r\n      .on(\"mouseout\", () => tooltip.style(\"display\", \"none\"));\r\n\r\n      // Define simulation and apply forces\r\n      const simulation = d3.forceSimulation(nodesArray)\r\n        .force(\"link\", d3.forceLink(links).id(d => d.name).distance(75).strength(0.25))\r\n        .force(\"charge\", d3.forceManyBody().strength(-400))\r\n        .force(\"center\", d3.forceCenter(width / 2, height / 2))\r\n        .on(\"tick\", () => {\r\n          link\r\n            .attr(\"x1\", d => d.source.x)\r\n            .attr(\"y1\", d => d.source.y)\r\n            .attr(\"x2\", d => d.target.x)\r\n            .attr(\"y2\", d => d.target.y);\r\n\r\n          node\r\n            .attr(\"cx\", d => d.x)\r\n            .attr(\"cy\", d => d.y);\r\n\r\n          label\r\n            .attr(\"x\", d => d.x)\r\n            .attr(\"y\", d => d.y);\r\n        });\r\n\r\n      // Cleanup on unmount\r\n      return () => {\r\n        tooltip.remove();\r\n      };\r\n    });\r\n  }, [selectedYear]);\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100%'}}>\r\n      <h3 style={{textAlign: 'center', fontSize: '24px', color: '#e74c3c', paddingTop: '20px',}}>\r\n          Global Arms Trade Network {selectedYear}\r\n      </h3>\r\n\r\n      <input\r\n          type=\"range\"\r\n          min=\"1950\"\r\n          max=\"2023\"\r\n          value={selectedYear}\r\n          onChange={(e) => setSelectedYear(+e.target.value)}\r\n          style={{\r\n            width: '80%',\r\n            appearance: 'none',\r\n            height: '8px',\r\n            backgroundColor: 'gray',\r\n            borderRadius: '5px',\r\n            outline: 'none',\r\n            margin: '20px auto 10px',\r\n            display: 'block',\r\n            accentColor: '#e74c3c',\r\n          }}\r\n      />\r\n\r\n      <svg ref={svgRef} style={{ width: '100%', border: '3px solid #e74c3c', borderRadius: '8px' }}></svg>\r\n      \r\n    </div>\r\n  );  \r\n  };\r\n  \r\nexport default ForceDirectedGraph;\r\n","const countryCoordinates = {\r\n  'Afghanistan': [67.709953, 33.93911],\r\n  'Albania': [20.168331, 41.153332],\r\n  'Algeria': [1.659626, 28.033886],\r\n  'Angola': [17.873887, -11.202692],\r\n  'Argentina': [-63.616672, -38.416097],\r\n  'Armenia': [45.038189, 40.069099],\r\n  'Australia': [133.775136, -25.274398],\r\n  'Austria': [14.550072, 47.516231],\r\n  'Azerbaijan': [47.576927, 40.143105],\r\n  'Bahrain': [50.637772, 25.930414],\r\n  'Bangladesh': [90.356331, 23.684994],\r\n  'Belarus': [27.953389, 53.709807],\r\n  'Belgium': [4.469936, 50.503887],\r\n  'Bolivia': [-63.588653, -16.290154],\r\n  'Bosnia-Herzegovina': [17.679076, 43.915886],\r\n  'Brazil': [-51.92528, -14.235004],\r\n  'Bulgaria': [25.48583, 42.733883],\r\n  'Cambodia': [104.990963, 12.565679],\r\n  'Canada': [-106.346771, 56.130366],\r\n  'Central African Republic': [20.939444, 6.611111],\r\n  'Chad': [18.732207, 15.454166],\r\n  'Chile': [-71.542969, -35.675147],\r\n  'China': [104.195397, 35.86166],\r\n  'Colombia': [-74.297333, 4.570868],\r\n  'Congo': [15.827659, -0.228021],\r\n  'Costa Rica': [-83.753428, 9.748917],\r\n  \"Cote d'Ivoire\": [-5.54708, 7.539989],\r\n  'Croatia': [15.2, 45.1],\r\n  'Cuba': [-77.781167, 21.521757],\r\n  'Cyprus': [33.429859, 35.126413],\r\n  'Czechia': [15.472962, 49.817492],\r\n  'Czechoslovakia': [15.5, 49.75],\r\n  'Denmark': [9.501785, 56.26392],\r\n  'Dominican Republic': [-70.162651, 18.735693],\r\n  'DR Congo': [21.758664, -4.038333],\r\n  'East_Germany': [13.404954, 52.520008],\r\n  'Ecuador': [-78.183406, -1.831239],\r\n  'Egypt': [30.802498, 26.820553],\r\n  'El Salvador': [-88.89653, 13.794185],\r\n  'Eritrea': [39.782334, 15.179384],\r\n  'Ethiopia': [40.489673, 9.145],\r\n  'Finland': [25.748151, 61.92411],\r\n  'France': [2.213749, 46.227638],\r\n  'Georgia': [43.356892, 42.315407],\r\n  'Germany': [10.451526, 51.165691],\r\n  'Greece': [21.824312, 39.074208],\r\n  'Guatemala': [-90.230759, 15.783471],\r\n  'Guinea': [-9.696645, 9.945587],\r\n  'Guinea-Bissau': [-15.180413, 11.803749],\r\n  'Haiti': [-72.285215, 18.971187],\r\n  'Honduras': [-86.241905, 15.199999],\r\n  'Hungary': [19.503304, 47.162494],\r\n  'India': [78.96288, 20.593684],\r\n  'Indonesia': [113.921327, -0.789275],\r\n  'Iran': [53.688046, 32.427908],\r\n  'Iraq': [43.679291, 33.223191],\r\n  'Ireland': [-8.24389, 53.41291],\r\n  'Israel': [34.851612, 31.046051],\r\n  'Italy': [12.56738, 41.87194],\r\n  'Japan': [138.252924, 36.204824],\r\n  'Jordan': [36.238414, 30.585164],\r\n  'Kazakhstan': [66.923684, 48.019573],\r\n  'Kenya': [37.906193, -0.023559],\r\n  'Kuwait': [47.481766, 29.31166],\r\n  'Laos': [102.495496, 19.85627],\r\n  'Latvia': [24.603189, 56.879635],\r\n  'Lebanon': [35.862285, 33.854721],\r\n  'Libya': [17.228331, 26.3351],\r\n  'Madagascar': [46.869107, -18.766947],\r\n  'Malaysia': [101.975766, 4.210484],\r\n  'Mali': [-3.996166, 17.570692],\r\n  'Mauritania': [-10.940835, 21.00789],\r\n  'Mexico': [-102.552784, 23.634501],\r\n  'Mongolia': [103.846656, 46.862496],\r\n  'Morocco': [-7.09262, 31.791702],\r\n  'Mozambique': [35.529562, -18.665695],\r\n  'Myanmar': [95.956223, 21.913965],\r\n  'Namibia': [18.49041, -22.95764],\r\n  'Nepal': [84.124008, 28.394857],\r\n  'Netherlands': [5.291266, 52.132633],\r\n  'New Zealand': [174.885971, -40.900557],\r\n  'Nicaragua': [-85.207229, 12.865416],\r\n  'Nigeria': [8.675277, 9.081999],\r\n  'North Macedonia': [21.745275, 41.608635],\r\n  'North Yemen': [48.516388, 15.552727],\r\n  'North_Korea': [127.510093, 40.339852],\r\n  'Norway': [8.468946, 60.472024],\r\n  'Oman': [55.923255, 21.512583],\r\n  'Pakistan': [69.345116, 30.375321],\r\n  'Paraguay': [-58.443832, -23.442503],\r\n  'Peru': [-75.015152, -9.189967],\r\n  'Philippines': [121.774017, 12.879721],\r\n  'Poland': [19.145136, 51.919438],\r\n  'Portugal': [-8.224454, 39.399872],\r\n  'Qatar': [51.183884, 25.354826],\r\n  'Romania': [24.96676, 45.943161],\r\n  'Rwanda': [29.873888, -1.940278],\r\n  'Saudi Arabia': [45.079162, 23.885942],\r\n  'Serbia': [21.005859, 44.016521],\r\n  'Sierra Leone': [-11.779889, 8.460555],\r\n  'Singapore': [103.819836, 1.352083],\r\n  'Slovakia': [19.699024, 48.669026],\r\n  'Somalia': [46.199616, 5.152149],\r\n  'South Africa': [22.937506, -30.559482],\r\n  'South Korea': [127.766922, 35.907757],\r\n  'South Sudan': [29.694924, 7.862685],\r\n  'South Vietnam': [106.6297, 10.8231],\r\n  'South Yemen': [45.0367, 12.805],\r\n  'Spain': [-3.74922, 40.463667],\r\n  'Sri Lanka': [80.771797, 7.873054],\r\n  'Sudan': [30.217636, 12.862807],\r\n  'Sweden': [18.643501, 60.128161],\r\n  'Switzerland': [8.227512, 46.818188],\r\n  'Syria': [38.996815, 34.802075],\r\n  'Taiwan': [120.960515, 23.69781],\r\n  'Tajikistan': [71.276093, 38.861034],\r\n  'Tanzania': [34.888822, -6.369028],\r\n  'Thailand': [100.992541, 15.870032],\r\n  'Togo': [0.824782, 8.619543],\r\n  'Tunisia': [9.537499, 33.886917],\r\n  'Turkiye': [35.243322, 38.963745],\r\n  'Turkmenistan': [59.556278, 38.969719],\r\n  'UAE': [53.847818, 23.424076],\r\n  'Uganda': [32.290275, 1.373333],\r\n  'Ukraine': [31.16558, 48.379433],\r\n  'United_Kingdom': [-3.435973, 55.378051],\r\n  'United States': [-105.53924145160018, 41.29853739464161],\r\n  'Uruguay': [-55.765835, -32.522779],\r\n  'Venezuela': [-66.58973, 6.42375],\r\n  'Viet Nam': [108.277199, 14.058324],\r\n  'Yemen': [48.516388, 15.552727],\r\n  'Yugoslavia': [21.005859, 44.016521],\r\n  'Zambia': [27.849332, -13.133897],\r\n  'Zimbabwe': [29.154857, -19.015438],\r\n  'Soviet_Union': [105.318756, 61.52401],\r\n  'Russia': [105.318756, 61.52401],\r\n  'Kyrgyzstan': [74.766098, 41.20438],\r\n  'Slovenia': [14.995463, 46.151241],\r\n  'Moldova': [28.369885, 47.411631],\r\n  'Uzbekistan': [64.5853, 41.3775],\r\n  'Botswana': [24.6849, -22.3285],\r\n  'Burkina Faso': [-1.5616, 12.2383],\r\n  'Cabo Verde': [-23.0418, 16.5388],\r\n  'Cameroon': [12.3547, 7.3697],\r\n  'Djibouti': [42.5903, 11.8251],\r\n  'Estonia': [25.0136, 58.5953],\r\n  'Gabon': [11.6094, -0.8037],\r\n  'Ghana': [-1.0232, 7.9465],\r\n  'Guyana': [-58.9302, 4.8604],\r\n  'Jamaica': [-77.2975, 18.1096],\r\n  'Kosovo': [20.9029, 42.6026],\r\n  'Lithuania': [23.8813, 55.1694],\r\n  'Luxembourg': [6.1296, 49.8153],\r\n  'Maldives': [73.2207, 3.2028],\r\n  'Malta': [14.3754, 35.9375],\r\n  'Montenegro': [19.3744, 42.7087],\r\n  'Niger': [8.0817, 17.6078],\r\n  'Senegal': [-14.4524, 14.4974],\r\n  'Antigua and Barbuda': [-61.7964, 17.0608],\r\n  'Benin': [2.3158, 9.3077],\r\n  'Brunei': [114.7277, 4.5353],\r\n  'Equatorial Guinea': [10.2679, 1.6508],\r\n  'Gambia': [-15.3101, 13.4432],\r\n  'Malawi': [34.3015, -13.2543],\r\n  'Mauritius': [57.5522, -20.3484],\r\n  'Seychelles': [55.4919, -4.6796],\r\n  'Suriname': [-56.0278, 3.9193],\r\n  'Trinidad and Tobago': [-61.2225, 10.6918]\r\n};\r\n\r\nexport default countryCoordinates;\r\n","import React, { useEffect, useState } from 'react';\r\nimport DeckGL from '@deck.gl/react';\r\nimport { ArcLayer } from '@deck.gl/layers';\r\nimport { Map } from 'react-map-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport countryCoordinates from '/public/countryCoordinates';\r\n\r\nconst MAPBOX_TOKEN = 'pk.eyJ1Ijoia3dwdGhlZ3JlYXQiLCJhIjoiY20zajljd3Z2MDExZjJycHRvcGE0dm9uYyJ9.9IwsWKd3rM0aVxjXND4LUQ'; // Replace with your actual Mapbox token\r\n\r\n// Function to extract the year from a record dynamically\r\nfunction extractYearFromRecord(record) {\r\n  // Example: If the record has a `date` field with a year, extract it\r\n  if (record.date) {\r\n    const match = record.date.match(/\\b(20\\d{2})\\b/); // Match years like 2000-2099\r\n    return match ? parseInt(match[0], 10) : null;\r\n  }\r\n\r\n  // If no valid year can be extracted, return null\r\n  /*\r\n  console.warn('Year not found for record:', record);\r\n  */\r\n  return null;\r\n}\r\n\r\nfunction WorldChord() {\r\n  const [data, setData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [year, setYear] = useState(2014); // Default year for the slider filter\r\n  const [selectedCountry, setSelectedCountry] = useState('all');\r\n  const [hoveredInfo, setHoveredInfo] = useState(null);\r\n  \r\n  const countryColors = {\r\n    \"United States\": [70, 130, 180], // Steel Blue (rgb format)\r\n    \"Russia\": [220, 20, 60], // Crimson (rgb format)\r\n    \"China\": [255, 219, 88], // Light Gold (rgb format)\r\n    // Add more countries and colors as needed\r\n  };\r\n  \r\n  useEffect(() => {\r\n    // Fetch data from converted_data.json\r\n    fetch(`/data/processed/converted_data.json`)\r\n      .then(response => response.json())\r\n      .then(fetchedData => {\r\n\r\n        // Add the `year` field dynamically if missing\r\n        const updatedData = fetchedData.map(d => ({\r\n          ...d,\r\n          year: d.year || extractYearFromRecord(d) // Add year dynamically if needed\r\n        }));\r\n\r\n        setData(updatedData);\r\n\r\n        // Filter the data for the initial year\r\n        const initialFilteredData = updatedData.filter(d => d.year === year);\r\n        setFilteredData(initialFilteredData);\r\n      })\r\n      .catch(error => console.error('Error loading JSON data:', error));\r\n  }, [year]);\r\n\r\n  useEffect(() => {\r\n    // Update filtered data when year changes\r\n    if (data.length > 0) {\r\n      const updatedFilteredData = data.filter(d => d.year === year);\r\n      setFilteredData(updatedFilteredData);\r\n    }\r\n  }, [year, data]);\r\n\r\n  const filteredByCountry = filteredData.filter(d => {\r\n    if (selectedCountry === 'all') return true; // Show all if 'all' is selected\r\n    return d.origin.toLowerCase() === selectedCountry.toLowerCase(); // Filter by selected country\r\n  });\r\n  // Filter out invalid records\r\n  const validFilteredData = filteredByCountry.filter(d => {\r\n    const source = countryCoordinates[d.origin];\r\n    const target = countryCoordinates[d.destination];\r\n\r\n    if (![\"China\", \"Russia\", \"United States\"].includes(d.origin)) {\r\n      return false; // Skip records where the origin is not one of these\r\n    }\r\n\r\n    // Log missing countries\r\n    /*\r\n    if (!source) console.warn(`Missing source coordinates for: ${d.origin}`);\r\n    if (!target) console.warn(`Missing target coordinates for: ${d.destination}`);\r\n    */\r\n    // Keep only valid records\r\n    return source && target;\r\n  });\r\n\r\n  const layers = new ArcLayer({\r\n    id: 'arc-layer',\r\n    data: validFilteredData, // Use only validated data\r\n    getSourcePosition: d => countryCoordinates[d.origin],\r\n    getTargetPosition: d => countryCoordinates[d.destination],\r\n    getSourceColor: d => countryColors[d.origin] || [255, 255, 255],\r\n    getTargetColor: d => countryColors[d.origin] || [0, 128, 255], // Default to blue if country color is missing\r\n    getWidth: d => Math.log(d.quantity + 1),\r\n    pickable: true,\r\n    getTooltip: ({ object }) => {\r\n      return object\r\n        ? `${object.origin} to ${object.destination}: ${object.quantity} ${object.weapon} (${object.year})`\r\n        : null;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100%', height: '80vh'}}>\r\n\r\n      <h3 style={{textAlign: 'center', fontSize: '24px', color: '#e74c3c', paddingTop: '20px',}}>\r\n          Global Arms Proliferation {year}\r\n      </h3>\r\n\r\n      <input\r\n          type=\"range\"\r\n          min=\"1950\"\r\n          max=\"2023\"\r\n          value={year}\r\n          onChange={(e) => setYear(+e.target.value)}\r\n          style={{\r\n            width: '80%',\r\n            appearance: 'none',\r\n            height: '8px',\r\n            backgroundColor: 'gray',\r\n            borderRadius: '5px',\r\n            outline: 'none',\r\n            margin: '20px auto 10px',\r\n            display: 'block',\r\n            accentColor: '#e74c3c',\r\n          }}\r\n      />\r\n      <div style={{position: 'absolute', bottom: 0, width: '100%', height: 'calc(100% - 90px)'}}>\r\n        <DeckGL\r\n          style={{ width: '100%', height: '100%', border: '3px solid #e74c3c', borderRadius: '8px' }}\r\n          initialViewState={{\r\n            latitude: 20,\r\n            longitude: 0,\r\n            zoom: 1.5,\r\n            pitch: 30\r\n          }}\r\n          controller={true}\r\n          layers={[layers]}onHover={(info) => {\r\n            if (info.object) {\r\n              setHoveredInfo(info);\r\n            } else {\r\n              setHoveredInfo(null);\r\n            }\r\n          }}\r\n        >\r\n          <Map\r\n            mapboxAccessToken={MAPBOX_TOKEN}\r\n            mapStyle=\"mapbox://styles/mapbox/light-v10\"\r\n            attributionControl={false}\r\n            interactiveLayerIds={['arc-layer']}\r\n          />\r\n          {hoveredInfo && hoveredInfo.object && (\r\n              <div\r\n                style={{\r\n                  position: 'absolute',\r\n                  left: hoveredInfo.x,\r\n                  top: hoveredInfo.y,\r\n                  backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n                  color: 'e0e0e0',\r\n                  padding: '8px 12px',\r\n                  borderRadius: '8px',\r\n                  pointerEvents: 'none',\r\n                  fontSize: '16px',\r\n                  whiteSpace: 'nowrap',\r\n                }}\r\n              >\r\n                {`${hoveredInfo.object.origin} to ${hoveredInfo.object.destination}: ${hoveredInfo.object.quantity}`}\r\n              </div>\r\n            )}\r\n        </DeckGL>\r\n\r\n      <div style={{\r\n        position: 'absolute',\r\n        height: '80px',\r\n        width: '120px',\r\n        top: '20px',\r\n        left: '20px',\r\n        background: 'rgba(0, 0, 0, 0.9)',\r\n        padding: '10px',\r\n        borderRadius: '8px',\r\n        fontSize: '14px',\r\n        color: '#e0e0e0',\r\n      }}>\r\n        <p style={{ display: 'block', marginBottom: '10px', color: '#e0e0e0', fontSize: '14px', fontWeight: 'bold'}}>Select Country</p>\r\n\r\n        <select \r\n          name=\"countrySelector\"\r\n          value={selectedCountry}\r\n          onChange={(e) => setSelectedCountry(e.target.value)}\r\n          style={{\r\n            position: 'absolute',\r\n            padding: '6px 10px',\r\n            width: '100px',\r\n            color: '#e0e0e0',\r\n            backgroundColor: 'black',\r\n            borderRadius: '8px',\r\n            fontSize: '14px',\r\n          }}\r\n        >\r\n          <option value=\"all\">All</option>\r\n          <option value=\"United States\">US</option>\r\n          <option value=\"Russia\">Russia</option>\r\n          <option value=\"China\">China</option>\r\n        </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorldChord;\r\n","import React from 'react';\r\nimport MigrationMap from './graphs/003_MigrationMap';\r\nimport ForceDirectedGraph from './graphs/003_ForceDirectedGraph';\r\nimport WorldChord from './graphs/003_WorldChord';\r\n\r\nconst alliance = () => {\r\n  return (\r\n    <section id=\"003\">\r\n      <p className=\"custom-title\" style={{ cssText: 'margin-top: 0' }}>\r\n        Strength in Alliance & Partnership\r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n        The <span style={{ color: \"#4682B4\" }}>United States</span> uses arms exports strategically to build alliances and shape regional power dynamics, especially against major powers like \r\n        <span style={{ color: \"#DC143C\" }}> Russia</span> and <span style={{ color: \"#FFDB58\" }}>China</span>. \r\n        By equipping allies in key areas—such as <span style={{ color: \"#D2B48C\" }}>Eastern Europe</span>, <span style={{ color: \"#D2B48C\" }}>the Middle East</span>, and <span style={{ color: \"#D2B48C\" }}>Asia-Pacific</span>—the <span style={{ color: \"#4682B4\" }}>United States</span> bolsters defense, deters aggression, and strengthens long-term partnerships. \r\n        These alliances, supported by advanced weaponry, create a coordinated front that counters <span style={{ color: \"#FFDB58\" }}>China's</span> and <span style={{ color: \"#DC143C\" }}>Russia's</span> influence.\r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n        In contrast, <span style={{ color: \"#DC143C\" }}>Russia</span> and <span style={{ color: \"#FFDB58\" }}>China</span> use arms transfers to establish footholds in their own spheres, particularly in the <span style={{ color: \"#D2B48C\" }}>Middle East</span>, <span style={{ color: \"#D2B48C\" }}>Africa</span>, and <span style={{ color: \"#D2B48C\" }}>Southeast Asia</span>. \r\n        This distribution evidences an effort by the <span style={{ color: \"#4682B4\" }}>US</span>, <span style={{ color: \"#FFDB58\" }}> China</span>, and <span style={{ color: \"#DC143C\" }}>Russia</span> to expand their spheres of influence or contain each other.\r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n        A quick case study, as shown on the map, highlights a significant increase in <span style={{ color: \"#FFDB58\" }}>China's</span> arms trade with <span style={{ color: \"#D2B48C\" }}>Africa</span> prior to the initiation of the Belt and Road Initiative, which officially started in 2013. This emphasizes China's broader geopolitical strategy of leveraging arms trade to secure access to resources and establish influence in developing regions.\r\n      </p>\r\n      \r\n      <div className=\"chart-container\" style={{ width: '80%' }}>\r\n        <WorldChord />\r\n      </div>\r\n\r\n      <p className=\"custom-title\">\r\n        An Alternative Way to Visualize International Relations: Force Directed Graph \r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n        This Global Arms Trade Network further illustrates a complex geopolitical chessboard where the <span style={{ color: \"#4682B4\" }}>United States</span>, <span style={{ color: \"#DC143C\" }}>Russia</span>, and <span style={{ color: \"#FFDB58\" }}>China </span>\r\n        use arms exports to expand influence and secure alliances across strategic regions. Each superpower’s network centers around key allies:\r\n      </p>\r\n      \r\n      <ul>\r\n        <li>\r\n          The <span style={{ color: \"#4682B4\" }}>United States</span> supports countries in \r\n          <span style={{ color: \"#D2B48C\", fontStyle: \"italic\" }}> Europe, the Middle East, and Asia-Pacific</span>, reinforcing a defense line against rivals.\r\n        </li><br/>\r\n        <li>\r\n          <span style={{ color: \"#DC143C\" }}>Russia</span> supplies nations in \r\n          <span style={{ color: \"#D2B48C\", fontStyle: \"italic\" }}> Eastern Europe and Central Asia</span> to counter NATO's reach.\r\n        </li><br/>\r\n        <li>\r\n          <span style={{ color: \"#FFDB58\" }}>China</span> arms countries in \r\n          <span style={{ color: \"#D2B48C\", fontStyle: \"italic\" }}> Southeast Asia, Africa, and South Asia</span>, expanding its foothold in resource-rich areas.\r\n        </li><br/>\r\n        <li>\r\n          Countries like <span style={{ color: \"#FF671F\" }}>India</span> illustrate a multilateral approach, balancing relationships with the <span style={{ color: \"#4682B4\" }}>US</span>, <span style={{ color: \"#DC143C\" }}>Russia</span>, and others.\r\n        </li>\r\n      </ul> \r\n\r\n      <p className=\"custom-paragraph\">    \r\n        Through this network, arms transfers reveal interdependent alliances, bolstered influence, and efforts to contain rivals. The map underscores how arms exports are not just about military strength but also about shaping the strategic relationships that define the global order.\r\n      </p>\r\n\r\n      <div className=\"chart-container\" style={{ width: '80%' }}>\r\n        <ForceDirectedGraph />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default alliance;\r\n"],"names":["svgRef","useRef","_useState2","useState","selectedYear","setSelectedYear","useEffect","d3","then","rawData","data","svg","current","selectAll","remove","nodesArray","links","nodeMap","Map","forEach","supplierEntry","supplier","has","set","name","group","push","recipients","recipientEntry","recipient","tradeValue","years","source","target","value","colorScale","domain","range","nodeSizeScale","d","attr","container","append","defaultTransform","translate","width","height","scale","call","scaleExtent","on","event","transform","link","join","node","_links$find","find","active","simulation","alphaTarget","restart","fx","x","fy","y","label","_links$find2","nodeValue","text","tooltip","style","html","concat","pageY","pageX","force","id","distance","strength","React","position","textAlign","fontSize","color","paddingTop","type","min","max","onChange","e","appearance","backgroundColor","borderRadius","outline","margin","display","accentColor","ref","border","extractYearFromRecord","record","date","match","parseInt","_slicedToArray","setData","_useState4","filteredData","setFilteredData","_useState6","year","setYear","_useState8","selectedCountry","setSelectedCountry","_useState10","hoveredInfo","setHoveredInfo","countryColors","fetch","response","json","fetchedData","updatedData","map","_objectSpread","initialFilteredData","filter","error","console","length","updatedFilteredData","validFilteredData","origin","toLowerCase","countryCoordinates","destination","includes","layers","ArcLayer","getSourcePosition","getTargetPosition","getSourceColor","getTargetColor","getWidth","Math","log","quantity","pickable","getTooltip","_ref","object","weapon","bottom","DeckGL","initialViewState","latitude","longitude","zoom","pitch","controller","onHover","info","mapboxAccessToken","mapStyle","attributionControl","interactiveLayerIds","left","top","padding","pointerEvents","whiteSpace","background","marginBottom","fontWeight","className","cssText","WorldChord","fontStyle","ForceDirectedGraph"],"sourceRoot":""}