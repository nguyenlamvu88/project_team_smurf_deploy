"use strict";(self.webpackChunkproject_team_smurf_deploy=self.webpackChunkproject_team_smurf_deploy||[]).push([[805],{4136:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ _003_alliance)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(6540);\n// EXTERNAL MODULE: ./node_modules/d3/src/index.js + 272 modules\nvar src = __webpack_require__(1445);\n;// ./src/components/graphs/003_MigrationMap.js\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\n\nvar MigrationMap = function MigrationMap() {\n  var svgRef = useRef();\n  var width = 800;\n  var height = 400;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    worldGeoJSON = _useState2[0],\n    setWorldGeoJSON = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    countryCentroids = _useState4[0],\n    setCountryCentroids = _useState4[1];\n  var _useState5 = useState({\n      "United States": [],\n      "Russia": [],\n      "China": []\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    tradeData = _useState6[0],\n    setTradeData = _useState6[1];\n  var _useState7 = useState(2014),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedYear = _useState8[0],\n    setSelectedYear = _useState8[1];\n  var _useState9 = useState("All"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedCountry = _useState10[0],\n    setSelectedCountry = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    error = _useState12[0],\n    setError = _useState12[1];\n  var originColors = {\n    "United States": "#4682B4",\n    "Russia": "#DC143C",\n    "China": "#FFDB58",\n    "All": "#9467bd"\n  };\n  var urls = {\n    "United States": \'/data/processed/processed_recipients_of_us_arms_hierarchical.json\',\n    "Russia": \'/data/processed/processed_recipients_of_russia_arms_hierarchical.json\',\n    "China": \'/data/processed/processed_recipients_of_china_arms_hierarchical.json\'\n  };\n  var geoJSONUrl = \'/countries-110m.json\';\n  var normalizeCountryName = function normalizeCountryName(name) {\n    var mapping = {\n      "United States of America": "United States",\n      "USA": "United States",\n      "Russian Federation": "Russia",\n      "People\'s Republic of China": "China"\n    };\n    return mapping[name] || name;\n  };\n\n  // Load world GeoJSON data\n  useEffect(function () {\n    d3.json(geoJSONUrl).then(function (worldData) {\n      var centroids = {};\n      topojson.feature(worldData, worldData.objects.countries).features.forEach(function (feature) {\n        var countryName = feature.properties.name;\n        centroids[normalizeCountryName(countryName)] = d3.geoCentroid(feature);\n      });\n      setCountryCentroids(centroids);\n      setWorldGeoJSON(worldData);\n    })["catch"](function () {\n      setError("Error loading map data.");\n    });\n  }, []);\n\n  // Load trade data for each country\n  useEffect(function () {\n    Object.keys(urls).forEach(function (country) {\n      d3.json(urls[country]).then(function (data) {\n        if (data && data.recipients) {\n          setTradeData(function (prevData) {\n            return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, country, data.recipients));\n          });\n        } else {\n          setError("Failed to load ".concat(country, " trade data."));\n        }\n      })["catch"](function () {\n        setError("Error loading ".concat(country, " trade data."));\n      });\n    });\n  }, []);\n  useEffect(function () {\n    if (!worldGeoJSON || Object.values(tradeData).every(function (data) {\n      return data.length === 0;\n    })) return;\n    var svg = d3.select(svgRef.current).attr(\'viewBox\', "0 0 ".concat(width, " ").concat(height)).style(\'width\', \'100%\').style(\'height\', \'auto\');\n    svg.selectAll("*").remove();\n    var projection = d3.geoMercator().center([0, 20]).scale(130).translate([width / 2, height / 2]);\n    var path = d3.geoPath().projection(projection);\n    var mapContainer = svg.append("g").attr("class", "map-container");\n    var zoom = d3.zoom().scaleExtent([1, 8]).on("zoom", function (event) {\n      mapContainer.attr("transform", event.transform);\n    });\n    svg.call(zoom);\n\n    // Create tooltip div\n    var tooltip = d3.select("body").append("div").attr("class", "tooltip").style("position", "absolute").style("background", "rgba(0, 0, 0, 0.8)").style("color", "e0e0e0").style("padding", "8px 12px").style("border-radius", "4px").style("pointer-events", "none").style("font-size", "16px").style("display", "none");\n\n    // Draw countries\n    mapContainer.selectAll("path.country").data(topojson.feature(worldGeoJSON, worldGeoJSON.objects.countries).features).enter().append("path").attr("class", "country").attr("d", path).attr("fill", "#ccc").attr("stroke", "#333").attr("stroke-width", 1.5);\n\n    // Draw trade lines and circles for each country\n    var countriesToShow = selectedCountry === "All" ? ["United States", "Russia", "China"] : [selectedCountry];\n    countriesToShow.forEach(function (country) {\n      var validTrades = tradeData[country].map(function (recipient) {\n        var originCoords = countryCentroids[country];\n        var destCountry = normalizeCountryName(recipient.recipient);\n        var destCoords = countryCentroids[destCountry];\n        if (originCoords && destCoords) {\n          var tradeValue = recipient.years[selectedYear] || 0;\n          return {\n            originCountry: country,\n            destCountry: destCountry,\n            originX: projection(originCoords)[0],\n            originY: projection(originCoords)[1],\n            destX: projection(destCoords)[0],\n            destY: projection(destCoords)[1],\n            tradeValue: tradeValue\n          };\n        }\n        return null;\n      }).filter(function (d) {\n        return d && d.tradeValue > 0;\n      });\n      var topRecipients = validTrades.sort(function (a, b) {\n        return b.tradeValue - a.tradeValue;\n      }).slice(0, 5).map(function (d) {\n        return d.destCountry;\n      });\n      var maxTradeValue = d3.max(validTrades, function (d) {\n        return d.tradeValue;\n      }) || 0;\n      var strokeScale = d3.scaleSqrt().domain([0, maxTradeValue]).range([1, 4]);\n\n      // Draw trade lines\n      mapContainer.selectAll("line.trade-line-".concat(country)).data(validTrades).enter().append("line").attr("class", "trade-line-".concat(country)).attr("x1", function (d) {\n        return d.originX;\n      }).attr("y1", function (d) {\n        return d.originY;\n      }).attr("x2", function (d) {\n        return d.destX;\n      }).attr("y2", function (d) {\n        return d.destY;\n      }).attr("stroke", originColors[country]).attr("stroke-width", function (d) {\n        return strokeScale(d.tradeValue);\n      }).on("mouseover", function (event, d) {\n        tooltip.style("display", "block").html("\\n              <strong>Origin:</strong> ".concat(d.originCountry, "<br/>\\n              <strong>Destination:</strong> ").concat(d.destCountry, "<br/>\\n              <strong>Trade Value:</strong> ").concat(d.tradeValue, "B USD\\n            "));\n      }).on("mousemove", function (event) {\n        tooltip.style("left", "".concat(event.pageX + 10, "px")).style("top", "".concat(event.pageY + 10, "px"));\n      }).on("mouseout", function () {\n        tooltip.style("display", "none");\n      });\n\n      // Draw trade circles\n      mapContainer.selectAll("circle.trade-circle-".concat(country)).data(validTrades).enter().append("circle").attr("class", "trade-circle-".concat(country)).attr("cx", function (d) {\n        return d.destX;\n      }).attr("cy", function (d) {\n        return d.destY;\n      }).attr("r", function (d) {\n        return topRecipients.includes(d.destCountry) ? 6 : 3;\n      }).attr("fill", function (d) {\n        return topRecipients.includes(d.destCountry) ? "#8A2BE2" : originColors[country];\n      }).on("mouseover", function (event, d) {\n        tooltip.style("display", "block").html("\\n              <strong>Origin:</strong> ".concat(d.originCountry, "<br/>\\n              <strong>Destination:</strong> ").concat(d.destCountry, "<br/>\\n              <strong>Trade Value:</strong> ").concat(d.tradeValue, "B USD\\n            "));\n      }).on("mousemove", function (event) {\n        tooltip.style("left", "".concat(event.pageX + 10, "px")).style("top", "".concat(event.pageY + 10, "px"));\n      }).on("mouseout", function () {\n        tooltip.style("display", "none");\n      });\n    });\n    return function () {\n      return tooltip.remove();\n    };\n  }, [worldGeoJSON, tradeData, countryCentroids, selectedYear, selectedCountry]);\n\n  // Legend Component\n  var Legend = function Legend() {\n    return /*#__PURE__*/React.createElement("div", {\n      style: {\n        position: \'absolute\',\n        height: \'190px\',\n        width: \'170px\',\n        bottom: \'20px\',\n        left: \'20px\',\n        background: \'rgba(0, 0, 0, 0.9)\',\n        padding: \'10px\',\n        borderRadius: \'8px\',\n        fontSize: \'14px\',\n        color: \'#e0e0e0\'\n      }\n    }, /*#__PURE__*/React.createElement("div", {\n      style: {\n        marginBottom: \'10px\'\n      }\n    }, /*#__PURE__*/React.createElement("strong", null, "Origin Countries")), Object.entries(originColors).filter(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n        country = _ref2[0];\n      return country !== "All";\n    }).map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        country = _ref4[0],\n        color = _ref4[1];\n      return /*#__PURE__*/React.createElement("div", {\n        key: country,\n        style: {\n          display: \'flex\',\n          alignItems: \'center\',\n          marginBottom: \'10px\'\n        }\n      }, /*#__PURE__*/React.createElement("div", {\n        style: {\n          width: \'12px\',\n          height: \'12px\',\n          backgroundColor: color,\n          marginRight: \'8px\',\n          borderRadius: \'50%\'\n        }\n      }), /*#__PURE__*/React.createElement("span", null, country));\n    }), /*#__PURE__*/React.createElement("div", {\n      style: {\n        marginTop: \'10px\'\n      }\n    }, /*#__PURE__*/React.createElement("strong", null, "Recipient Importance")), /*#__PURE__*/React.createElement("div", {\n      style: {\n        display: \'flex\',\n        alignItems: \'center\',\n        marginTop: \'5px\'\n      }\n    }, /*#__PURE__*/React.createElement("svg", {\n      width: "20",\n      height: "20",\n      style: {\n        marginRight: \'6px\'\n      }\n    }, /*#__PURE__*/React.createElement("circle", {\n      cx: "10",\n      cy: "10",\n      r: "3",\n      fill: "#e0e0e0"\n    })), /*#__PURE__*/React.createElement("span", null, "Normal Recipient")), /*#__PURE__*/React.createElement("div", {\n      style: {\n        display: \'flex\',\n        alignItems: \'center\',\n        marginTop: \'5px\'\n      }\n    }, /*#__PURE__*/React.createElement("svg", {\n      width: "20",\n      height: "20",\n      style: {\n        marginRight: \'6px\'\n      }\n    }, /*#__PURE__*/React.createElement("circle", {\n      cx: "10",\n      cy: "10",\n      r: "6",\n      fill: "#8A2BE2"\n    })), /*#__PURE__*/React.createElement("span", null, "Top Recipient")));\n  };\n  return /*#__PURE__*/React.createElement("div", {\n    style: {\n      position: \'relative\',\n      width: \'100%\'\n    }\n  }, /*#__PURE__*/React.createElement("h3", {\n    style: {\n      textAlign: \'center\',\n      fontSize: \'24px\',\n      color: \'#e74c3c\',\n      paddingTop: \'20px\'\n    }\n  }, "Global Arms Proliferation ", selectedYear), error && /*#__PURE__*/React.createElement("div", {\n    style: {\n      color: \'red\',\n      position: \'absolute\',\n      top: \'60px\',\n      left: \'50%\',\n      transform: \'translateX(-50%)\',\n      background: \'rgba(255,255,255,0.8)\',\n      padding: \'5px\',\n      borderRadius: \'4px\'\n    }\n  }, error), /*#__PURE__*/React.createElement("input", {\n    type: "range",\n    min: "1950",\n    max: "2023",\n    value: selectedYear,\n    onChange: function onChange(e) {\n      return setSelectedYear(+e.target.value);\n    },\n    style: {\n      width: \'80%\',\n      appearance: \'none\',\n      height: \'8px\',\n      backgroundColor: \'gray\',\n      borderRadius: \'5px\',\n      outline: \'none\',\n      margin: \'20px auto 10px\',\n      display: \'block\',\n      accentColor: \'#e74c3c\'\n    }\n  }), /*#__PURE__*/React.createElement("svg", {\n    ref: svgRef,\n    style: {\n      width: \'100%\',\n      height: \'80vh\',\n      border: \'3px solid #e74c3c\',\n      borderRadius: \'8px\'\n    }\n  }), worldGeoJSON && Object.values(tradeData).some(function (data) {\n    return data.length > 0;\n  }) && /*#__PURE__*/React.createElement(Legend, null), /*#__PURE__*/React.createElement("div", {\n    style: {\n      position: \'absolute\',\n      bottom: \'220px\',\n      left: \'20px\',\n      color: \'black\',\n      display: \'flex\',\n      flexDirection: \'column\'\n    }\n  }, /*#__PURE__*/React.createElement("label", {\n    htmlFor: "country",\n    style: {\n      display: \'block\',\n      marginBottom: \'10px\',\n      color: \'#e0e0e0\',\n      fontSize: \'14px\',\n      fontWeight: \'bold\'\n    }\n  }, "Select Country"), /*#__PURE__*/React.createElement("select", {\n    id: "country",\n    value: selectedCountry,\n    onChange: function onChange(e) {\n      return setSelectedCountry(e.target.value);\n    },\n    style: {\n      fontSize: \'12px\',\n      padding: \'6px 10px\',\n      width: \'170px\',\n      color: \'#e0e0e0\',\n      borderRadius: \'8px\',\n      backgroundColor: \'black\'\n    }\n  }, /*#__PURE__*/React.createElement("option", {\n    value: "All"\n  }, "All"), /*#__PURE__*/React.createElement("option", {\n    value: "United States"\n  }, "United States"), /*#__PURE__*/React.createElement("option", {\n    value: "Russia"\n  }, "Russia"), /*#__PURE__*/React.createElement("option", {\n    value: "China"\n  }, "China"))));\n};\n/* harmony default export */ const _003_MigrationMap = ((/* unused pure expression or super */ null && (MigrationMap)));\n;// ./src/components/graphs/003_ForceDirectedGraph.js\nfunction _003_ForceDirectedGraph_slicedToArray(r, e) { return _003_ForceDirectedGraph_arrayWithHoles(r) || _003_ForceDirectedGraph_iterableToArrayLimit(r, e) || _003_ForceDirectedGraph_unsupportedIterableToArray(r, e) || _003_ForceDirectedGraph_nonIterableRest(); }\nfunction _003_ForceDirectedGraph_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _003_ForceDirectedGraph_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _003_ForceDirectedGraph_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _003_ForceDirectedGraph_arrayLikeToArray(r, a) : void 0; } }\nfunction _003_ForceDirectedGraph_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _003_ForceDirectedGraph_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _003_ForceDirectedGraph_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\nvar ForceDirectedGraph = function ForceDirectedGraph() {\n  var svgRef = (0,react.useRef)();\n  var width = 1200;\n  var height = 670;\n  var dataUrl = \'/data/processed/processed_recipients_of_combined_us_china_russia_arms_hierarchical.json\';\n\n  // State for the selected year\n  var _useState = (0,react.useState)(2014),\n    _useState2 = _003_ForceDirectedGraph_slicedToArray(_useState, 2),\n    selectedYear = _useState2[0],\n    setSelectedYear = _useState2[1];\n  (0,react.useEffect)(function () {\n    // Fetch data from the provided URL\n    src/* json */.Pq9(dataUrl).then(function (rawData) {\n      var data = rawData.data; // Access the main data array\n\n      // Clear previous SVG contents\n      var svg = src/* select */.Ltv(svgRef.current);\n      svg.selectAll("*").remove();\n\n      // Process nodes and links based on the dataset structure and selected year\n      var nodesArray = [];\n      var links = [];\n      var nodeMap = new Map(); // For faster lookup and avoiding duplicates\n\n      data.forEach(function (supplierEntry) {\n        var supplier = supplierEntry.supplier;\n        if (!nodeMap.has(supplier)) {\n          nodeMap.set(supplier, {\n            name: supplier,\n            group: \'supplier\'\n          });\n          nodesArray.push({\n            name: supplier,\n            group: \'supplier\'\n          });\n        }\n        supplierEntry.recipients.forEach(function (recipientEntry) {\n          var recipient = recipientEntry.recipient;\n          var tradeValue = recipientEntry.years[selectedYear] || 0;\n\n          // Only add the link if there\'s a trade value for the selected year\n          if (tradeValue > 0) {\n            if (!nodeMap.has(recipient)) {\n              nodeMap.set(recipient, {\n                name: recipient,\n                group: \'recipient\'\n              });\n              nodesArray.push({\n                name: recipient,\n                group: \'recipient\'\n              });\n            }\n            links.push({\n              source: supplier,\n              target: recipient,\n              value: tradeValue\n            });\n          }\n        });\n      });\n\n      // Define color assignments for specific suppliers\n      var colorScale = src/* scaleOrdinal */.UMr().domain([\'United States\', \'Russia\', \'China\', \'India\']).range([\'#4682B4\', \'#DC143C\', \'#FFDB58\', \'#FF671F\']); // Blue for US, Red for Russia, Yellow for China\n\n      var nodeSizeScale = src/* scaleSqrt */.Bv9().domain([0, src/* max */.T9B(links, function (d) {\n        return d.value;\n      })]).range([5, 20]);\n      svg.attr("viewBox", [0, 0, width, height]);\n\n      // Add container group for zooming\n      var container = svg.append("g");\n      var defaultTransform = src/* zoomIdentity */.GSI.translate(width / 8, height / 4) // Pan to adjust initial position\n      .scale(0.75); // Zoom level\n\n      svg.call(src/* zoom */.s_O().scaleExtent([0.5, 5]).on("zoom", function (event) {\n        container.attr("transform", event.transform);\n      }));\n      svg.call(src/* zoom */.s_O().transform, defaultTransform);\n\n      // Set the initial transform on the container\n      container.attr("transform", defaultTransform);\n\n      // Draw links with lower opacity for aesthetic effect\n      var link = container.append("g").attr("stroke-opacity", 0.3).selectAll("line").data(links).join("line").attr("stroke", "#e0e0e0").attr("stroke-width", function (d) {\n        return d.value / 100;\n      });\n\n      // Draw nodes with size and color based on group\n      var node = container.append("g").selectAll("circle").data(nodesArray).join("circle").attr("r", function (d) {\n        var _links$find;\n        return nodeSizeScale(((_links$find = links.find(function (link) {\n          return link.target === d.name || link.source === d.name;\n        })) === null || _links$find === void 0 ? void 0 : _links$find.value) || 1);\n      }).attr("fill", function (d) {\n        if (d.group === \'supplier\') return colorScale(d.name) || \'#e0e0e0\';\n        if (d.name === \'India\') return colorScale(d.name) || \'#e0e0e0\';\n        return \'#e0e0e0\'; // Default color for recipients\n      }).call(src/* drag */.$Er().on("start", function (event, d) {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }).on("drag", function (event, d) {\n        d.fx = event.x;\n        d.fy = event.y;\n      }).on("end", function (event, d) {\n        if (!event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      }));\n\n      // Add labels for each node\n      var label = container.append("g").selectAll("text").data(nodesArray).join("text").attr("dx", function (d) {\n        var _links$find2;\n        var nodeValue = ((_links$find2 = links.find(function (link) {\n          return link.target === d.name || link.source === d.name;\n        })) === null || _links$find2 === void 0 ? void 0 : _links$find2.value) || 1;\n        return nodeSizeScale(nodeValue) + 5; // Add 5px padding after the radius\n      }).attr("dy", 4).attr("font-size", "16px").attr("fill", "#e0e0e0").text(function (d) {\n        return d.name;\n      });\n\n      // Tooltip for node hover details\n      var tooltip = src/* select */.Ltv("body").append("div").style("position", "absolute").style("background", "rgba(0, 0, 0, 0.8)").style("color", "#e0e0e0").style("padding", "12px").style("border-radius", "8px").style("font-size", "16px").style("pointer-events", "none").style("display", "none");\n      node.on("mouseover", function (event, d) {\n        tooltip.style("display", "block").html("\\n            <strong>".concat(d.name, "</strong>\\n          "));\n      }).on("mousemove", function (event) {\n        tooltip.style("top", "".concat(event.pageY + 10, "px")).style("left", "".concat(event.pageX + 10, "px"));\n      }).on("mouseout", function () {\n        return tooltip.style("display", "none");\n      });\n\n      // Define simulation and apply forces\n      var simulation = src/* forceSimulation */.tXi(nodesArray).force("link", src/* forceLink */.kJC(links).id(function (d) {\n        return d.name;\n      }).distance(75).strength(0.25)).force("charge", src/* forceManyBody */.xJS().strength(-400)).force("center", src/* forceCenter */.jTM(width / 2, height / 2)).on("tick", function () {\n        link.attr("x1", function (d) {\n          return d.source.x;\n        }).attr("y1", function (d) {\n          return d.source.y;\n        }).attr("x2", function (d) {\n          return d.target.x;\n        }).attr("y2", function (d) {\n          return d.target.y;\n        });\n        node.attr("cx", function (d) {\n          return d.x;\n        }).attr("cy", function (d) {\n          return d.y;\n        });\n        label.attr("x", function (d) {\n          return d.x;\n        }).attr("y", function (d) {\n          return d.y;\n        });\n      });\n\n      // Cleanup on unmount\n      return function () {\n        tooltip.remove();\n      };\n    });\n  }, [selectedYear]);\n  return /*#__PURE__*/react.createElement("div", {\n    style: {\n      position: \'relative\',\n      width: \'100%\'\n    }\n  }, /*#__PURE__*/react.createElement("h3", {\n    style: {\n      textAlign: \'center\',\n      fontSize: \'24px\',\n      color: \'#e74c3c\',\n      paddingTop: \'20px\'\n    }\n  }, "Global Arms Trade Network ", selectedYear), /*#__PURE__*/react.createElement("input", {\n    type: "range",\n    min: "1950",\n    max: "2023",\n    value: selectedYear,\n    onChange: function onChange(e) {\n      return setSelectedYear(+e.target.value);\n    },\n    style: {\n      width: \'80%\',\n      appearance: \'none\',\n      height: \'8px\',\n      backgroundColor: \'gray\',\n      borderRadius: \'5px\',\n      outline: \'none\',\n      margin: \'20px auto 10px\',\n      display: \'block\',\n      accentColor: \'#e74c3c\'\n    }\n  }), /*#__PURE__*/react.createElement("svg", {\n    ref: svgRef,\n    style: {\n      width: \'100%\',\n      border: \'3px solid #e74c3c\',\n      borderRadius: \'8px\'\n    }\n  }));\n};\n/* harmony default export */ const _003_ForceDirectedGraph = (ForceDirectedGraph);\n// EXTERNAL MODULE: ./node_modules/@deck.gl/react/dist/deckgl.js + 128 modules\nvar deckgl = __webpack_require__(393);\n// EXTERNAL MODULE: ./node_modules/@deck.gl/layers/dist/arc-layer/arc-layer.js + 6 modules\nvar arc_layer = __webpack_require__(1681);\n// EXTERNAL MODULE: ./node_modules/react-map-gl/dist/esm/index.js + 21 modules\nvar esm = __webpack_require__(3263);\n// EXTERNAL MODULE: ./node_modules/mapbox-gl/dist/mapbox-gl.css\nvar mapbox_gl = __webpack_require__(4518);\n;// ./public/countryCoordinates.js\nvar countryCoordinates = {\n  \'Afghanistan\': [67.709953, 33.93911],\n  \'Albania\': [20.168331, 41.153332],\n  \'Algeria\': [1.659626, 28.033886],\n  \'Angola\': [17.873887, -11.202692],\n  \'Argentina\': [-63.616672, -38.416097],\n  \'Armenia\': [45.038189, 40.069099],\n  \'Australia\': [133.775136, -25.274398],\n  \'Austria\': [14.550072, 47.516231],\n  \'Azerbaijan\': [47.576927, 40.143105],\n  \'Bahrain\': [50.637772, 25.930414],\n  \'Bangladesh\': [90.356331, 23.684994],\n  \'Belarus\': [27.953389, 53.709807],\n  \'Belgium\': [4.469936, 50.503887],\n  \'Bolivia\': [-63.588653, -16.290154],\n  \'Bosnia-Herzegovina\': [17.679076, 43.915886],\n  \'Brazil\': [-51.92528, -14.235004],\n  \'Bulgaria\': [25.48583, 42.733883],\n  \'Cambodia\': [104.990963, 12.565679],\n  \'Canada\': [-106.346771, 56.130366],\n  \'Central African Republic\': [20.939444, 6.611111],\n  \'Chad\': [18.732207, 15.454166],\n  \'Chile\': [-71.542969, -35.675147],\n  \'China\': [104.195397, 35.86166],\n  \'Colombia\': [-74.297333, 4.570868],\n  \'Congo\': [15.827659, -0.228021],\n  \'Costa Rica\': [-83.753428, 9.748917],\n  "Cote d\'Ivoire": [-5.54708, 7.539989],\n  \'Croatia\': [15.2, 45.1],\n  \'Cuba\': [-77.781167, 21.521757],\n  \'Cyprus\': [33.429859, 35.126413],\n  \'Czechia\': [15.472962, 49.817492],\n  \'Czechoslovakia\': [15.5, 49.75],\n  \'Denmark\': [9.501785, 56.26392],\n  \'Dominican Republic\': [-70.162651, 18.735693],\n  \'DR Congo\': [21.758664, -4.038333],\n  \'East_Germany\': [13.404954, 52.520008],\n  \'Ecuador\': [-78.183406, -1.831239],\n  \'Egypt\': [30.802498, 26.820553],\n  \'El Salvador\': [-88.89653, 13.794185],\n  \'Eritrea\': [39.782334, 15.179384],\n  \'Ethiopia\': [40.489673, 9.145],\n  \'Finland\': [25.748151, 61.92411],\n  \'France\': [2.213749, 46.227638],\n  \'Georgia\': [43.356892, 42.315407],\n  \'Germany\': [10.451526, 51.165691],\n  \'Greece\': [21.824312, 39.074208],\n  \'Guatemala\': [-90.230759, 15.783471],\n  \'Guinea\': [-9.696645, 9.945587],\n  \'Guinea-Bissau\': [-15.180413, 11.803749],\n  \'Haiti\': [-72.285215, 18.971187],\n  \'Honduras\': [-86.241905, 15.199999],\n  \'Hungary\': [19.503304, 47.162494],\n  \'India\': [78.96288, 20.593684],\n  \'Indonesia\': [113.921327, -0.789275],\n  \'Iran\': [53.688046, 32.427908],\n  \'Iraq\': [43.679291, 33.223191],\n  \'Ireland\': [-8.24389, 53.41291],\n  \'Israel\': [34.851612, 31.046051],\n  \'Italy\': [12.56738, 41.87194],\n  \'Japan\': [138.252924, 36.204824],\n  \'Jordan\': [36.238414, 30.585164],\n  \'Kazakhstan\': [66.923684, 48.019573],\n  \'Kenya\': [37.906193, -0.023559],\n  \'Kuwait\': [47.481766, 29.31166],\n  \'Laos\': [102.495496, 19.85627],\n  \'Latvia\': [24.603189, 56.879635],\n  \'Lebanon\': [35.862285, 33.854721],\n  \'Libya\': [17.228331, 26.3351],\n  \'Madagascar\': [46.869107, -18.766947],\n  \'Malaysia\': [101.975766, 4.210484],\n  \'Mali\': [-3.996166, 17.570692],\n  \'Mauritania\': [-10.940835, 21.00789],\n  \'Mexico\': [-102.552784, 23.634501],\n  \'Mongolia\': [103.846656, 46.862496],\n  \'Morocco\': [-7.09262, 31.791702],\n  \'Mozambique\': [35.529562, -18.665695],\n  \'Myanmar\': [95.956223, 21.913965],\n  \'Namibia\': [18.49041, -22.95764],\n  \'Nepal\': [84.124008, 28.394857],\n  \'Netherlands\': [5.291266, 52.132633],\n  \'New Zealand\': [174.885971, -40.900557],\n  \'Nicaragua\': [-85.207229, 12.865416],\n  \'Nigeria\': [8.675277, 9.081999],\n  \'North Macedonia\': [21.745275, 41.608635],\n  \'North Yemen\': [48.516388, 15.552727],\n  \'North_Korea\': [127.510093, 40.339852],\n  \'Norway\': [8.468946, 60.472024],\n  \'Oman\': [55.923255, 21.512583],\n  \'Pakistan\': [69.345116, 30.375321],\n  \'Paraguay\': [-58.443832, -23.442503],\n  \'Peru\': [-75.015152, -9.189967],\n  \'Philippines\': [121.774017, 12.879721],\n  \'Poland\': [19.145136, 51.919438],\n  \'Portugal\': [-8.224454, 39.399872],\n  \'Qatar\': [51.183884, 25.354826],\n  \'Romania\': [24.96676, 45.943161],\n  \'Rwanda\': [29.873888, -1.940278],\n  \'Saudi Arabia\': [45.079162, 23.885942],\n  \'Serbia\': [21.005859, 44.016521],\n  \'Sierra Leone\': [-11.779889, 8.460555],\n  \'Singapore\': [103.819836, 1.352083],\n  \'Slovakia\': [19.699024, 48.669026],\n  \'Somalia\': [46.199616, 5.152149],\n  \'South Africa\': [22.937506, -30.559482],\n  \'South Korea\': [127.766922, 35.907757],\n  \'South Sudan\': [29.694924, 7.862685],\n  \'South Vietnam\': [106.6297, 10.8231],\n  \'South Yemen\': [45.0367, 12.805],\n  \'Spain\': [-3.74922, 40.463667],\n  \'Sri Lanka\': [80.771797, 7.873054],\n  \'Sudan\': [30.217636, 12.862807],\n  \'Sweden\': [18.643501, 60.128161],\n  \'Switzerland\': [8.227512, 46.818188],\n  \'Syria\': [38.996815, 34.802075],\n  \'Taiwan\': [120.960515, 23.69781],\n  \'Tajikistan\': [71.276093, 38.861034],\n  \'Tanzania\': [34.888822, -6.369028],\n  \'Thailand\': [100.992541, 15.870032],\n  \'Togo\': [0.824782, 8.619543],\n  \'Tunisia\': [9.537499, 33.886917],\n  \'Turkiye\': [35.243322, 38.963745],\n  \'Turkmenistan\': [59.556278, 38.969719],\n  \'UAE\': [53.847818, 23.424076],\n  \'Uganda\': [32.290275, 1.373333],\n  \'Ukraine\': [31.16558, 48.379433],\n  \'United_Kingdom\': [-3.435973, 55.378051],\n  \'United States\': [-105.53924145160018, 41.29853739464161],\n  \'Uruguay\': [-55.765835, -32.522779],\n  \'Venezuela\': [-66.58973, 6.42375],\n  \'Viet Nam\': [108.277199, 14.058324],\n  \'Yemen\': [48.516388, 15.552727],\n  \'Yugoslavia\': [21.005859, 44.016521],\n  \'Zambia\': [27.849332, -13.133897],\n  \'Zimbabwe\': [29.154857, -19.015438],\n  \'Soviet_Union\': [105.318756, 61.52401],\n  \'Russia\': [105.318756, 61.52401],\n  \'Kyrgyzstan\': [74.766098, 41.20438],\n  \'Slovenia\': [14.995463, 46.151241],\n  \'Moldova\': [28.369885, 47.411631],\n  \'Uzbekistan\': [64.5853, 41.3775],\n  \'Botswana\': [24.6849, -22.3285],\n  \'Burkina Faso\': [-1.5616, 12.2383],\n  \'Cabo Verde\': [-23.0418, 16.5388],\n  \'Cameroon\': [12.3547, 7.3697],\n  \'Djibouti\': [42.5903, 11.8251],\n  \'Estonia\': [25.0136, 58.5953],\n  \'Gabon\': [11.6094, -0.8037],\n  \'Ghana\': [-1.0232, 7.9465],\n  \'Guyana\': [-58.9302, 4.8604],\n  \'Jamaica\': [-77.2975, 18.1096],\n  \'Kosovo\': [20.9029, 42.6026],\n  \'Lithuania\': [23.8813, 55.1694],\n  \'Luxembourg\': [6.1296, 49.8153],\n  \'Maldives\': [73.2207, 3.2028],\n  \'Malta\': [14.3754, 35.9375],\n  \'Montenegro\': [19.3744, 42.7087],\n  \'Niger\': [8.0817, 17.6078],\n  \'Senegal\': [-14.4524, 14.4974],\n  \'Antigua and Barbuda\': [-61.7964, 17.0608],\n  \'Benin\': [2.3158, 9.3077],\n  \'Brunei\': [114.7277, 4.5353],\n  \'Equatorial Guinea\': [10.2679, 1.6508],\n  \'Gambia\': [-15.3101, 13.4432],\n  \'Malawi\': [34.3015, -13.2543],\n  \'Mauritius\': [57.5522, -20.3484],\n  \'Seychelles\': [55.4919, -4.6796],\n  \'Suriname\': [-56.0278, 3.9193],\n  \'Trinidad and Tobago\': [-61.2225, 10.6918]\n};\n/* harmony default export */ const public_countryCoordinates = (countryCoordinates);\n;// ./src/components/graphs/003_WorldChord.js\nfunction _003_WorldChord_typeof(o) { "@babel/helpers - typeof"; return _003_WorldChord_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _003_WorldChord_typeof(o); }\nfunction _003_WorldChord_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _003_WorldChord_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _003_WorldChord_ownKeys(Object(t), !0).forEach(function (r) { _003_WorldChord_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : _003_WorldChord_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _003_WorldChord_defineProperty(e, r, t) { return (r = _003_WorldChord_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _003_WorldChord_toPropertyKey(t) { var i = _003_WorldChord_toPrimitive(t, "string"); return "symbol" == _003_WorldChord_typeof(i) ? i : i + ""; }\nfunction _003_WorldChord_toPrimitive(t, r) { if ("object" != _003_WorldChord_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _003_WorldChord_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _003_WorldChord_slicedToArray(r, e) { return _003_WorldChord_arrayWithHoles(r) || _003_WorldChord_iterableToArrayLimit(r, e) || _003_WorldChord_unsupportedIterableToArray(r, e) || _003_WorldChord_nonIterableRest(); }\nfunction _003_WorldChord_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _003_WorldChord_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _003_WorldChord_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _003_WorldChord_arrayLikeToArray(r, a) : void 0; } }\nfunction _003_WorldChord_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _003_WorldChord_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _003_WorldChord_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\n\n\n\n\nvar MAPBOX_TOKEN = \'pk.eyJ1Ijoia3dwdGhlZ3JlYXQiLCJhIjoiY20zajljd3Z2MDExZjJycHRvcGE0dm9uYyJ9.9IwsWKd3rM0aVxjXND4LUQ\'; // Replace with your actual Mapbox token\n\n// Function to extract the year from a record dynamically\nfunction extractYearFromRecord(record) {\n  // Example: If the record has a `date` field with a year, extract it\n  if (record.date) {\n    var match = record.date.match(/\\b(20\\d{2})\\b/); // Match years like 2000-2099\n    return match ? parseInt(match[0], 10) : null;\n  }\n\n  // If no valid year can be extracted, return null\n  /*\r\n  console.warn(\'Year not found for record:\', record);\r\n  */\n  return null;\n}\nfunction WorldChord() {\n  var _useState = (0,react.useState)([]),\n    _useState2 = _003_WorldChord_slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = (0,react.useState)([]),\n    _useState4 = _003_WorldChord_slicedToArray(_useState3, 2),\n    filteredData = _useState4[0],\n    setFilteredData = _useState4[1];\n  var _useState5 = (0,react.useState)(2014),\n    _useState6 = _003_WorldChord_slicedToArray(_useState5, 2),\n    year = _useState6[0],\n    setYear = _useState6[1]; // Default year for the slider filter\n  var _useState7 = (0,react.useState)(\'all\'),\n    _useState8 = _003_WorldChord_slicedToArray(_useState7, 2),\n    selectedCountry = _useState8[0],\n    setSelectedCountry = _useState8[1];\n  var _useState9 = (0,react.useState)(null),\n    _useState10 = _003_WorldChord_slicedToArray(_useState9, 2),\n    hoveredInfo = _useState10[0],\n    setHoveredInfo = _useState10[1];\n  var countryColors = {\n    "United States": [70, 130, 180],\n    // Steel Blue (rgb format)\n    "Russia": [220, 20, 60],\n    // Crimson (rgb format)\n    "China": [255, 219, 88] // Light Gold (rgb format)\n    // Add more countries and colors as needed\n  };\n  (0,react.useEffect)(function () {\n    // Fetch data from converted_data.json\n    fetch("/data/processed/converted_data.json").then(function (response) {\n      return response.json();\n    }).then(function (fetchedData) {\n      // Add the `year` field dynamically if missing\n      var updatedData = fetchedData.map(function (d) {\n        return _003_WorldChord_objectSpread(_003_WorldChord_objectSpread({}, d), {}, {\n          year: d.year || extractYearFromRecord(d) // Add year dynamically if needed\n        });\n      });\n      setData(updatedData);\n\n      // Filter the data for the initial year\n      var initialFilteredData = updatedData.filter(function (d) {\n        return d.year === year;\n      });\n      setFilteredData(initialFilteredData);\n    })["catch"](function (error) {\n      return console.error(\'Error loading JSON data:\', error);\n    });\n  }, [year]);\n  (0,react.useEffect)(function () {\n    // Update filtered data when year changes\n    if (data.length > 0) {\n      var updatedFilteredData = data.filter(function (d) {\n        return d.year === year;\n      });\n      setFilteredData(updatedFilteredData);\n    }\n  }, [year, data]);\n  var filteredByCountry = filteredData.filter(function (d) {\n    if (selectedCountry === \'all\') return true; // Show all if \'all\' is selected\n    return d.origin.toLowerCase() === selectedCountry.toLowerCase(); // Filter by selected country\n  });\n  // Filter out invalid records\n  var validFilteredData = filteredByCountry.filter(function (d) {\n    var source = public_countryCoordinates[d.origin];\n    var target = public_countryCoordinates[d.destination];\n    if (!["China", "Russia", "United States"].includes(d.origin)) {\n      return false; // Skip records where the origin is not one of these\n    }\n\n    // Log missing countries\n    /*\r\n    if (!source) console.warn(`Missing source coordinates for: ${d.origin}`);\r\n    if (!target) console.warn(`Missing target coordinates for: ${d.destination}`);\r\n    */\n    // Keep only valid records\n    return source && target;\n  });\n  var layers = new arc_layer/* default */.A({\n    id: \'arc-layer\',\n    data: validFilteredData,\n    // Use only validated data\n    getSourcePosition: function getSourcePosition(d) {\n      return public_countryCoordinates[d.origin];\n    },\n    getTargetPosition: function getTargetPosition(d) {\n      return public_countryCoordinates[d.destination];\n    },\n    getSourceColor: function getSourceColor(d) {\n      return countryColors[d.origin] || [255, 255, 255];\n    },\n    getTargetColor: function getTargetColor(d) {\n      return countryColors[d.origin] || [0, 128, 255];\n    },\n    // Default to blue if country color is missing\n    getWidth: function getWidth(d) {\n      return Math.log(d.quantity + 1);\n    },\n    pickable: true,\n    getTooltip: function getTooltip(_ref) {\n      var object = _ref.object;\n      return object ? "".concat(object.origin, " to ").concat(object.destination, ": ").concat(object.quantity, " ").concat(object.weapon, " (").concat(object.year, ")") : null;\n    }\n  });\n  return /*#__PURE__*/react.createElement("div", {\n    style: {\n      position: \'relative\',\n      width: \'100%\',\n      height: \'80vh\'\n    }\n  }, /*#__PURE__*/react.createElement("h3", {\n    style: {\n      textAlign: \'center\',\n      fontSize: \'24px\',\n      color: \'#e74c3c\',\n      paddingTop: \'20px\'\n    }\n  }, "Global Arms Proliferation ", year), /*#__PURE__*/react.createElement("input", {\n    type: "range",\n    min: "1950",\n    max: "2023",\n    value: year,\n    onChange: function onChange(e) {\n      return setYear(+e.target.value);\n    },\n    style: {\n      width: \'80%\',\n      appearance: \'none\',\n      height: \'8px\',\n      backgroundColor: \'gray\',\n      borderRadius: \'5px\',\n      outline: \'none\',\n      margin: \'20px auto 10px\',\n      display: \'block\',\n      accentColor: \'#e74c3c\'\n    }\n  }), /*#__PURE__*/react.createElement("div", {\n    style: {\n      position: \'absolute\',\n      bottom: 0,\n      width: \'100%\',\n      height: \'calc(100% - 90px)\'\n    }\n  }, /*#__PURE__*/react.createElement(deckgl/* default */.A, {\n    style: {\n      width: \'100%\',\n      height: \'100%\',\n      border: \'3px solid #e74c3c\',\n      borderRadius: \'8px\'\n    },\n    initialViewState: {\n      latitude: 20,\n      longitude: 0,\n      zoom: 1.5,\n      pitch: 30\n    },\n    controller: true,\n    layers: [layers],\n    onHover: function onHover(info) {\n      if (info.object) {\n        setHoveredInfo(info);\n      } else {\n        setHoveredInfo(null);\n      }\n    }\n  }, /*#__PURE__*/react.createElement(esm/* Map */.T5, {\n    mapboxAccessToken: MAPBOX_TOKEN,\n    mapStyle: "mapbox://styles/mapbox/light-v10",\n    attributionControl: false,\n    interactiveLayerIds: [\'arc-layer\']\n  }), hoveredInfo && hoveredInfo.object && /*#__PURE__*/react.createElement("div", {\n    style: {\n      position: \'absolute\',\n      left: hoveredInfo.x,\n      top: hoveredInfo.y,\n      backgroundColor: \'rgba(0, 0, 0, 0.8)\',\n      color: \'e0e0e0\',\n      padding: \'8px 12px\',\n      borderRadius: \'8px\',\n      pointerEvents: \'none\',\n      fontSize: \'16px\',\n      whiteSpace: \'nowrap\'\n    }\n  }, "".concat(hoveredInfo.object.origin, " to ").concat(hoveredInfo.object.destination, ": ").concat(hoveredInfo.object.quantity))), /*#__PURE__*/react.createElement("div", {\n    style: {\n      position: \'absolute\',\n      height: \'80px\',\n      width: \'120px\',\n      top: \'20px\',\n      left: \'20px\',\n      background: \'rgba(0, 0, 0, 0.9)\',\n      padding: \'10px\',\n      borderRadius: \'8px\',\n      fontSize: \'14px\',\n      color: \'#e0e0e0\'\n    }\n  }, /*#__PURE__*/react.createElement("p", {\n    style: {\n      display: \'block\',\n      marginBottom: \'10px\',\n      color: \'#e0e0e0\',\n      fontSize: \'14px\',\n      fontWeight: \'bold\'\n    }\n  }, "Select Country"), /*#__PURE__*/react.createElement("select", {\n    name: "countrySelector",\n    value: selectedCountry,\n    onChange: function onChange(e) {\n      return setSelectedCountry(e.target.value);\n    },\n    style: {\n      position: \'absolute\',\n      padding: \'6px 10px\',\n      width: \'100px\',\n      color: \'#e0e0e0\',\n      backgroundColor: \'black\',\n      borderRadius: \'8px\',\n      fontSize: \'14px\'\n    }\n  }, /*#__PURE__*/react.createElement("option", {\n    value: "all"\n  }, "All"), /*#__PURE__*/react.createElement("option", {\n    value: "United States"\n  }, "US"), /*#__PURE__*/react.createElement("option", {\n    value: "Russia"\n  }, "Russia"), /*#__PURE__*/react.createElement("option", {\n    value: "China"\n  }, "China")))));\n}\n/* harmony default export */ const _003_WorldChord = (WorldChord);\n;// ./src/components/003_alliance.js\n\n\n\n\nvar alliance = function alliance() {\n  return /*#__PURE__*/react.createElement("section", {\n    id: "003"\n  }, /*#__PURE__*/react.createElement("p", {\n    className: "custom-title",\n    style: {\n      cssText: \'margin-top: 0\'\n    }\n  }, "Strength in Alliance & Partnership"), /*#__PURE__*/react.createElement("p", {\n    className: "custom-paragraph"\n  }, "The ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#4682B4"\n    }\n  }, "United States"), " uses arms exports strategically to build alliances and shape regional power dynamics, especially against major powers like", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, " Russia"), " and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, "China"), ". By equipping allies in key areas\\u2014such as ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "Eastern Europe"), ", ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "the Middle East"), ", and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "Asia-Pacific"), "\\u2014the ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#4682B4"\n    }\n  }, "United States"), " bolsters defense, deters aggression, and strengthens long-term partnerships. These alliances, supported by advanced weaponry, create a coordinated front that counters ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, "China\'s"), " and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, "Russia\'s"), " influence."), /*#__PURE__*/react.createElement("p", {\n    className: "custom-paragraph"\n  }, "In contrast, ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, "Russia"), " and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, "China"), " use arms transfers to establish footholds in their own spheres, particularly in the ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "Middle East"), ", ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "Africa"), ", and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "Southeast Asia"), ". This distribution evidences an effort by the ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#4682B4"\n    }\n  }, "US"), ", ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, " China"), ", and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, "Russia"), " to expand their spheres of influence or contain each other."), /*#__PURE__*/react.createElement("p", {\n    className: "custom-paragraph"\n  }, "A quick case study, as shown on the map, highlights a significant increase in ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, "China\'s"), " arms trade with ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "Africa"), " prior to the initiation of the Belt and Road Initiative, which officially started in 2013. This emphasizes China\'s broader geopolitical strategy of leveraging arms trade to secure access to resources and establish influence in developing regions."), /*#__PURE__*/react.createElement("div", {\n    className: "chart-container",\n    style: {\n      width: \'80%\'\n    }\n  }, /*#__PURE__*/react.createElement(_003_WorldChord, null)), /*#__PURE__*/react.createElement("p", {\n    className: "custom-title"\n  }, "An Alternative Way to Visualize International Relations: Force Directed Graph"), /*#__PURE__*/react.createElement("p", {\n    className: "custom-paragraph"\n  }, "This Global Arms Trade Network further illustrates a complex geopolitical chessboard where the ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#4682B4"\n    }\n  }, "United States"), ", ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, "Russia"), ", and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, "China "), "use arms exports to expand influence and secure alliances across strategic regions. Each superpower\\u2019s network centers around key allies:"), /*#__PURE__*/react.createElement("ul", null, /*#__PURE__*/react.createElement("li", null, "The ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#4682B4"\n    }\n  }, "United States"), " supports countries in", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C",\n      fontStyle: "italic"\n    }\n  }, " Europe, the Middle East, and Asia-Pacific"), ", reinforcing a defense line against rivals."), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("li", null, /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, "Russia"), " supplies nations in", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C",\n      fontStyle: "italic"\n    }\n  }, " Eastern Europe and Central Asia"), " to counter NATO\'s reach."), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("li", null, /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, "China"), " arms countries in", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C",\n      fontStyle: "italic"\n    }\n  }, " Southeast Asia, Africa, and South Asia"), ", expanding its foothold in resource-rich areas."), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("li", null, "Countries like ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FF671F"\n    }\n  }, "India"), " illustrate a multilateral approach, balancing relationships with the ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#4682B4"\n    }\n  }, "US"), ", ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, "Russia"), ", and others.")), /*#__PURE__*/react.createElement("p", {\n    className: "custom-paragraph"\n  }, "Through this network, arms transfers reveal interdependent alliances, bolstered influence, and efforts to contain rivals. The map underscores how arms exports are not just about military strength but also about shaping the strategic relationships that define the global order."), /*#__PURE__*/react.createElement("div", {\n    className: "chart-container",\n    style: {\n      width: \'80%\'\n    }\n  }, /*#__PURE__*/react.createElement(_003_ForceDirectedGraph, null)));\n};\n/* harmony default export */ const _003_alliance = (alliance);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QkFBQSwwQkFDRUEsbUJBQUE7SUFBTXFFLEtBQUssRUFBRTtNQUFFNEQsS0FBSyxFQUFFO0lBQVU7RUFBRSxHQUFDLE9BQVcsQ0FBQyxzQkFDL0MsZUFBQWpJLG1CQUFBO0lBQU1xRSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRSxTQUFTO01BQUU4SSxTQUFTLEVBQUU7SUFBUztFQUFFLEdBQUMseUNBQTZDLENBQUMsb0RBQ3BHLENBQUMsZUFBQS9RLG1CQUFBLFdBQUksQ0FBQyxlQUNWQSxtQkFBQSxhQUFJLGlCQUNhLGVBQUFBLG1CQUFBO0lBQU1xRSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxPQUFXLENBQUMsMEVBQXNFLGVBQUFqSSxtQkFBQTtJQUFNcUUsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUU7SUFBVTtFQUFFLEdBQUMsSUFBUSxDQUFDLE1BQUUsZUFBQWpJLG1CQUFBO0lBQU1xRSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxRQUFZLENBQUMsaUJBQ2hPLENBQ0YsQ0FBQyxlQUVMakksbUJBQUE7SUFBRzZRLFNBQVMsRUFBQztFQUFrQixHQUFDLHNSQUU3QixDQUFDLGVBRUo3USxtQkFBQTtJQUFLNlEsU0FBUyxFQUFDLGlCQUFpQjtJQUFDeE0sS0FBSyxFQUFFO01BQUU3RCxLQUFLLEVBQUU7SUFBTTtFQUFFLGdCQUN2RFIsbUJBQUEsQ0FBQ3NLLHVCQUFrQixNQUFFLENBQ2xCLENBQ0UsQ0FBQztBQUVkLENBQUM7QUFFRCxvREFBZXNHLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9qZWN0X3RlYW1fc211cmZfZGVwbG95Ly4vc3JjL2NvbXBvbmVudHMvZ3JhcGhzLzAwM19NaWdyYXRpb25NYXAuanM/ODc0ZCIsIndlYnBhY2s6Ly9wcm9qZWN0X3RlYW1fc211cmZfZGVwbG95Ly4vc3JjL2NvbXBvbmVudHMvZ3JhcGhzLzAwM19Gb3JjZURpcmVjdGVkR3JhcGguanM/NDVlNCIsIndlYnBhY2s6Ly9wcm9qZWN0X3RlYW1fc211cmZfZGVwbG95Ly4vcHVibGljL2NvdW50cnlDb29yZGluYXRlcy5qcz9mMTlkIiwid2VicGFjazovL3Byb2plY3RfdGVhbV9zbXVyZl9kZXBsb3kvLi9zcmMvY29tcG9uZW50cy9ncmFwaHMvMDAzX1dvcmxkQ2hvcmQuanM/OTBjMiIsIndlYnBhY2s6Ly9wcm9qZWN0X3RlYW1fc211cmZfZGVwbG95Ly4vc3JjL2NvbXBvbmVudHMvMDAzX2FsbGlhbmNlLmpzPzVjN2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnO1xyXG5pbXBvcnQgKiBhcyB0b3BvanNvbiBmcm9tICd0b3BvanNvbi1jbGllbnQnO1xyXG5cclxuXHJcbmNvbnN0IE1pZ3JhdGlvbk1hcCA9ICgpID0+IHtcclxuICBjb25zdCBzdmdSZWYgPSB1c2VSZWYoKTtcclxuICBjb25zdCB3aWR0aCA9IDgwMDtcclxuICBjb25zdCBoZWlnaHQgPSA0MDA7XHJcblxyXG4gIGNvbnN0IFt3b3JsZEdlb0pTT04sIHNldFdvcmxkR2VvSlNPTl0gPSB1c2VTdGF0ZShudWxsKTtcclxuICBjb25zdCBbY291bnRyeUNlbnRyb2lkcywgc2V0Q291bnRyeUNlbnRyb2lkc10gPSB1c2VTdGF0ZSh7fSk7XHJcbiAgY29uc3QgW3RyYWRlRGF0YSwgc2V0VHJhZGVEYXRhXSA9IHVzZVN0YXRlKHtcclxuICAgIFwiVW5pdGVkIFN0YXRlc1wiOiBbXSxcclxuICAgIFwiUnVzc2lhXCI6IFtdLFxyXG4gICAgXCJDaGluYVwiOiBbXVxyXG4gIH0pO1xyXG4gIGNvbnN0IFtzZWxlY3RlZFllYXIsIHNldFNlbGVjdGVkWWVhcl0gPSB1c2VTdGF0ZSgyMDE0KTtcclxuICBjb25zdCBbc2VsZWN0ZWRDb3VudHJ5LCBzZXRTZWxlY3RlZENvdW50cnldID0gdXNlU3RhdGUoXCJBbGxcIik7XHJcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZShudWxsKTtcclxuXHJcbiAgY29uc3Qgb3JpZ2luQ29sb3JzID0ge1xyXG4gICAgXCJVbml0ZWQgU3RhdGVzXCI6IFwiIzQ2ODJCNFwiLFxyXG4gICAgXCJSdXNzaWFcIjogXCIjREMxNDNDXCIsXHJcbiAgICBcIkNoaW5hXCI6IFwiI0ZGREI1OFwiLFxyXG4gICAgXCJBbGxcIjogXCIjOTQ2N2JkXCJcclxuICB9O1xyXG5cclxuICBjb25zdCB1cmxzID0ge1xyXG4gICAgXCJVbml0ZWQgU3RhdGVzXCI6ICcvZGF0YS9wcm9jZXNzZWQvcHJvY2Vzc2VkX3JlY2lwaWVudHNfb2ZfdXNfYXJtc19oaWVyYXJjaGljYWwuanNvbicsXHJcbiAgICBcIlJ1c3NpYVwiOiAnL2RhdGEvcHJvY2Vzc2VkL3Byb2Nlc3NlZF9yZWNpcGllbnRzX29mX3J1c3NpYV9hcm1zX2hpZXJhcmNoaWNhbC5qc29uJyxcclxuICAgIFwiQ2hpbmFcIjogJy9kYXRhL3Byb2Nlc3NlZC9wcm9jZXNzZWRfcmVjaXBpZW50c19vZl9jaGluYV9hcm1zX2hpZXJhcmNoaWNhbC5qc29uJyxcclxuICB9O1xyXG5cclxuICBjb25zdCBnZW9KU09OVXJsID0gJy9jb3VudHJpZXMtMTEwbS5qc29uJztcclxuXHJcbiAgY29uc3Qgbm9ybWFsaXplQ291bnRyeU5hbWUgPSAobmFtZSkgPT4ge1xyXG4gICAgY29uc3QgbWFwcGluZyA9IHtcclxuICAgICAgXCJVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2FcIjogXCJVbml0ZWQgU3RhdGVzXCIsXHJcbiAgICAgIFwiVVNBXCI6IFwiVW5pdGVkIFN0YXRlc1wiLFxyXG4gICAgICBcIlJ1c3NpYW4gRmVkZXJhdGlvblwiOiBcIlJ1c3NpYVwiLFxyXG4gICAgICBcIlBlb3BsZSdzIFJlcHVibGljIG9mIENoaW5hXCI6IFwiQ2hpbmFcIixcclxuICAgIH07XHJcbiAgICByZXR1cm4gbWFwcGluZ1tuYW1lXSB8fCBuYW1lO1xyXG4gIH07XHJcblxyXG4gIC8vIExvYWQgd29ybGQgR2VvSlNPTiBkYXRhXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGQzLmpzb24oZ2VvSlNPTlVybClcclxuICAgICAgLnRoZW4od29ybGREYXRhID0+IHtcclxuICAgICAgICBjb25zdCBjZW50cm9pZHMgPSB7fTtcclxuICAgICAgICB0b3BvanNvbi5mZWF0dXJlKHdvcmxkRGF0YSwgd29ybGREYXRhLm9iamVjdHMuY291bnRyaWVzKS5mZWF0dXJlcy5mb3JFYWNoKGZlYXR1cmUgPT4ge1xyXG4gICAgICAgICAgY29uc3QgY291bnRyeU5hbWUgPSBmZWF0dXJlLnByb3BlcnRpZXMubmFtZTtcclxuICAgICAgICAgIGNlbnRyb2lkc1tub3JtYWxpemVDb3VudHJ5TmFtZShjb3VudHJ5TmFtZSldID0gZDMuZ2VvQ2VudHJvaWQoZmVhdHVyZSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgc2V0Q291bnRyeUNlbnRyb2lkcyhjZW50cm9pZHMpO1xyXG4gICAgICAgIHNldFdvcmxkR2VvSlNPTih3b3JsZERhdGEpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKCkgPT4ge1xyXG4gICAgICAgIHNldEVycm9yKFwiRXJyb3IgbG9hZGluZyBtYXAgZGF0YS5cIik7XHJcbiAgICAgIH0pO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgLy8gTG9hZCB0cmFkZSBkYXRhIGZvciBlYWNoIGNvdW50cnlcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgT2JqZWN0LmtleXModXJscykuZm9yRWFjaChjb3VudHJ5ID0+IHtcclxuICAgICAgZDMuanNvbih1cmxzW2NvdW50cnldKVxyXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgICAgICAgaWYgKGRhdGEgJiYgZGF0YS5yZWNpcGllbnRzKSB7XHJcbiAgICAgICAgICAgIHNldFRyYWRlRGF0YShwcmV2RGF0YSA9PiAoe1xyXG4gICAgICAgICAgICAgIC4uLnByZXZEYXRhLFxyXG4gICAgICAgICAgICAgIFtjb3VudHJ5XTogZGF0YS5yZWNpcGllbnRzXHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHNldEVycm9yKGBGYWlsZWQgdG8gbG9hZCAke2NvdW50cnl9IHRyYWRlIGRhdGEuYCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goKCkgPT4ge1xyXG4gICAgICAgICAgc2V0RXJyb3IoYEVycm9yIGxvYWRpbmcgJHtjb3VudHJ5fSB0cmFkZSBkYXRhLmApO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfSwgW10pO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKCF3b3JsZEdlb0pTT04gfHwgT2JqZWN0LnZhbHVlcyh0cmFkZURhdGEpLmV2ZXJ5KGRhdGEgPT4gZGF0YS5sZW5ndGggPT09IDApKSByZXR1cm47XHJcblxyXG4gICAgY29uc3Qgc3ZnID0gZDMuc2VsZWN0KHN2Z1JlZi5jdXJyZW50KVxyXG4gICAgICAuYXR0cigndmlld0JveCcsIGAwIDAgJHt3aWR0aH0gJHtoZWlnaHR9YClcclxuICAgICAgLnN0eWxlKCd3aWR0aCcsICcxMDAlJylcclxuICAgICAgLnN0eWxlKCdoZWlnaHQnLCAnYXV0bycpO1xyXG4gICAgc3ZnLnNlbGVjdEFsbChcIipcIikucmVtb3ZlKCk7XHJcblxyXG4gICAgY29uc3QgcHJvamVjdGlvbiA9IGQzLmdlb01lcmNhdG9yKCkuY2VudGVyKFswLCAyMF0pLnNjYWxlKDEzMCkudHJhbnNsYXRlKFt3aWR0aCAvIDIsIGhlaWdodCAvIDJdKTtcclxuICAgIGNvbnN0IHBhdGggPSBkMy5nZW9QYXRoKCkucHJvamVjdGlvbihwcm9qZWN0aW9uKTtcclxuXHJcbiAgICBjb25zdCBtYXBDb250YWluZXIgPSBzdmcuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJtYXAtY29udGFpbmVyXCIpO1xyXG5cclxuICAgIGNvbnN0IHpvb20gPSBkMy56b29tKClcclxuICAgICAgLnNjYWxlRXh0ZW50KFsxLCA4XSlcclxuICAgICAgLm9uKFwiem9vbVwiLCAoZXZlbnQpID0+IHtcclxuICAgICAgICBtYXBDb250YWluZXIuYXR0cihcInRyYW5zZm9ybVwiLCBldmVudC50cmFuc2Zvcm0pO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICBzdmcuY2FsbCh6b29tKTtcclxuXHJcbiAgICAvLyBDcmVhdGUgdG9vbHRpcCBkaXZcclxuICAgIGNvbnN0IHRvb2x0aXAgPSBkMy5zZWxlY3QoXCJib2R5XCIpLmFwcGVuZChcImRpdlwiKVxyXG4gICAgICAuYXR0cihcImNsYXNzXCIsIFwidG9vbHRpcFwiKVxyXG4gICAgICAuc3R5bGUoXCJwb3NpdGlvblwiLCBcImFic29sdXRlXCIpXHJcbiAgICAgIC5zdHlsZShcImJhY2tncm91bmRcIiwgXCJyZ2JhKDAsIDAsIDAsIDAuOClcIilcclxuICAgICAgLnN0eWxlKFwiY29sb3JcIiwgXCJlMGUwZTBcIilcclxuICAgICAgLnN0eWxlKFwicGFkZGluZ1wiLCBcIjhweCAxMnB4XCIpXHJcbiAgICAgIC5zdHlsZShcImJvcmRlci1yYWRpdXNcIiwgXCI0cHhcIilcclxuICAgICAgLnN0eWxlKFwicG9pbnRlci1ldmVudHNcIiwgXCJub25lXCIpXHJcbiAgICAgIC5zdHlsZShcImZvbnQtc2l6ZVwiLCBcIjE2cHhcIilcclxuICAgICAgLnN0eWxlKFwiZGlzcGxheVwiLCBcIm5vbmVcIik7XHJcblxyXG4gICAgLy8gRHJhdyBjb3VudHJpZXNcclxuICAgIG1hcENvbnRhaW5lci5zZWxlY3RBbGwoXCJwYXRoLmNvdW50cnlcIilcclxuICAgICAgLmRhdGEodG9wb2pzb24uZmVhdHVyZSh3b3JsZEdlb0pTT04sIHdvcmxkR2VvSlNPTi5vYmplY3RzLmNvdW50cmllcykuZmVhdHVyZXMpXHJcbiAgICAgIC5lbnRlcigpXHJcbiAgICAgIC5hcHBlbmQoXCJwYXRoXCIpXHJcbiAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJjb3VudHJ5XCIpXHJcbiAgICAgIC5hdHRyKFwiZFwiLCBwYXRoKVxyXG4gICAgICAuYXR0cihcImZpbGxcIiwgXCIjY2NjXCIpXHJcbiAgICAgIC5hdHRyKFwic3Ryb2tlXCIsIFwiIzMzM1wiKVxyXG4gICAgICAuYXR0cihcInN0cm9rZS13aWR0aFwiLCAxLjUpO1xyXG5cclxuICAgIC8vIERyYXcgdHJhZGUgbGluZXMgYW5kIGNpcmNsZXMgZm9yIGVhY2ggY291bnRyeVxyXG4gICAgY29uc3QgY291bnRyaWVzVG9TaG93ID0gc2VsZWN0ZWRDb3VudHJ5ID09PSBcIkFsbFwiID8gW1wiVW5pdGVkIFN0YXRlc1wiLCBcIlJ1c3NpYVwiLCBcIkNoaW5hXCJdIDogW3NlbGVjdGVkQ291bnRyeV07XHJcbiAgICBjb3VudHJpZXNUb1Nob3cuZm9yRWFjaChjb3VudHJ5ID0+IHtcclxuICAgICAgY29uc3QgdmFsaWRUcmFkZXMgPSB0cmFkZURhdGFbY291bnRyeV1cclxuICAgICAgICAubWFwKHJlY2lwaWVudCA9PiB7XHJcbiAgICAgICAgICBjb25zdCBvcmlnaW5Db29yZHMgPSBjb3VudHJ5Q2VudHJvaWRzW2NvdW50cnldO1xyXG4gICAgICAgICAgY29uc3QgZGVzdENvdW50cnkgPSBub3JtYWxpemVDb3VudHJ5TmFtZShyZWNpcGllbnQucmVjaXBpZW50KTtcclxuICAgICAgICAgIGNvbnN0IGRlc3RDb29yZHMgPSBjb3VudHJ5Q2VudHJvaWRzW2Rlc3RDb3VudHJ5XTtcclxuXHJcbiAgICAgICAgICBpZiAob3JpZ2luQ29vcmRzICYmIGRlc3RDb29yZHMpIHtcclxuICAgICAgICAgICAgY29uc3QgdHJhZGVWYWx1ZSA9IHJlY2lwaWVudC55ZWFyc1tzZWxlY3RlZFllYXJdIHx8IDA7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgb3JpZ2luQ291bnRyeTogY291bnRyeSxcclxuICAgICAgICAgICAgICBkZXN0Q291bnRyeSxcclxuICAgICAgICAgICAgICBvcmlnaW5YOiBwcm9qZWN0aW9uKG9yaWdpbkNvb3JkcylbMF0sXHJcbiAgICAgICAgICAgICAgb3JpZ2luWTogcHJvamVjdGlvbihvcmlnaW5Db29yZHMpWzFdLFxyXG4gICAgICAgICAgICAgIGRlc3RYOiBwcm9qZWN0aW9uKGRlc3RDb29yZHMpWzBdLFxyXG4gICAgICAgICAgICAgIGRlc3RZOiBwcm9qZWN0aW9uKGRlc3RDb29yZHMpWzFdLFxyXG4gICAgICAgICAgICAgIHRyYWRlVmFsdWVcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmZpbHRlcihkID0+IGQgJiYgZC50cmFkZVZhbHVlID4gMCk7XHJcblxyXG4gICAgICBjb25zdCB0b3BSZWNpcGllbnRzID0gdmFsaWRUcmFkZXNcclxuICAgICAgICAuc29ydCgoYSwgYikgPT4gYi50cmFkZVZhbHVlIC0gYS50cmFkZVZhbHVlKVxyXG4gICAgICAgIC5zbGljZSgwLCA1KVxyXG4gICAgICAgIC5tYXAoZCA9PiBkLmRlc3RDb3VudHJ5KTtcclxuXHJcbiAgICAgIGNvbnN0IG1heFRyYWRlVmFsdWUgPSBkMy5tYXgodmFsaWRUcmFkZXMsIGQgPT4gZC50cmFkZVZhbHVlKSB8fCAwO1xyXG4gICAgICBjb25zdCBzdHJva2VTY2FsZSA9IGQzLnNjYWxlU3FydCgpLmRvbWFpbihbMCwgbWF4VHJhZGVWYWx1ZV0pLnJhbmdlKFsxLCA0XSk7XHJcblxyXG4gICAgICAvLyBEcmF3IHRyYWRlIGxpbmVzXHJcbiAgICAgIG1hcENvbnRhaW5lci5zZWxlY3RBbGwoYGxpbmUudHJhZGUtbGluZS0ke2NvdW50cnl9YClcclxuICAgICAgICAuZGF0YSh2YWxpZFRyYWRlcylcclxuICAgICAgICAuZW50ZXIoKVxyXG4gICAgICAgIC5hcHBlbmQoXCJsaW5lXCIpXHJcbiAgICAgICAgLmF0dHIoXCJjbGFzc1wiLCBgdHJhZGUtbGluZS0ke2NvdW50cnl9YClcclxuICAgICAgICAuYXR0cihcIngxXCIsIGQgPT4gZC5vcmlnaW5YKVxyXG4gICAgICAgIC5hdHRyKFwieTFcIiwgZCA9PiBkLm9yaWdpblkpXHJcbiAgICAgICAgLmF0dHIoXCJ4MlwiLCBkID0+IGQuZGVzdFgpXHJcbiAgICAgICAgLmF0dHIoXCJ5MlwiLCBkID0+IGQuZGVzdFkpXHJcbiAgICAgICAgLmF0dHIoXCJzdHJva2VcIiwgb3JpZ2luQ29sb3JzW2NvdW50cnldKVxyXG4gICAgICAgIC5hdHRyKFwic3Ryb2tlLXdpZHRoXCIsIGQgPT4gc3Ryb2tlU2NhbGUoZC50cmFkZVZhbHVlKSlcclxuICAgICAgICAub24oXCJtb3VzZW92ZXJcIiwgKGV2ZW50LCBkKSA9PiB7XHJcbiAgICAgICAgICB0b29sdGlwXHJcbiAgICAgICAgICAgIC5zdHlsZShcImRpc3BsYXlcIiwgXCJibG9ja1wiKVxyXG4gICAgICAgICAgICAuaHRtbChgXHJcbiAgICAgICAgICAgICAgPHN0cm9uZz5PcmlnaW46PC9zdHJvbmc+ICR7ZC5vcmlnaW5Db3VudHJ5fTxici8+XHJcbiAgICAgICAgICAgICAgPHN0cm9uZz5EZXN0aW5hdGlvbjo8L3N0cm9uZz4gJHtkLmRlc3RDb3VudHJ5fTxici8+XHJcbiAgICAgICAgICAgICAgPHN0cm9uZz5UcmFkZSBWYWx1ZTo8L3N0cm9uZz4gJHtkLnRyYWRlVmFsdWV9QiBVU0RcclxuICAgICAgICAgICAgYCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAub24oXCJtb3VzZW1vdmVcIiwgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICB0b29sdGlwXHJcbiAgICAgICAgICAgIC5zdHlsZShcImxlZnRcIiwgYCR7ZXZlbnQucGFnZVggKyAxMH1weGApXHJcbiAgICAgICAgICAgIC5zdHlsZShcInRvcFwiLCBgJHtldmVudC5wYWdlWSArIDEwfXB4YCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAub24oXCJtb3VzZW91dFwiLCAoKSA9PiB7XHJcbiAgICAgICAgICB0b29sdGlwLnN0eWxlKFwiZGlzcGxheVwiLCBcIm5vbmVcIik7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAvLyBEcmF3IHRyYWRlIGNpcmNsZXNcclxuICAgICAgbWFwQ29udGFpbmVyLnNlbGVjdEFsbChgY2lyY2xlLnRyYWRlLWNpcmNsZS0ke2NvdW50cnl9YClcclxuICAgICAgICAuZGF0YSh2YWxpZFRyYWRlcylcclxuICAgICAgICAuZW50ZXIoKVxyXG4gICAgICAgIC5hcHBlbmQoXCJjaXJjbGVcIilcclxuICAgICAgICAuYXR0cihcImNsYXNzXCIsIGB0cmFkZS1jaXJjbGUtJHtjb3VudHJ5fWApXHJcbiAgICAgICAgLmF0dHIoXCJjeFwiLCBkID0+IGQuZGVzdFgpXHJcbiAgICAgICAgLmF0dHIoXCJjeVwiLCBkID0+IGQuZGVzdFkpXHJcbiAgICAgICAgLmF0dHIoXCJyXCIsIGQgPT4gdG9wUmVjaXBpZW50cy5pbmNsdWRlcyhkLmRlc3RDb3VudHJ5KSA/IDYgOiAzKVxyXG4gICAgICAgIC5hdHRyKFwiZmlsbFwiLCBkID0+IHRvcFJlY2lwaWVudHMuaW5jbHVkZXMoZC5kZXN0Q291bnRyeSkgPyBcIiM4QTJCRTJcIiA6IG9yaWdpbkNvbG9yc1tjb3VudHJ5XSlcclxuICAgICAgICAub24oXCJtb3VzZW92ZXJcIiwgKGV2ZW50LCBkKSA9PiB7XHJcbiAgICAgICAgICB0b29sdGlwXHJcbiAgICAgICAgICAgIC5zdHlsZShcImRpc3BsYXlcIiwgXCJibG9ja1wiKVxyXG4gICAgICAgICAgICAuaHRtbChgXHJcbiAgICAgICAgICAgICAgPHN0cm9uZz5PcmlnaW46PC9zdHJvbmc+ICR7ZC5vcmlnaW5Db3VudHJ5fTxici8+XHJcbiAgICAgICAgICAgICAgPHN0cm9uZz5EZXN0aW5hdGlvbjo8L3N0cm9uZz4gJHtkLmRlc3RDb3VudHJ5fTxici8+XHJcbiAgICAgICAgICAgICAgPHN0cm9uZz5UcmFkZSBWYWx1ZTo8L3N0cm9uZz4gJHtkLnRyYWRlVmFsdWV9QiBVU0RcclxuICAgICAgICAgICAgYCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAub24oXCJtb3VzZW1vdmVcIiwgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICB0b29sdGlwXHJcbiAgICAgICAgICAgIC5zdHlsZShcImxlZnRcIiwgYCR7ZXZlbnQucGFnZVggKyAxMH1weGApXHJcbiAgICAgICAgICAgIC5zdHlsZShcInRvcFwiLCBgJHtldmVudC5wYWdlWSArIDEwfXB4YCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAub24oXCJtb3VzZW91dFwiLCAoKSA9PiB7XHJcbiAgICAgICAgICB0b29sdGlwLnN0eWxlKFwiZGlzcGxheVwiLCBcIm5vbmVcIik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gKCkgPT4gdG9vbHRpcC5yZW1vdmUoKTtcclxuICB9LCBbd29ybGRHZW9KU09OLCB0cmFkZURhdGEsIGNvdW50cnlDZW50cm9pZHMsIHNlbGVjdGVkWWVhciwgc2VsZWN0ZWRDb3VudHJ5XSk7XHJcblxyXG4gIC8vIExlZ2VuZCBDb21wb25lbnRcclxuICBjb25zdCBMZWdlbmQgPSAoKSA9PiAoXHJcbiAgICA8ZGl2IHN0eWxlPXt7XHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICBoZWlnaHQ6ICcxOTBweCcsXHJcbiAgICAgIHdpZHRoOiAnMTcwcHgnLFxyXG4gICAgICBib3R0b206ICcyMHB4JyxcclxuICAgICAgbGVmdDogJzIwcHgnLFxyXG4gICAgICBiYWNrZ3JvdW5kOiAncmdiYSgwLCAwLCAwLCAwLjkpJyxcclxuICAgICAgcGFkZGluZzogJzEwcHgnLFxyXG4gICAgICBib3JkZXJSYWRpdXM6ICc4cHgnLFxyXG4gICAgICBmb250U2l6ZTogJzE0cHgnLFxyXG4gICAgICBjb2xvcjogJyNlMGUwZTAnLFxyXG4gICAgfX0+XHJcbiAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAnMTBweCcgfX0+PHN0cm9uZz5PcmlnaW4gQ291bnRyaWVzPC9zdHJvbmc+PC9kaXY+XHJcblxyXG4gICAgICB7T2JqZWN0LmVudHJpZXMob3JpZ2luQ29sb3JzKVxyXG4gICAgICAgIC5maWx0ZXIoKFtjb3VudHJ5XSkgPT4gY291bnRyeSAhPT0gXCJBbGxcIilcclxuICAgICAgICAubWFwKChbY291bnRyeSwgY29sb3JdKSA9PiAoXHJcbiAgICAgICAgICA8ZGl2IGtleT17Y291bnRyeX0gc3R5bGU9e3sgZGlzcGxheTogJ2ZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywgbWFyZ2luQm90dG9tOiAnMTBweCcgfX0+XHJcbiAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcclxuICAgICAgICAgICAgICB3aWR0aDogJzEycHgnLCBoZWlnaHQ6ICcxMnB4JywgYmFja2dyb3VuZENvbG9yOiBjb2xvciwgbWFyZ2luUmlnaHQ6ICc4cHgnLCBib3JkZXJSYWRpdXM6ICc1MCUnXHJcbiAgICAgICAgICAgIH19PjwvZGl2PlxyXG4gICAgICAgICAgICA8c3Bhbj57Y291bnRyeX08L3NwYW4+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgKSl9XHJcbiAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnMTBweCcgfX0+PHN0cm9uZz5SZWNpcGllbnQgSW1wb3J0YW5jZTwvc3Ryb25nPjwvZGl2PlxyXG4gICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgYWxpZ25JdGVtczogJ2NlbnRlcicsIG1hcmdpblRvcDogJzVweCcgfX0+XHJcbiAgICAgICAgPHN2ZyB3aWR0aD1cIjIwXCIgaGVpZ2h0PVwiMjBcIiBzdHlsZT17eyBtYXJnaW5SaWdodDogJzZweCcgfX0+XHJcbiAgICAgICAgICA8Y2lyY2xlIGN4PVwiMTBcIiBjeT1cIjEwXCIgcj1cIjNcIiBmaWxsPVwiI2UwZTBlMFwiIC8+XHJcbiAgICAgICAgPC9zdmc+XHJcbiAgICAgICAgPHNwYW4+Tm9ybWFsIFJlY2lwaWVudDwvc3Bhbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2ZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywgbWFyZ2luVG9wOiAnNXB4JyB9fT5cclxuICAgICAgICA8c3ZnIHdpZHRoPVwiMjBcIiBoZWlnaHQ9XCIyMFwiIHN0eWxlPXt7IG1hcmdpblJpZ2h0OiAnNnB4JyB9fT5cclxuICAgICAgICAgIDxjaXJjbGUgY3g9XCIxMFwiIGN5PVwiMTBcIiByPVwiNlwiIGZpbGw9XCIjOEEyQkUyXCIgLz5cclxuICAgICAgICA8L3N2Zz5cclxuICAgICAgICA8c3Bhbj5Ub3AgUmVjaXBpZW50PC9zcGFuPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IHN0eWxlPXt7IHBvc2l0aW9uOiAncmVsYXRpdmUnLCB3aWR0aDogJzEwMCUnfX0+XHJcblxyXG4gICAgICA8aDMgc3R5bGU9e3t0ZXh0QWxpZ246ICdjZW50ZXInLCBmb250U2l6ZTogJzI0cHgnLCBjb2xvcjogJyNlNzRjM2MnLCBwYWRkaW5nVG9wOiAnMjBweCcsfX0+XHJcbiAgICAgICAgICBHbG9iYWwgQXJtcyBQcm9saWZlcmF0aW9uIHtzZWxlY3RlZFllYXJ9XHJcbiAgICAgIDwvaDM+XHJcblxyXG4gICAgICB7LyogRGlzcGxheSBlcnJvciBtZXNzYWdlcyBpZiBhbnkgKi99XHJcbiAgICAgIHtlcnJvciAmJiA8ZGl2IHN0eWxlPXt7IGNvbG9yOiAncmVkJywgcG9zaXRpb246ICdhYnNvbHV0ZScsIHRvcDogJzYwcHgnLCBsZWZ0OiAnNTAlJywgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgtNTAlKScsIGJhY2tncm91bmQ6ICdyZ2JhKDI1NSwyNTUsMjU1LDAuOCknLCBwYWRkaW5nOiAnNXB4JywgYm9yZGVyUmFkaXVzOiAnNHB4JyB9fT57ZXJyb3J9PC9kaXY+fVxyXG4gICAgICBcclxuICAgICAgPGlucHV0XHJcbiAgICAgICAgICB0eXBlPVwicmFuZ2VcIlxyXG4gICAgICAgICAgbWluPVwiMTk1MFwiXHJcbiAgICAgICAgICBtYXg9XCIyMDIzXCJcclxuICAgICAgICAgIHZhbHVlPXtzZWxlY3RlZFllYXJ9XHJcbiAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFNlbGVjdGVkWWVhcigrZS50YXJnZXQudmFsdWUpfVxyXG4gICAgICAgICAgc3R5bGU9e3tcclxuICAgICAgICAgICAgd2lkdGg6ICc4MCUnLFxyXG4gICAgICAgICAgICBhcHBlYXJhbmNlOiAnbm9uZScsXHJcbiAgICAgICAgICAgIGhlaWdodDogJzhweCcsXHJcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ2dyYXknLFxyXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc1cHgnLFxyXG4gICAgICAgICAgICBvdXRsaW5lOiAnbm9uZScsXHJcbiAgICAgICAgICAgIG1hcmdpbjogJzIwcHggYXV0byAxMHB4JyxcclxuICAgICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcclxuICAgICAgICAgICAgYWNjZW50Q29sb3I6ICcjZTc0YzNjJyxcclxuICAgICAgICAgIH19XHJcbiAgICAgIC8+XHJcblxyXG4gICAgICB7LyogU1ZHIE1hcCAqL31cclxuICAgICAgPHN2ZyByZWY9e3N2Z1JlZn0gc3R5bGU9e3sgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnODB2aCcsIGJvcmRlcjogJzNweCBzb2xpZCAjZTc0YzNjJywgYm9yZGVyUmFkaXVzOiAnOHB4JyB9fT48L3N2Zz5cclxuXHJcbiAgICAgIHsvKiBMZWdlbmQgKi99XHJcbiAgICAgIHt3b3JsZEdlb0pTT04gJiYgT2JqZWN0LnZhbHVlcyh0cmFkZURhdGEpLnNvbWUoZGF0YSA9PiBkYXRhLmxlbmd0aCA+IDApICYmIDxMZWdlbmQgLz59XHJcblxyXG4gICAgICB7LyogQ29udHJvbHMgKi99XHJcbiAgICAgIDxkaXYgc3R5bGU9e3sgcG9zaXRpb246ICdhYnNvbHV0ZScsIGJvdHRvbTogJzIyMHB4JywgbGVmdDogJzIwcHgnLCBjb2xvcjogJ2JsYWNrJywgZGlzcGxheTogJ2ZsZXgnLCBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJ319PlxyXG5cclxuICAgICAgICBcclxuICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImNvdW50cnlcIiBzdHlsZT17eyBkaXNwbGF5OiAnYmxvY2snLCBtYXJnaW5Cb3R0b206ICcxMHB4JywgY29sb3I6ICcjZTBlMGUwJywgZm9udFNpemU6ICcxNHB4JywgZm9udFdlaWdodDogJ2JvbGQnfX0+U2VsZWN0IENvdW50cnk8L2xhYmVsPlxyXG4gICAgICAgIDxzZWxlY3QgXHJcbiAgICAgICAgICBpZD1cImNvdW50cnlcIiBcclxuICAgICAgICAgIHZhbHVlPXtzZWxlY3RlZENvdW50cnl9IFxyXG4gICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRTZWxlY3RlZENvdW50cnkoZS50YXJnZXQudmFsdWUpfVxyXG4gICAgICAgICAgc3R5bGU9e3tcclxuICAgICAgICAgICAgZm9udFNpemU6ICcxMnB4JyxcclxuICAgICAgICAgICAgcGFkZGluZzogJzZweCAxMHB4JyxcclxuICAgICAgICAgICAgd2lkdGg6ICcxNzBweCcsXHJcbiAgICAgICAgICAgIGNvbG9yOiAnI2UwZTBlMCcsXHJcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzhweCcsXHJcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ2JsYWNrJ1xyXG4gICAgICAgICAgfX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiQWxsXCI+QWxsPC9vcHRpb24+XHJcbiAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiVW5pdGVkIFN0YXRlc1wiPlVuaXRlZCBTdGF0ZXM8L29wdGlvbj5cclxuICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJSdXNzaWFcIj5SdXNzaWE8L29wdGlvbj5cclxuICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJDaGluYVwiPkNoaW5hPC9vcHRpb24+XHJcbiAgICAgICAgPC9zZWxlY3Q+XHJcblxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNaWdyYXRpb25NYXA7XHJcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJztcclxuXHJcblxyXG5jb25zdCBGb3JjZURpcmVjdGVkR3JhcGggPSAoKSA9PiB7XHJcbiAgY29uc3Qgc3ZnUmVmID0gdXNlUmVmKCk7XHJcbiAgY29uc3Qgd2lkdGggPSAxMjAwO1xyXG4gIGNvbnN0IGhlaWdodCA9IDY3MDtcclxuICBjb25zdCBkYXRhVXJsID0gJy9kYXRhL3Byb2Nlc3NlZC9wcm9jZXNzZWRfcmVjaXBpZW50c19vZl9jb21iaW5lZF91c19jaGluYV9ydXNzaWFfYXJtc19oaWVyYXJjaGljYWwuanNvbic7XHJcbiAgXHJcbiAgLy8gU3RhdGUgZm9yIHRoZSBzZWxlY3RlZCB5ZWFyXHJcbiAgY29uc3QgW3NlbGVjdGVkWWVhciwgc2V0U2VsZWN0ZWRZZWFyXSA9IHVzZVN0YXRlKDIwMTQpO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgLy8gRmV0Y2ggZGF0YSBmcm9tIHRoZSBwcm92aWRlZCBVUkxcclxuICAgIGQzLmpzb24oZGF0YVVybCkudGhlbihyYXdEYXRhID0+IHtcclxuICAgICAgY29uc3QgZGF0YSA9IHJhd0RhdGEuZGF0YTsgLy8gQWNjZXNzIHRoZSBtYWluIGRhdGEgYXJyYXlcclxuXHJcbiAgICAgIC8vIENsZWFyIHByZXZpb3VzIFNWRyBjb250ZW50c1xyXG4gICAgICBjb25zdCBzdmcgPSBkMy5zZWxlY3Qoc3ZnUmVmLmN1cnJlbnQpO1xyXG4gICAgICBzdmcuc2VsZWN0QWxsKFwiKlwiKS5yZW1vdmUoKTtcclxuXHJcbiAgICAgIC8vIFByb2Nlc3Mgbm9kZXMgYW5kIGxpbmtzIGJhc2VkIG9uIHRoZSBkYXRhc2V0IHN0cnVjdHVyZSBhbmQgc2VsZWN0ZWQgeWVhclxyXG4gICAgICBjb25zdCBub2Rlc0FycmF5ID0gW107XHJcbiAgICAgIGNvbnN0IGxpbmtzID0gW107XHJcbiAgICAgIGNvbnN0IG5vZGVNYXAgPSBuZXcgTWFwKCk7IC8vIEZvciBmYXN0ZXIgbG9va3VwIGFuZCBhdm9pZGluZyBkdXBsaWNhdGVzXHJcblxyXG4gICAgICBkYXRhLmZvckVhY2goc3VwcGxpZXJFbnRyeSA9PiB7XHJcbiAgICAgICAgY29uc3Qgc3VwcGxpZXIgPSBzdXBwbGllckVudHJ5LnN1cHBsaWVyO1xyXG4gICAgICAgIGlmICghbm9kZU1hcC5oYXMoc3VwcGxpZXIpKSB7XHJcbiAgICAgICAgICBub2RlTWFwLnNldChzdXBwbGllciwgeyBuYW1lOiBzdXBwbGllciwgZ3JvdXA6ICdzdXBwbGllcicgfSk7XHJcbiAgICAgICAgICBub2Rlc0FycmF5LnB1c2goeyBuYW1lOiBzdXBwbGllciwgZ3JvdXA6ICdzdXBwbGllcicgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzdXBwbGllckVudHJ5LnJlY2lwaWVudHMuZm9yRWFjaChyZWNpcGllbnRFbnRyeSA9PiB7XHJcbiAgICAgICAgICBjb25zdCByZWNpcGllbnQgPSByZWNpcGllbnRFbnRyeS5yZWNpcGllbnQ7XHJcbiAgICAgICAgICBjb25zdCB0cmFkZVZhbHVlID0gcmVjaXBpZW50RW50cnkueWVhcnNbc2VsZWN0ZWRZZWFyXSB8fCAwO1xyXG5cclxuICAgICAgICAgIC8vIE9ubHkgYWRkIHRoZSBsaW5rIGlmIHRoZXJlJ3MgYSB0cmFkZSB2YWx1ZSBmb3IgdGhlIHNlbGVjdGVkIHllYXJcclxuICAgICAgICAgIGlmICh0cmFkZVZhbHVlID4gMCkge1xyXG4gICAgICAgICAgICBpZiAoIW5vZGVNYXAuaGFzKHJlY2lwaWVudCkpIHtcclxuICAgICAgICAgICAgICBub2RlTWFwLnNldChyZWNpcGllbnQsIHsgbmFtZTogcmVjaXBpZW50LCBncm91cDogJ3JlY2lwaWVudCcgfSk7XHJcbiAgICAgICAgICAgICAgbm9kZXNBcnJheS5wdXNoKHsgbmFtZTogcmVjaXBpZW50LCBncm91cDogJ3JlY2lwaWVudCcgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGlua3MucHVzaCh7XHJcbiAgICAgICAgICAgICAgc291cmNlOiBzdXBwbGllcixcclxuICAgICAgICAgICAgICB0YXJnZXQ6IHJlY2lwaWVudCxcclxuICAgICAgICAgICAgICB2YWx1ZTogdHJhZGVWYWx1ZSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgLy8gRGVmaW5lIGNvbG9yIGFzc2lnbm1lbnRzIGZvciBzcGVjaWZpYyBzdXBwbGllcnNcclxuICAgICAgY29uc3QgY29sb3JTY2FsZSA9IGQzLnNjYWxlT3JkaW5hbCgpXHJcbiAgICAgICAgLmRvbWFpbihbJ1VuaXRlZCBTdGF0ZXMnLCAnUnVzc2lhJywgJ0NoaW5hJywgJ0luZGlhJ10pXHJcbiAgICAgICAgLnJhbmdlKFsnIzQ2ODJCNCcsICcjREMxNDNDJywgJyNGRkRCNTgnLCAnI0ZGNjcxRiddKTsgLy8gQmx1ZSBmb3IgVVMsIFJlZCBmb3IgUnVzc2lhLCBZZWxsb3cgZm9yIENoaW5hXHJcblxyXG4gICAgICBjb25zdCBub2RlU2l6ZVNjYWxlID0gZDMuc2NhbGVTcXJ0KClcclxuICAgICAgICAuZG9tYWluKFswLCBkMy5tYXgobGlua3MsIGQgPT4gZC52YWx1ZSldKVxyXG4gICAgICAgIC5yYW5nZShbNSwgMjBdKTtcclxuXHJcbiAgICAgIHN2Zy5hdHRyKFwidmlld0JveFwiLCBbMCwgMCwgd2lkdGgsIGhlaWdodF0pO1xyXG5cclxuICAgICAgLy8gQWRkIGNvbnRhaW5lciBncm91cCBmb3Igem9vbWluZ1xyXG4gICAgICBjb25zdCBjb250YWluZXIgPSBzdmcuYXBwZW5kKFwiZ1wiKTtcclxuXHJcbiAgICAgIGNvbnN0IGRlZmF1bHRUcmFuc2Zvcm0gPSBkMy56b29tSWRlbnRpdHlcclxuICAgICAgICAudHJhbnNsYXRlKHdpZHRoIC8gOCwgaGVpZ2h0IC8gNCkgLy8gUGFuIHRvIGFkanVzdCBpbml0aWFsIHBvc2l0aW9uXHJcbiAgICAgICAgLnNjYWxlKDAuNzUpOyAvLyBab29tIGxldmVsXHJcblxyXG4gICAgICBzdmcuY2FsbChkMy56b29tKClcclxuICAgICAgICAuc2NhbGVFeHRlbnQoWzAuNSwgNV0pXHJcbiAgICAgICAgLm9uKFwiem9vbVwiLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgIGNvbnRhaW5lci5hdHRyKFwidHJhbnNmb3JtXCIsIGV2ZW50LnRyYW5zZm9ybSk7XHJcbiAgICAgICAgfSkpO1xyXG5cclxuICAgICAgc3ZnLmNhbGwoZDMuem9vbSgpLnRyYW5zZm9ybSwgZGVmYXVsdFRyYW5zZm9ybSk7XHJcblxyXG4gICAgICAvLyBTZXQgdGhlIGluaXRpYWwgdHJhbnNmb3JtIG9uIHRoZSBjb250YWluZXJcclxuICAgICAgY29udGFpbmVyLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZGVmYXVsdFRyYW5zZm9ybSk7XHJcblxyXG4gICAgICAvLyBEcmF3IGxpbmtzIHdpdGggbG93ZXIgb3BhY2l0eSBmb3IgYWVzdGhldGljIGVmZmVjdFxyXG4gICAgICBjb25zdCBsaW5rID0gY29udGFpbmVyLmFwcGVuZChcImdcIilcclxuICAgICAgICAuYXR0cihcInN0cm9rZS1vcGFjaXR5XCIsIDAuMylcclxuICAgICAgICAuc2VsZWN0QWxsKFwibGluZVwiKVxyXG4gICAgICAgIC5kYXRhKGxpbmtzKVxyXG4gICAgICAgIC5qb2luKFwibGluZVwiKVxyXG4gICAgICAgIC5hdHRyKFwic3Ryb2tlXCIsIFwiI2UwZTBlMFwiKVxyXG4gICAgICAgIC5hdHRyKFwic3Ryb2tlLXdpZHRoXCIsIGQgPT4gZC52YWx1ZSAvIDEwMCk7XHJcblxyXG4gICAgICAvLyBEcmF3IG5vZGVzIHdpdGggc2l6ZSBhbmQgY29sb3IgYmFzZWQgb24gZ3JvdXBcclxuICAgICAgY29uc3Qgbm9kZSA9IGNvbnRhaW5lci5hcHBlbmQoXCJnXCIpXHJcbiAgICAgICAgLnNlbGVjdEFsbChcImNpcmNsZVwiKVxyXG4gICAgICAgIC5kYXRhKG5vZGVzQXJyYXkpXHJcbiAgICAgICAgLmpvaW4oXCJjaXJjbGVcIilcclxuICAgICAgICAuYXR0cihcInJcIiwgZCA9PiBub2RlU2l6ZVNjYWxlKGxpbmtzLmZpbmQobGluayA9PiBsaW5rLnRhcmdldCA9PT0gZC5uYW1lIHx8IGxpbmsuc291cmNlID09PSBkLm5hbWUpPy52YWx1ZSB8fCAxKSlcclxuICAgICAgICAuYXR0cihcImZpbGxcIiwgZCA9PiB7XHJcbiAgICAgICAgICBpZiAoZC5ncm91cCA9PT0gJ3N1cHBsaWVyJykgcmV0dXJuIGNvbG9yU2NhbGUoZC5uYW1lKSB8fCAnI2UwZTBlMCc7XHJcbiAgICAgICAgICBpZiAoZC5uYW1lID09PSAnSW5kaWEnKSByZXR1cm4gY29sb3JTY2FsZShkLm5hbWUpIHx8ICcjZTBlMGUwJztcclxuICAgICAgICAgIHJldHVybiAnI2UwZTBlMCc7IC8vIERlZmF1bHQgY29sb3IgZm9yIHJlY2lwaWVudHNcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYWxsKGQzLmRyYWcoKVxyXG4gICAgICAgICAgLm9uKFwic3RhcnRcIiwgKGV2ZW50LCBkKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghZXZlbnQuYWN0aXZlKSBzaW11bGF0aW9uLmFscGhhVGFyZ2V0KDAuMykucmVzdGFydCgpO1xyXG4gICAgICAgICAgICBkLmZ4ID0gZC54O1xyXG4gICAgICAgICAgICBkLmZ5ID0gZC55O1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5vbihcImRyYWdcIiwgKGV2ZW50LCBkKSA9PiB7XHJcbiAgICAgICAgICAgIGQuZnggPSBldmVudC54O1xyXG4gICAgICAgICAgICBkLmZ5ID0gZXZlbnQueTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAub24oXCJlbmRcIiwgKGV2ZW50LCBkKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghZXZlbnQuYWN0aXZlKSBzaW11bGF0aW9uLmFscGhhVGFyZ2V0KDApO1xyXG4gICAgICAgICAgICBkLmZ4ID0gbnVsbDtcclxuICAgICAgICAgICAgZC5meSA9IG51bGw7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAvLyBBZGQgbGFiZWxzIGZvciBlYWNoIG5vZGVcclxuICAgICAgY29uc3QgbGFiZWwgPSBjb250YWluZXIuYXBwZW5kKFwiZ1wiKVxyXG4gICAgICAgIC5zZWxlY3RBbGwoXCJ0ZXh0XCIpXHJcbiAgICAgICAgLmRhdGEobm9kZXNBcnJheSlcclxuICAgICAgICAuam9pbihcInRleHRcIilcclxuICAgICAgICAuYXR0cihcImR4XCIsIGQgPT4ge1xyXG4gICAgICAgICAgY29uc3Qgbm9kZVZhbHVlID0gbGlua3MuZmluZChsaW5rID0+IGxpbmsudGFyZ2V0ID09PSBkLm5hbWUgfHwgbGluay5zb3VyY2UgPT09IGQubmFtZSk/LnZhbHVlIHx8IDE7XHJcbiAgICAgICAgICByZXR1cm4gbm9kZVNpemVTY2FsZShub2RlVmFsdWUpICsgNTsgLy8gQWRkIDVweCBwYWRkaW5nIGFmdGVyIHRoZSByYWRpdXNcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5hdHRyKFwiZHlcIiwgNClcclxuICAgICAgICAuYXR0cihcImZvbnQtc2l6ZVwiLCBcIjE2cHhcIilcclxuICAgICAgICAuYXR0cihcImZpbGxcIiwgXCIjZTBlMGUwXCIpXHJcbiAgICAgICAgLnRleHQoZCA9PiBkLm5hbWUpO1xyXG5cclxuICAgICAgLy8gVG9vbHRpcCBmb3Igbm9kZSBob3ZlciBkZXRhaWxzXHJcbiAgICAgIGNvbnN0IHRvb2x0aXAgPSBkMy5zZWxlY3QoXCJib2R5XCIpLmFwcGVuZChcImRpdlwiKVxyXG4gICAgICAgIC5zdHlsZShcInBvc2l0aW9uXCIsIFwiYWJzb2x1dGVcIilcclxuICAgICAgICAuc3R5bGUoXCJiYWNrZ3JvdW5kXCIsIFwicmdiYSgwLCAwLCAwLCAwLjgpXCIpXHJcbiAgICAgICAgLnN0eWxlKFwiY29sb3JcIiwgXCIjZTBlMGUwXCIpXHJcbiAgICAgICAgLnN0eWxlKFwicGFkZGluZ1wiLCBcIjEycHhcIilcclxuICAgICAgICAuc3R5bGUoXCJib3JkZXItcmFkaXVzXCIsIFwiOHB4XCIpXHJcbiAgICAgICAgLnN0eWxlKFwiZm9udC1zaXplXCIsIFwiMTZweFwiKVxyXG4gICAgICAgIC5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsIFwibm9uZVwiKVxyXG4gICAgICAgIC5zdHlsZShcImRpc3BsYXlcIiwgXCJub25lXCIpO1xyXG5cclxuICAgICAgbm9kZS5vbihcIm1vdXNlb3ZlclwiLCAoZXZlbnQsIGQpID0+IHtcclxuICAgICAgICB0b29sdGlwLnN0eWxlKFwiZGlzcGxheVwiLCBcImJsb2NrXCIpXHJcbiAgICAgICAgICAuaHRtbChgXHJcbiAgICAgICAgICAgIDxzdHJvbmc+JHtkLm5hbWV9PC9zdHJvbmc+XHJcbiAgICAgICAgICBgKTtcclxuICAgICAgfSlcclxuICAgICAgLm9uKFwibW91c2Vtb3ZlXCIsIChldmVudCkgPT4ge1xyXG4gICAgICAgIHRvb2x0aXAuc3R5bGUoXCJ0b3BcIiwgYCR7ZXZlbnQucGFnZVkgKyAxMH1weGApXHJcbiAgICAgICAgICAuc3R5bGUoXCJsZWZ0XCIsIGAke2V2ZW50LnBhZ2VYICsgMTB9cHhgKTtcclxuICAgICAgfSlcclxuICAgICAgLm9uKFwibW91c2VvdXRcIiwgKCkgPT4gdG9vbHRpcC5zdHlsZShcImRpc3BsYXlcIiwgXCJub25lXCIpKTtcclxuXHJcbiAgICAgIC8vIERlZmluZSBzaW11bGF0aW9uIGFuZCBhcHBseSBmb3JjZXNcclxuICAgICAgY29uc3Qgc2ltdWxhdGlvbiA9IGQzLmZvcmNlU2ltdWxhdGlvbihub2Rlc0FycmF5KVxyXG4gICAgICAgIC5mb3JjZShcImxpbmtcIiwgZDMuZm9yY2VMaW5rKGxpbmtzKS5pZChkID0+IGQubmFtZSkuZGlzdGFuY2UoNzUpLnN0cmVuZ3RoKDAuMjUpKVxyXG4gICAgICAgIC5mb3JjZShcImNoYXJnZVwiLCBkMy5mb3JjZU1hbnlCb2R5KCkuc3RyZW5ndGgoLTQwMCkpXHJcbiAgICAgICAgLmZvcmNlKFwiY2VudGVyXCIsIGQzLmZvcmNlQ2VudGVyKHdpZHRoIC8gMiwgaGVpZ2h0IC8gMikpXHJcbiAgICAgICAgLm9uKFwidGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICBsaW5rXHJcbiAgICAgICAgICAgIC5hdHRyKFwieDFcIiwgZCA9PiBkLnNvdXJjZS54KVxyXG4gICAgICAgICAgICAuYXR0cihcInkxXCIsIGQgPT4gZC5zb3VyY2UueSlcclxuICAgICAgICAgICAgLmF0dHIoXCJ4MlwiLCBkID0+IGQudGFyZ2V0LngpXHJcbiAgICAgICAgICAgIC5hdHRyKFwieTJcIiwgZCA9PiBkLnRhcmdldC55KTtcclxuXHJcbiAgICAgICAgICBub2RlXHJcbiAgICAgICAgICAgIC5hdHRyKFwiY3hcIiwgZCA9PiBkLngpXHJcbiAgICAgICAgICAgIC5hdHRyKFwiY3lcIiwgZCA9PiBkLnkpO1xyXG5cclxuICAgICAgICAgIGxhYmVsXHJcbiAgICAgICAgICAgIC5hdHRyKFwieFwiLCBkID0+IGQueClcclxuICAgICAgICAgICAgLmF0dHIoXCJ5XCIsIGQgPT4gZC55KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgIC8vIENsZWFudXAgb24gdW5tb3VudFxyXG4gICAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICAgIHRvb2x0aXAucmVtb3ZlKCk7XHJcbiAgICAgIH07XHJcbiAgICB9KTtcclxuICB9LCBbc2VsZWN0ZWRZZWFyXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IHN0eWxlPXt7IHBvc2l0aW9uOiAncmVsYXRpdmUnLCB3aWR0aDogJzEwMCUnfX0+XHJcbiAgICAgIDxoMyBzdHlsZT17e3RleHRBbGlnbjogJ2NlbnRlcicsIGZvbnRTaXplOiAnMjRweCcsIGNvbG9yOiAnI2U3NGMzYycsIHBhZGRpbmdUb3A6ICcyMHB4Jyx9fT5cclxuICAgICAgICAgIEdsb2JhbCBBcm1zIFRyYWRlIE5ldHdvcmsge3NlbGVjdGVkWWVhcn1cclxuICAgICAgPC9oMz5cclxuXHJcbiAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgdHlwZT1cInJhbmdlXCJcclxuICAgICAgICAgIG1pbj1cIjE5NTBcIlxyXG4gICAgICAgICAgbWF4PVwiMjAyM1wiXHJcbiAgICAgICAgICB2YWx1ZT17c2VsZWN0ZWRZZWFyfVxyXG4gICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRTZWxlY3RlZFllYXIoK2UudGFyZ2V0LnZhbHVlKX1cclxuICAgICAgICAgIHN0eWxlPXt7XHJcbiAgICAgICAgICAgIHdpZHRoOiAnODAlJyxcclxuICAgICAgICAgICAgYXBwZWFyYW5jZTogJ25vbmUnLFxyXG4gICAgICAgICAgICBoZWlnaHQ6ICc4cHgnLFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdncmF5JyxcclxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNXB4JyxcclxuICAgICAgICAgICAgb3V0bGluZTogJ25vbmUnLFxyXG4gICAgICAgICAgICBtYXJnaW46ICcyMHB4IGF1dG8gMTBweCcsXHJcbiAgICAgICAgICAgIGRpc3BsYXk6ICdibG9jaycsXHJcbiAgICAgICAgICAgIGFjY2VudENvbG9yOiAnI2U3NGMzYycsXHJcbiAgICAgICAgICB9fVxyXG4gICAgICAvPlxyXG5cclxuICAgICAgPHN2ZyByZWY9e3N2Z1JlZn0gc3R5bGU9e3sgd2lkdGg6ICcxMDAlJywgYm9yZGVyOiAnM3B4IHNvbGlkICNlNzRjM2MnLCBib3JkZXJSYWRpdXM6ICc4cHgnIH19Pjwvc3ZnPlxyXG4gICAgICBcclxuICAgIDwvZGl2PlxyXG4gICk7ICBcclxuICB9O1xyXG4gIFxyXG5leHBvcnQgZGVmYXVsdCBGb3JjZURpcmVjdGVkR3JhcGg7XHJcbiIsImNvbnN0IGNvdW50cnlDb29yZGluYXRlcyA9IHtcclxuICAnQWZnaGFuaXN0YW4nOiBbNjcuNzA5OTUzLCAzMy45MzkxMV0sXHJcbiAgJ0FsYmFuaWEnOiBbMjAuMTY4MzMxLCA0MS4xNTMzMzJdLFxyXG4gICdBbGdlcmlhJzogWzEuNjU5NjI2LCAyOC4wMzM4ODZdLFxyXG4gICdBbmdvbGEnOiBbMTcuODczODg3LCAtMTEuMjAyNjkyXSxcclxuICAnQXJnZW50aW5hJzogWy02My42MTY2NzIsIC0zOC40MTYwOTddLFxyXG4gICdBcm1lbmlhJzogWzQ1LjAzODE4OSwgNDAuMDY5MDk5XSxcclxuICAnQXVzdHJhbGlhJzogWzEzMy43NzUxMzYsIC0yNS4yNzQzOThdLFxyXG4gICdBdXN0cmlhJzogWzE0LjU1MDA3MiwgNDcuNTE2MjMxXSxcclxuICAnQXplcmJhaWphbic6IFs0Ny41NzY5MjcsIDQwLjE0MzEwNV0sXHJcbiAgJ0JhaHJhaW4nOiBbNTAuNjM3NzcyLCAyNS45MzA0MTRdLFxyXG4gICdCYW5nbGFkZXNoJzogWzkwLjM1NjMzMSwgMjMuNjg0OTk0XSxcclxuICAnQmVsYXJ1cyc6IFsyNy45NTMzODksIDUzLjcwOTgwN10sXHJcbiAgJ0JlbGdpdW0nOiBbNC40Njk5MzYsIDUwLjUwMzg4N10sXHJcbiAgJ0JvbGl2aWEnOiBbLTYzLjU4ODY1MywgLTE2LjI5MDE1NF0sXHJcbiAgJ0Jvc25pYS1IZXJ6ZWdvdmluYSc6IFsxNy42NzkwNzYsIDQzLjkxNTg4Nl0sXHJcbiAgJ0JyYXppbCc6IFstNTEuOTI1MjgsIC0xNC4yMzUwMDRdLFxyXG4gICdCdWxnYXJpYSc6IFsyNS40ODU4MywgNDIuNzMzODgzXSxcclxuICAnQ2FtYm9kaWEnOiBbMTA0Ljk5MDk2MywgMTIuNTY1Njc5XSxcclxuICAnQ2FuYWRhJzogWy0xMDYuMzQ2NzcxLCA1Ni4xMzAzNjZdLFxyXG4gICdDZW50cmFsIEFmcmljYW4gUmVwdWJsaWMnOiBbMjAuOTM5NDQ0LCA2LjYxMTExMV0sXHJcbiAgJ0NoYWQnOiBbMTguNzMyMjA3LCAxNS40NTQxNjZdLFxyXG4gICdDaGlsZSc6IFstNzEuNTQyOTY5LCAtMzUuNjc1MTQ3XSxcclxuICAnQ2hpbmEnOiBbMTA0LjE5NTM5NywgMzUuODYxNjZdLFxyXG4gICdDb2xvbWJpYSc6IFstNzQuMjk3MzMzLCA0LjU3MDg2OF0sXHJcbiAgJ0NvbmdvJzogWzE1LjgyNzY1OSwgLTAuMjI4MDIxXSxcclxuICAnQ29zdGEgUmljYSc6IFstODMuNzUzNDI4LCA5Ljc0ODkxN10sXHJcbiAgXCJDb3RlIGQnSXZvaXJlXCI6IFstNS41NDcwOCwgNy41Mzk5ODldLFxyXG4gICdDcm9hdGlhJzogWzE1LjIsIDQ1LjFdLFxyXG4gICdDdWJhJzogWy03Ny43ODExNjcsIDIxLjUyMTc1N10sXHJcbiAgJ0N5cHJ1cyc6IFszMy40Mjk4NTksIDM1LjEyNjQxM10sXHJcbiAgJ0N6ZWNoaWEnOiBbMTUuNDcyOTYyLCA0OS44MTc0OTJdLFxyXG4gICdDemVjaG9zbG92YWtpYSc6IFsxNS41LCA0OS43NV0sXHJcbiAgJ0Rlbm1hcmsnOiBbOS41MDE3ODUsIDU2LjI2MzkyXSxcclxuICAnRG9taW5pY2FuIFJlcHVibGljJzogWy03MC4xNjI2NTEsIDE4LjczNTY5M10sXHJcbiAgJ0RSIENvbmdvJzogWzIxLjc1ODY2NCwgLTQuMDM4MzMzXSxcclxuICAnRWFzdF9HZXJtYW55JzogWzEzLjQwNDk1NCwgNTIuNTIwMDA4XSxcclxuICAnRWN1YWRvcic6IFstNzguMTgzNDA2LCAtMS44MzEyMzldLFxyXG4gICdFZ3lwdCc6IFszMC44MDI0OTgsIDI2LjgyMDU1M10sXHJcbiAgJ0VsIFNhbHZhZG9yJzogWy04OC44OTY1MywgMTMuNzk0MTg1XSxcclxuICAnRXJpdHJlYSc6IFszOS43ODIzMzQsIDE1LjE3OTM4NF0sXHJcbiAgJ0V0aGlvcGlhJzogWzQwLjQ4OTY3MywgOS4xNDVdLFxyXG4gICdGaW5sYW5kJzogWzI1Ljc0ODE1MSwgNjEuOTI0MTFdLFxyXG4gICdGcmFuY2UnOiBbMi4yMTM3NDksIDQ2LjIyNzYzOF0sXHJcbiAgJ0dlb3JnaWEnOiBbNDMuMzU2ODkyLCA0Mi4zMTU0MDddLFxyXG4gICdHZXJtYW55JzogWzEwLjQ1MTUyNiwgNTEuMTY1NjkxXSxcclxuICAnR3JlZWNlJzogWzIxLjgyNDMxMiwgMzkuMDc0MjA4XSxcclxuICAnR3VhdGVtYWxhJzogWy05MC4yMzA3NTksIDE1Ljc4MzQ3MV0sXHJcbiAgJ0d1aW5lYSc6IFstOS42OTY2NDUsIDkuOTQ1NTg3XSxcclxuICAnR3VpbmVhLUJpc3NhdSc6IFstMTUuMTgwNDEzLCAxMS44MDM3NDldLFxyXG4gICdIYWl0aSc6IFstNzIuMjg1MjE1LCAxOC45NzExODddLFxyXG4gICdIb25kdXJhcyc6IFstODYuMjQxOTA1LCAxNS4xOTk5OTldLFxyXG4gICdIdW5nYXJ5JzogWzE5LjUwMzMwNCwgNDcuMTYyNDk0XSxcclxuICAnSW5kaWEnOiBbNzguOTYyODgsIDIwLjU5MzY4NF0sXHJcbiAgJ0luZG9uZXNpYSc6IFsxMTMuOTIxMzI3LCAtMC43ODkyNzVdLFxyXG4gICdJcmFuJzogWzUzLjY4ODA0NiwgMzIuNDI3OTA4XSxcclxuICAnSXJhcSc6IFs0My42NzkyOTEsIDMzLjIyMzE5MV0sXHJcbiAgJ0lyZWxhbmQnOiBbLTguMjQzODksIDUzLjQxMjkxXSxcclxuICAnSXNyYWVsJzogWzM0Ljg1MTYxMiwgMzEuMDQ2MDUxXSxcclxuICAnSXRhbHknOiBbMTIuNTY3MzgsIDQxLjg3MTk0XSxcclxuICAnSmFwYW4nOiBbMTM4LjI1MjkyNCwgMzYuMjA0ODI0XSxcclxuICAnSm9yZGFuJzogWzM2LjIzODQxNCwgMzAuNTg1MTY0XSxcclxuICAnS2F6YWtoc3Rhbic6IFs2Ni45MjM2ODQsIDQ4LjAxOTU3M10sXHJcbiAgJ0tlbnlhJzogWzM3LjkwNjE5MywgLTAuMDIzNTU5XSxcclxuICAnS3V3YWl0JzogWzQ3LjQ4MTc2NiwgMjkuMzExNjZdLFxyXG4gICdMYW9zJzogWzEwMi40OTU0OTYsIDE5Ljg1NjI3XSxcclxuICAnTGF0dmlhJzogWzI0LjYwMzE4OSwgNTYuODc5NjM1XSxcclxuICAnTGViYW5vbic6IFszNS44NjIyODUsIDMzLjg1NDcyMV0sXHJcbiAgJ0xpYnlhJzogWzE3LjIyODMzMSwgMjYuMzM1MV0sXHJcbiAgJ01hZGFnYXNjYXInOiBbNDYuODY5MTA3LCAtMTguNzY2OTQ3XSxcclxuICAnTWFsYXlzaWEnOiBbMTAxLjk3NTc2NiwgNC4yMTA0ODRdLFxyXG4gICdNYWxpJzogWy0zLjk5NjE2NiwgMTcuNTcwNjkyXSxcclxuICAnTWF1cml0YW5pYSc6IFstMTAuOTQwODM1LCAyMS4wMDc4OV0sXHJcbiAgJ01leGljbyc6IFstMTAyLjU1Mjc4NCwgMjMuNjM0NTAxXSxcclxuICAnTW9uZ29saWEnOiBbMTAzLjg0NjY1NiwgNDYuODYyNDk2XSxcclxuICAnTW9yb2Njbyc6IFstNy4wOTI2MiwgMzEuNzkxNzAyXSxcclxuICAnTW96YW1iaXF1ZSc6IFszNS41Mjk1NjIsIC0xOC42NjU2OTVdLFxyXG4gICdNeWFubWFyJzogWzk1Ljk1NjIyMywgMjEuOTEzOTY1XSxcclxuICAnTmFtaWJpYSc6IFsxOC40OTA0MSwgLTIyLjk1NzY0XSxcclxuICAnTmVwYWwnOiBbODQuMTI0MDA4LCAyOC4zOTQ4NTddLFxyXG4gICdOZXRoZXJsYW5kcyc6IFs1LjI5MTI2NiwgNTIuMTMyNjMzXSxcclxuICAnTmV3IFplYWxhbmQnOiBbMTc0Ljg4NTk3MSwgLTQwLjkwMDU1N10sXHJcbiAgJ05pY2FyYWd1YSc6IFstODUuMjA3MjI5LCAxMi44NjU0MTZdLFxyXG4gICdOaWdlcmlhJzogWzguNjc1Mjc3LCA5LjA4MTk5OV0sXHJcbiAgJ05vcnRoIE1hY2Vkb25pYSc6IFsyMS43NDUyNzUsIDQxLjYwODYzNV0sXHJcbiAgJ05vcnRoIFllbWVuJzogWzQ4LjUxNjM4OCwgMTUuNTUyNzI3XSxcclxuICAnTm9ydGhfS29yZWEnOiBbMTI3LjUxMDA5MywgNDAuMzM5ODUyXSxcclxuICAnTm9yd2F5JzogWzguNDY4OTQ2LCA2MC40NzIwMjRdLFxyXG4gICdPbWFuJzogWzU1LjkyMzI1NSwgMjEuNTEyNTgzXSxcclxuICAnUGFraXN0YW4nOiBbNjkuMzQ1MTE2LCAzMC4zNzUzMjFdLFxyXG4gICdQYXJhZ3VheSc6IFstNTguNDQzODMyLCAtMjMuNDQyNTAzXSxcclxuICAnUGVydSc6IFstNzUuMDE1MTUyLCAtOS4xODk5NjddLFxyXG4gICdQaGlsaXBwaW5lcyc6IFsxMjEuNzc0MDE3LCAxMi44Nzk3MjFdLFxyXG4gICdQb2xhbmQnOiBbMTkuMTQ1MTM2LCA1MS45MTk0MzhdLFxyXG4gICdQb3J0dWdhbCc6IFstOC4yMjQ0NTQsIDM5LjM5OTg3Ml0sXHJcbiAgJ1FhdGFyJzogWzUxLjE4Mzg4NCwgMjUuMzU0ODI2XSxcclxuICAnUm9tYW5pYSc6IFsyNC45NjY3NiwgNDUuOTQzMTYxXSxcclxuICAnUndhbmRhJzogWzI5Ljg3Mzg4OCwgLTEuOTQwMjc4XSxcclxuICAnU2F1ZGkgQXJhYmlhJzogWzQ1LjA3OTE2MiwgMjMuODg1OTQyXSxcclxuICAnU2VyYmlhJzogWzIxLjAwNTg1OSwgNDQuMDE2NTIxXSxcclxuICAnU2llcnJhIExlb25lJzogWy0xMS43Nzk4ODksIDguNDYwNTU1XSxcclxuICAnU2luZ2Fwb3JlJzogWzEwMy44MTk4MzYsIDEuMzUyMDgzXSxcclxuICAnU2xvdmFraWEnOiBbMTkuNjk5MDI0LCA0OC42NjkwMjZdLFxyXG4gICdTb21hbGlhJzogWzQ2LjE5OTYxNiwgNS4xNTIxNDldLFxyXG4gICdTb3V0aCBBZnJpY2EnOiBbMjIuOTM3NTA2LCAtMzAuNTU5NDgyXSxcclxuICAnU291dGggS29yZWEnOiBbMTI3Ljc2NjkyMiwgMzUuOTA3NzU3XSxcclxuICAnU291dGggU3VkYW4nOiBbMjkuNjk0OTI0LCA3Ljg2MjY4NV0sXHJcbiAgJ1NvdXRoIFZpZXRuYW0nOiBbMTA2LjYyOTcsIDEwLjgyMzFdLFxyXG4gICdTb3V0aCBZZW1lbic6IFs0NS4wMzY3LCAxMi44MDVdLFxyXG4gICdTcGFpbic6IFstMy43NDkyMiwgNDAuNDYzNjY3XSxcclxuICAnU3JpIExhbmthJzogWzgwLjc3MTc5NywgNy44NzMwNTRdLFxyXG4gICdTdWRhbic6IFszMC4yMTc2MzYsIDEyLjg2MjgwN10sXHJcbiAgJ1N3ZWRlbic6IFsxOC42NDM1MDEsIDYwLjEyODE2MV0sXHJcbiAgJ1N3aXR6ZXJsYW5kJzogWzguMjI3NTEyLCA0Ni44MTgxODhdLFxyXG4gICdTeXJpYSc6IFszOC45OTY4MTUsIDM0LjgwMjA3NV0sXHJcbiAgJ1RhaXdhbic6IFsxMjAuOTYwNTE1LCAyMy42OTc4MV0sXHJcbiAgJ1RhamlraXN0YW4nOiBbNzEuMjc2MDkzLCAzOC44NjEwMzRdLFxyXG4gICdUYW56YW5pYSc6IFszNC44ODg4MjIsIC02LjM2OTAyOF0sXHJcbiAgJ1RoYWlsYW5kJzogWzEwMC45OTI1NDEsIDE1Ljg3MDAzMl0sXHJcbiAgJ1RvZ28nOiBbMC44MjQ3ODIsIDguNjE5NTQzXSxcclxuICAnVHVuaXNpYSc6IFs5LjUzNzQ5OSwgMzMuODg2OTE3XSxcclxuICAnVHVya2l5ZSc6IFszNS4yNDMzMjIsIDM4Ljk2Mzc0NV0sXHJcbiAgJ1R1cmttZW5pc3Rhbic6IFs1OS41NTYyNzgsIDM4Ljk2OTcxOV0sXHJcbiAgJ1VBRSc6IFs1My44NDc4MTgsIDIzLjQyNDA3Nl0sXHJcbiAgJ1VnYW5kYSc6IFszMi4yOTAyNzUsIDEuMzczMzMzXSxcclxuICAnVWtyYWluZSc6IFszMS4xNjU1OCwgNDguMzc5NDMzXSxcclxuICAnVW5pdGVkX0tpbmdkb20nOiBbLTMuNDM1OTczLCA1NS4zNzgwNTFdLFxyXG4gICdVbml0ZWQgU3RhdGVzJzogWy0xMDUuNTM5MjQxNDUxNjAwMTgsIDQxLjI5ODUzNzM5NDY0MTYxXSxcclxuICAnVXJ1Z3VheSc6IFstNTUuNzY1ODM1LCAtMzIuNTIyNzc5XSxcclxuICAnVmVuZXp1ZWxhJzogWy02Ni41ODk3MywgNi40MjM3NV0sXHJcbiAgJ1ZpZXQgTmFtJzogWzEwOC4yNzcxOTksIDE0LjA1ODMyNF0sXHJcbiAgJ1llbWVuJzogWzQ4LjUxNjM4OCwgMTUuNTUyNzI3XSxcclxuICAnWXVnb3NsYXZpYSc6IFsyMS4wMDU4NTksIDQ0LjAxNjUyMV0sXHJcbiAgJ1phbWJpYSc6IFsyNy44NDkzMzIsIC0xMy4xMzM4OTddLFxyXG4gICdaaW1iYWJ3ZSc6IFsyOS4xNTQ4NTcsIC0xOS4wMTU0MzhdLFxyXG4gICdTb3ZpZXRfVW5pb24nOiBbMTA1LjMxODc1NiwgNjEuNTI0MDFdLFxyXG4gICdSdXNzaWEnOiBbMTA1LjMxODc1NiwgNjEuNTI0MDFdLFxyXG4gICdLeXJneXpzdGFuJzogWzc0Ljc2NjA5OCwgNDEuMjA0MzhdLFxyXG4gICdTbG92ZW5pYSc6IFsxNC45OTU0NjMsIDQ2LjE1MTI0MV0sXHJcbiAgJ01vbGRvdmEnOiBbMjguMzY5ODg1LCA0Ny40MTE2MzFdLFxyXG4gICdVemJla2lzdGFuJzogWzY0LjU4NTMsIDQxLjM3NzVdLFxyXG4gICdCb3Rzd2FuYSc6IFsyNC42ODQ5LCAtMjIuMzI4NV0sXHJcbiAgJ0J1cmtpbmEgRmFzbyc6IFstMS41NjE2LCAxMi4yMzgzXSxcclxuICAnQ2FibyBWZXJkZSc6IFstMjMuMDQxOCwgMTYuNTM4OF0sXHJcbiAgJ0NhbWVyb29uJzogWzEyLjM1NDcsIDcuMzY5N10sXHJcbiAgJ0RqaWJvdXRpJzogWzQyLjU5MDMsIDExLjgyNTFdLFxyXG4gICdFc3RvbmlhJzogWzI1LjAxMzYsIDU4LjU5NTNdLFxyXG4gICdHYWJvbic6IFsxMS42MDk0LCAtMC44MDM3XSxcclxuICAnR2hhbmEnOiBbLTEuMDIzMiwgNy45NDY1XSxcclxuICAnR3V5YW5hJzogWy01OC45MzAyLCA0Ljg2MDRdLFxyXG4gICdKYW1haWNhJzogWy03Ny4yOTc1LCAxOC4xMDk2XSxcclxuICAnS29zb3ZvJzogWzIwLjkwMjksIDQyLjYwMjZdLFxyXG4gICdMaXRodWFuaWEnOiBbMjMuODgxMywgNTUuMTY5NF0sXHJcbiAgJ0x1eGVtYm91cmcnOiBbNi4xMjk2LCA0OS44MTUzXSxcclxuICAnTWFsZGl2ZXMnOiBbNzMuMjIwNywgMy4yMDI4XSxcclxuICAnTWFsdGEnOiBbMTQuMzc1NCwgMzUuOTM3NV0sXHJcbiAgJ01vbnRlbmVncm8nOiBbMTkuMzc0NCwgNDIuNzA4N10sXHJcbiAgJ05pZ2VyJzogWzguMDgxNywgMTcuNjA3OF0sXHJcbiAgJ1NlbmVnYWwnOiBbLTE0LjQ1MjQsIDE0LjQ5NzRdLFxyXG4gICdBbnRpZ3VhIGFuZCBCYXJidWRhJzogWy02MS43OTY0LCAxNy4wNjA4XSxcclxuICAnQmVuaW4nOiBbMi4zMTU4LCA5LjMwNzddLFxyXG4gICdCcnVuZWknOiBbMTE0LjcyNzcsIDQuNTM1M10sXHJcbiAgJ0VxdWF0b3JpYWwgR3VpbmVhJzogWzEwLjI2NzksIDEuNjUwOF0sXHJcbiAgJ0dhbWJpYSc6IFstMTUuMzEwMSwgMTMuNDQzMl0sXHJcbiAgJ01hbGF3aSc6IFszNC4zMDE1LCAtMTMuMjU0M10sXHJcbiAgJ01hdXJpdGl1cyc6IFs1Ny41NTIyLCAtMjAuMzQ4NF0sXHJcbiAgJ1NleWNoZWxsZXMnOiBbNTUuNDkxOSwgLTQuNjc5Nl0sXHJcbiAgJ1N1cmluYW1lJzogWy01Ni4wMjc4LCAzLjkxOTNdLFxyXG4gICdUcmluaWRhZCBhbmQgVG9iYWdvJzogWy02MS4yMjI1LCAxMC42OTE4XVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY291bnRyeUNvb3JkaW5hdGVzO1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IERlY2tHTCBmcm9tICdAZGVjay5nbC9yZWFjdCc7XHJcbmltcG9ydCB7IEFyY0xheWVyIH0gZnJvbSAnQGRlY2suZ2wvbGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwIH0gZnJvbSAncmVhY3QtbWFwLWdsJztcclxuaW1wb3J0ICdtYXBib3gtZ2wvZGlzdC9tYXBib3gtZ2wuY3NzJztcclxuaW1wb3J0IGNvdW50cnlDb29yZGluYXRlcyBmcm9tICcvcHVibGljL2NvdW50cnlDb29yZGluYXRlcyc7XHJcblxyXG5jb25zdCBNQVBCT1hfVE9LRU4gPSAncGsuZXlKMUlqb2lhM2R3ZEdobFozSmxZWFFpTENKaElqb2lZMjB6YWpsamQzWjJNREV4WmpKeWNIUnZjR0UwZG05dVl5SjkuOUl3c1dLZDNyTTBhVnhqWE5ENExVUSc7IC8vIFJlcGxhY2Ugd2l0aCB5b3VyIGFjdHVhbCBNYXBib3ggdG9rZW5cclxuXHJcbi8vIEZ1bmN0aW9uIHRvIGV4dHJhY3QgdGhlIHllYXIgZnJvbSBhIHJlY29yZCBkeW5hbWljYWxseVxyXG5mdW5jdGlvbiBleHRyYWN0WWVhckZyb21SZWNvcmQocmVjb3JkKSB7XHJcbiAgLy8gRXhhbXBsZTogSWYgdGhlIHJlY29yZCBoYXMgYSBgZGF0ZWAgZmllbGQgd2l0aCBhIHllYXIsIGV4dHJhY3QgaXRcclxuICBpZiAocmVjb3JkLmRhdGUpIHtcclxuICAgIGNvbnN0IG1hdGNoID0gcmVjb3JkLmRhdGUubWF0Y2goL1xcYigyMFxcZHsyfSlcXGIvKTsgLy8gTWF0Y2ggeWVhcnMgbGlrZSAyMDAwLTIwOTlcclxuICAgIHJldHVybiBtYXRjaCA/IHBhcnNlSW50KG1hdGNoWzBdLCAxMCkgOiBudWxsO1xyXG4gIH1cclxuXHJcbiAgLy8gSWYgbm8gdmFsaWQgeWVhciBjYW4gYmUgZXh0cmFjdGVkLCByZXR1cm4gbnVsbFxyXG4gIC8qXHJcbiAgY29uc29sZS53YXJuKCdZZWFyIG5vdCBmb3VuZCBmb3IgcmVjb3JkOicsIHJlY29yZCk7XHJcbiAgKi9cclxuICByZXR1cm4gbnVsbDtcclxufVxyXG5cclxuZnVuY3Rpb24gV29ybGRDaG9yZCgpIHtcclxuICBjb25zdCBbZGF0YSwgc2V0RGF0YV0gPSB1c2VTdGF0ZShbXSk7XHJcbiAgY29uc3QgW2ZpbHRlcmVkRGF0YSwgc2V0RmlsdGVyZWREYXRhXSA9IHVzZVN0YXRlKFtdKTtcclxuICBjb25zdCBbeWVhciwgc2V0WWVhcl0gPSB1c2VTdGF0ZSgyMDE0KTsgLy8gRGVmYXVsdCB5ZWFyIGZvciB0aGUgc2xpZGVyIGZpbHRlclxyXG4gIGNvbnN0IFtzZWxlY3RlZENvdW50cnksIHNldFNlbGVjdGVkQ291bnRyeV0gPSB1c2VTdGF0ZSgnYWxsJyk7XHJcbiAgY29uc3QgW2hvdmVyZWRJbmZvLCBzZXRIb3ZlcmVkSW5mb10gPSB1c2VTdGF0ZShudWxsKTtcclxuICBcclxuICBjb25zdCBjb3VudHJ5Q29sb3JzID0ge1xyXG4gICAgXCJVbml0ZWQgU3RhdGVzXCI6IFs3MCwgMTMwLCAxODBdLCAvLyBTdGVlbCBCbHVlIChyZ2IgZm9ybWF0KVxyXG4gICAgXCJSdXNzaWFcIjogWzIyMCwgMjAsIDYwXSwgLy8gQ3JpbXNvbiAocmdiIGZvcm1hdClcclxuICAgIFwiQ2hpbmFcIjogWzI1NSwgMjE5LCA4OF0sIC8vIExpZ2h0IEdvbGQgKHJnYiBmb3JtYXQpXHJcbiAgICAvLyBBZGQgbW9yZSBjb3VudHJpZXMgYW5kIGNvbG9ycyBhcyBuZWVkZWRcclxuICB9O1xyXG4gIFxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAvLyBGZXRjaCBkYXRhIGZyb20gY29udmVydGVkX2RhdGEuanNvblxyXG4gICAgZmV0Y2goYC9kYXRhL3Byb2Nlc3NlZC9jb252ZXJ0ZWRfZGF0YS5qc29uYClcclxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxyXG4gICAgICAudGhlbihmZXRjaGVkRGF0YSA9PiB7XHJcblxyXG4gICAgICAgIC8vIEFkZCB0aGUgYHllYXJgIGZpZWxkIGR5bmFtaWNhbGx5IGlmIG1pc3NpbmdcclxuICAgICAgICBjb25zdCB1cGRhdGVkRGF0YSA9IGZldGNoZWREYXRhLm1hcChkID0+ICh7XHJcbiAgICAgICAgICAuLi5kLFxyXG4gICAgICAgICAgeWVhcjogZC55ZWFyIHx8IGV4dHJhY3RZZWFyRnJvbVJlY29yZChkKSAvLyBBZGQgeWVhciBkeW5hbWljYWxseSBpZiBuZWVkZWRcclxuICAgICAgICB9KSk7XHJcblxyXG4gICAgICAgIHNldERhdGEodXBkYXRlZERhdGEpO1xyXG5cclxuICAgICAgICAvLyBGaWx0ZXIgdGhlIGRhdGEgZm9yIHRoZSBpbml0aWFsIHllYXJcclxuICAgICAgICBjb25zdCBpbml0aWFsRmlsdGVyZWREYXRhID0gdXBkYXRlZERhdGEuZmlsdGVyKGQgPT4gZC55ZWFyID09PSB5ZWFyKTtcclxuICAgICAgICBzZXRGaWx0ZXJlZERhdGEoaW5pdGlhbEZpbHRlcmVkRGF0YSk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKCdFcnJvciBsb2FkaW5nIEpTT04gZGF0YTonLCBlcnJvcikpO1xyXG4gIH0sIFt5ZWFyXSk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAvLyBVcGRhdGUgZmlsdGVyZWQgZGF0YSB3aGVuIHllYXIgY2hhbmdlc1xyXG4gICAgaWYgKGRhdGEubGVuZ3RoID4gMCkge1xyXG4gICAgICBjb25zdCB1cGRhdGVkRmlsdGVyZWREYXRhID0gZGF0YS5maWx0ZXIoZCA9PiBkLnllYXIgPT09IHllYXIpO1xyXG4gICAgICBzZXRGaWx0ZXJlZERhdGEodXBkYXRlZEZpbHRlcmVkRGF0YSk7XHJcbiAgICB9XHJcbiAgfSwgW3llYXIsIGRhdGFdKTtcclxuXHJcbiAgY29uc3QgZmlsdGVyZWRCeUNvdW50cnkgPSBmaWx0ZXJlZERhdGEuZmlsdGVyKGQgPT4ge1xyXG4gICAgaWYgKHNlbGVjdGVkQ291bnRyeSA9PT0gJ2FsbCcpIHJldHVybiB0cnVlOyAvLyBTaG93IGFsbCBpZiAnYWxsJyBpcyBzZWxlY3RlZFxyXG4gICAgcmV0dXJuIGQub3JpZ2luLnRvTG93ZXJDYXNlKCkgPT09IHNlbGVjdGVkQ291bnRyeS50b0xvd2VyQ2FzZSgpOyAvLyBGaWx0ZXIgYnkgc2VsZWN0ZWQgY291bnRyeVxyXG4gIH0pO1xyXG4gIC8vIEZpbHRlciBvdXQgaW52YWxpZCByZWNvcmRzXHJcbiAgY29uc3QgdmFsaWRGaWx0ZXJlZERhdGEgPSBmaWx0ZXJlZEJ5Q291bnRyeS5maWx0ZXIoZCA9PiB7XHJcbiAgICBjb25zdCBzb3VyY2UgPSBjb3VudHJ5Q29vcmRpbmF0ZXNbZC5vcmlnaW5dO1xyXG4gICAgY29uc3QgdGFyZ2V0ID0gY291bnRyeUNvb3JkaW5hdGVzW2QuZGVzdGluYXRpb25dO1xyXG5cclxuICAgIGlmICghW1wiQ2hpbmFcIiwgXCJSdXNzaWFcIiwgXCJVbml0ZWQgU3RhdGVzXCJdLmluY2x1ZGVzKGQub3JpZ2luKSkge1xyXG4gICAgICByZXR1cm4gZmFsc2U7IC8vIFNraXAgcmVjb3JkcyB3aGVyZSB0aGUgb3JpZ2luIGlzIG5vdCBvbmUgb2YgdGhlc2VcclxuICAgIH1cclxuXHJcbiAgICAvLyBMb2cgbWlzc2luZyBjb3VudHJpZXNcclxuICAgIC8qXHJcbiAgICBpZiAoIXNvdXJjZSkgY29uc29sZS53YXJuKGBNaXNzaW5nIHNvdXJjZSBjb29yZGluYXRlcyBmb3I6ICR7ZC5vcmlnaW59YCk7XHJcbiAgICBpZiAoIXRhcmdldCkgY29uc29sZS53YXJuKGBNaXNzaW5nIHRhcmdldCBjb29yZGluYXRlcyBmb3I6ICR7ZC5kZXN0aW5hdGlvbn1gKTtcclxuICAgICovXHJcbiAgICAvLyBLZWVwIG9ubHkgdmFsaWQgcmVjb3Jkc1xyXG4gICAgcmV0dXJuIHNvdXJjZSAmJiB0YXJnZXQ7XHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IGxheWVycyA9IG5ldyBBcmNMYXllcih7XHJcbiAgICBpZDogJ2FyYy1sYXllcicsXHJcbiAgICBkYXRhOiB2YWxpZEZpbHRlcmVkRGF0YSwgLy8gVXNlIG9ubHkgdmFsaWRhdGVkIGRhdGFcclxuICAgIGdldFNvdXJjZVBvc2l0aW9uOiBkID0+IGNvdW50cnlDb29yZGluYXRlc1tkLm9yaWdpbl0sXHJcbiAgICBnZXRUYXJnZXRQb3NpdGlvbjogZCA9PiBjb3VudHJ5Q29vcmRpbmF0ZXNbZC5kZXN0aW5hdGlvbl0sXHJcbiAgICBnZXRTb3VyY2VDb2xvcjogZCA9PiBjb3VudHJ5Q29sb3JzW2Qub3JpZ2luXSB8fCBbMjU1LCAyNTUsIDI1NV0sXHJcbiAgICBnZXRUYXJnZXRDb2xvcjogZCA9PiBjb3VudHJ5Q29sb3JzW2Qub3JpZ2luXSB8fCBbMCwgMTI4LCAyNTVdLCAvLyBEZWZhdWx0IHRvIGJsdWUgaWYgY291bnRyeSBjb2xvciBpcyBtaXNzaW5nXHJcbiAgICBnZXRXaWR0aDogZCA9PiBNYXRoLmxvZyhkLnF1YW50aXR5ICsgMSksXHJcbiAgICBwaWNrYWJsZTogdHJ1ZSxcclxuICAgIGdldFRvb2x0aXA6ICh7IG9iamVjdCB9KSA9PiB7XHJcbiAgICAgIHJldHVybiBvYmplY3RcclxuICAgICAgICA/IGAke29iamVjdC5vcmlnaW59IHRvICR7b2JqZWN0LmRlc3RpbmF0aW9ufTogJHtvYmplY3QucXVhbnRpdHl9ICR7b2JqZWN0LndlYXBvbn0gKCR7b2JqZWN0LnllYXJ9KWBcclxuICAgICAgICA6IG51bGw7XHJcbiAgICB9LFxyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBzdHlsZT17eyBwb3NpdGlvbjogJ3JlbGF0aXZlJywgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnODB2aCd9fT5cclxuXHJcbiAgICAgIDxoMyBzdHlsZT17e3RleHRBbGlnbjogJ2NlbnRlcicsIGZvbnRTaXplOiAnMjRweCcsIGNvbG9yOiAnI2U3NGMzYycsIHBhZGRpbmdUb3A6ICcyMHB4Jyx9fT5cclxuICAgICAgICAgIEdsb2JhbCBBcm1zIFByb2xpZmVyYXRpb24ge3llYXJ9XHJcbiAgICAgIDwvaDM+XHJcblxyXG4gICAgICA8aW5wdXRcclxuICAgICAgICAgIHR5cGU9XCJyYW5nZVwiXHJcbiAgICAgICAgICBtaW49XCIxOTUwXCJcclxuICAgICAgICAgIG1heD1cIjIwMjNcIlxyXG4gICAgICAgICAgdmFsdWU9e3llYXJ9XHJcbiAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFllYXIoK2UudGFyZ2V0LnZhbHVlKX1cclxuICAgICAgICAgIHN0eWxlPXt7XHJcbiAgICAgICAgICAgIHdpZHRoOiAnODAlJyxcclxuICAgICAgICAgICAgYXBwZWFyYW5jZTogJ25vbmUnLFxyXG4gICAgICAgICAgICBoZWlnaHQ6ICc4cHgnLFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdncmF5JyxcclxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNXB4JyxcclxuICAgICAgICAgICAgb3V0bGluZTogJ25vbmUnLFxyXG4gICAgICAgICAgICBtYXJnaW46ICcyMHB4IGF1dG8gMTBweCcsXHJcbiAgICAgICAgICAgIGRpc3BsYXk6ICdibG9jaycsXHJcbiAgICAgICAgICAgIGFjY2VudENvbG9yOiAnI2U3NGMzYycsXHJcbiAgICAgICAgICB9fVxyXG4gICAgICAvPlxyXG4gICAgICA8ZGl2IHN0eWxlPXt7cG9zaXRpb246ICdhYnNvbHV0ZScsIGJvdHRvbTogMCwgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnY2FsYygxMDAlIC0gOTBweCknfX0+XHJcbiAgICAgICAgPERlY2tHTFxyXG4gICAgICAgICAgc3R5bGU9e3sgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnMTAwJScsIGJvcmRlcjogJzNweCBzb2xpZCAjZTc0YzNjJywgYm9yZGVyUmFkaXVzOiAnOHB4JyB9fVxyXG4gICAgICAgICAgaW5pdGlhbFZpZXdTdGF0ZT17e1xyXG4gICAgICAgICAgICBsYXRpdHVkZTogMjAsXHJcbiAgICAgICAgICAgIGxvbmdpdHVkZTogMCxcclxuICAgICAgICAgICAgem9vbTogMS41LFxyXG4gICAgICAgICAgICBwaXRjaDogMzBcclxuICAgICAgICAgIH19XHJcbiAgICAgICAgICBjb250cm9sbGVyPXt0cnVlfVxyXG4gICAgICAgICAgbGF5ZXJzPXtbbGF5ZXJzXX1vbkhvdmVyPXsoaW5mbykgPT4ge1xyXG4gICAgICAgICAgICBpZiAoaW5mby5vYmplY3QpIHtcclxuICAgICAgICAgICAgICBzZXRIb3ZlcmVkSW5mbyhpbmZvKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBzZXRIb3ZlcmVkSW5mbyhudWxsKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8TWFwXHJcbiAgICAgICAgICAgIG1hcGJveEFjY2Vzc1Rva2VuPXtNQVBCT1hfVE9LRU59XHJcbiAgICAgICAgICAgIG1hcFN0eWxlPVwibWFwYm94Oi8vc3R5bGVzL21hcGJveC9saWdodC12MTBcIlxyXG4gICAgICAgICAgICBhdHRyaWJ1dGlvbkNvbnRyb2w9e2ZhbHNlfVxyXG4gICAgICAgICAgICBpbnRlcmFjdGl2ZUxheWVySWRzPXtbJ2FyYy1sYXllciddfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIHtob3ZlcmVkSW5mbyAmJiBob3ZlcmVkSW5mby5vYmplY3QgJiYgKFxyXG4gICAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICAgIHN0eWxlPXt7XHJcbiAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICAgICAgICAgICAgICBsZWZ0OiBob3ZlcmVkSW5mby54LFxyXG4gICAgICAgICAgICAgICAgICB0b3A6IGhvdmVyZWRJbmZvLnksXHJcbiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMC44KScsXHJcbiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnZTBlMGUwJyxcclxuICAgICAgICAgICAgICAgICAgcGFkZGluZzogJzhweCAxMnB4JyxcclxuICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnOHB4JyxcclxuICAgICAgICAgICAgICAgICAgcG9pbnRlckV2ZW50czogJ25vbmUnLFxyXG4gICAgICAgICAgICAgICAgICBmb250U2l6ZTogJzE2cHgnLFxyXG4gICAgICAgICAgICAgICAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcclxuICAgICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAge2Ake2hvdmVyZWRJbmZvLm9iamVjdC5vcmlnaW59IHRvICR7aG92ZXJlZEluZm8ub2JqZWN0LmRlc3RpbmF0aW9ufTogJHtob3ZlcmVkSW5mby5vYmplY3QucXVhbnRpdHl9YH1cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgKX1cclxuICAgICAgICA8L0RlY2tHTD5cclxuXHJcbiAgICAgIDxkaXYgc3R5bGU9e3tcclxuICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICAgICAgICBoZWlnaHQ6ICc4MHB4JyxcclxuICAgICAgICB3aWR0aDogJzEyMHB4JyxcclxuICAgICAgICB0b3A6ICcyMHB4JyxcclxuICAgICAgICBsZWZ0OiAnMjBweCcsXHJcbiAgICAgICAgYmFja2dyb3VuZDogJ3JnYmEoMCwgMCwgMCwgMC45KScsXHJcbiAgICAgICAgcGFkZGluZzogJzEwcHgnLFxyXG4gICAgICAgIGJvcmRlclJhZGl1czogJzhweCcsXHJcbiAgICAgICAgZm9udFNpemU6ICcxNHB4JyxcclxuICAgICAgICBjb2xvcjogJyNlMGUwZTAnLFxyXG4gICAgICB9fT5cclxuICAgICAgICA8cCBzdHlsZT17eyBkaXNwbGF5OiAnYmxvY2snLCBtYXJnaW5Cb3R0b206ICcxMHB4JywgY29sb3I6ICcjZTBlMGUwJywgZm9udFNpemU6ICcxNHB4JywgZm9udFdlaWdodDogJ2JvbGQnfX0+U2VsZWN0IENvdW50cnk8L3A+XHJcblxyXG4gICAgICAgIDxzZWxlY3QgXHJcbiAgICAgICAgICBuYW1lPVwiY291bnRyeVNlbGVjdG9yXCJcclxuICAgICAgICAgIHZhbHVlPXtzZWxlY3RlZENvdW50cnl9XHJcbiAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFNlbGVjdGVkQ291bnRyeShlLnRhcmdldC52YWx1ZSl9XHJcbiAgICAgICAgICBzdHlsZT17e1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICAgICAgICAgICAgcGFkZGluZzogJzZweCAxMHB4JyxcclxuICAgICAgICAgICAgd2lkdGg6ICcxMDBweCcsXHJcbiAgICAgICAgICAgIGNvbG9yOiAnI2UwZTBlMCcsXHJcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ2JsYWNrJyxcclxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnOHB4JyxcclxuICAgICAgICAgICAgZm9udFNpemU6ICcxNHB4JyxcclxuICAgICAgICAgIH19XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImFsbFwiPkFsbDwvb3B0aW9uPlxyXG4gICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlVuaXRlZCBTdGF0ZXNcIj5VUzwvb3B0aW9uPlxyXG4gICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlJ1c3NpYVwiPlJ1c3NpYTwvb3B0aW9uPlxyXG4gICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIkNoaW5hXCI+Q2hpbmE8L29wdGlvbj5cclxuICAgICAgICA8L3NlbGVjdD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBXb3JsZENob3JkO1xyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgTWlncmF0aW9uTWFwIGZyb20gJy4vZ3JhcGhzLzAwM19NaWdyYXRpb25NYXAnO1xyXG5pbXBvcnQgRm9yY2VEaXJlY3RlZEdyYXBoIGZyb20gJy4vZ3JhcGhzLzAwM19Gb3JjZURpcmVjdGVkR3JhcGgnO1xyXG5pbXBvcnQgV29ybGRDaG9yZCBmcm9tICcuL2dyYXBocy8wMDNfV29ybGRDaG9yZCc7XHJcblxyXG5jb25zdCBhbGxpYW5jZSA9ICgpID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPHNlY3Rpb24gaWQ9XCIwMDNcIj5cclxuICAgICAgPHAgY2xhc3NOYW1lPVwiY3VzdG9tLXRpdGxlXCIgc3R5bGU9e3sgY3NzVGV4dDogJ21hcmdpbi10b3A6IDAnIH19PlxyXG4gICAgICAgIFN0cmVuZ3RoIGluIEFsbGlhbmNlICYgUGFydG5lcnNoaXBcclxuICAgICAgPC9wPlxyXG5cclxuICAgICAgPHAgY2xhc3NOYW1lPVwiY3VzdG9tLXBhcmFncmFwaFwiPlxyXG4gICAgICAgIFRoZSA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjNDY4MkI0XCIgfX0+VW5pdGVkIFN0YXRlczwvc3Bhbj4gdXNlcyBhcm1zIGV4cG9ydHMgc3RyYXRlZ2ljYWxseSB0byBidWlsZCBhbGxpYW5jZXMgYW5kIHNoYXBlIHJlZ2lvbmFsIHBvd2VyIGR5bmFtaWNzLCBlc3BlY2lhbGx5IGFnYWluc3QgbWFqb3IgcG93ZXJzIGxpa2UgXHJcbiAgICAgICAgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0RDMTQzQ1wiIH19PiBSdXNzaWE8L3NwYW4+IGFuZCA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjRkZEQjU4XCIgfX0+Q2hpbmE8L3NwYW4+LiBcclxuICAgICAgICBCeSBlcXVpcHBpbmcgYWxsaWVzIGluIGtleSBhcmVhc+KAlHN1Y2ggYXMgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0QyQjQ4Q1wiIH19PkVhc3Rlcm4gRXVyb3BlPC9zcGFuPiwgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0QyQjQ4Q1wiIH19PnRoZSBNaWRkbGUgRWFzdDwvc3Bhbj4sIGFuZCA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjRDJCNDhDXCIgfX0+QXNpYS1QYWNpZmljPC9zcGFuPuKAlHRoZSA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjNDY4MkI0XCIgfX0+VW5pdGVkIFN0YXRlczwvc3Bhbj4gYm9sc3RlcnMgZGVmZW5zZSwgZGV0ZXJzIGFnZ3Jlc3Npb24sIGFuZCBzdHJlbmd0aGVucyBsb25nLXRlcm0gcGFydG5lcnNoaXBzLiBcclxuICAgICAgICBUaGVzZSBhbGxpYW5jZXMsIHN1cHBvcnRlZCBieSBhZHZhbmNlZCB3ZWFwb25yeSwgY3JlYXRlIGEgY29vcmRpbmF0ZWQgZnJvbnQgdGhhdCBjb3VudGVycyA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjRkZEQjU4XCIgfX0+Q2hpbmEnczwvc3Bhbj4gYW5kIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiNEQzE0M0NcIiB9fT5SdXNzaWEnczwvc3Bhbj4gaW5mbHVlbmNlLlxyXG4gICAgICA8L3A+XHJcblxyXG4gICAgICA8cCBjbGFzc05hbWU9XCJjdXN0b20tcGFyYWdyYXBoXCI+XHJcbiAgICAgICAgSW4gY29udHJhc3QsIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiNEQzE0M0NcIiB9fT5SdXNzaWE8L3NwYW4+IGFuZCA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjRkZEQjU4XCIgfX0+Q2hpbmE8L3NwYW4+IHVzZSBhcm1zIHRyYW5zZmVycyB0byBlc3RhYmxpc2ggZm9vdGhvbGRzIGluIHRoZWlyIG93biBzcGhlcmVzLCBwYXJ0aWN1bGFybHkgaW4gdGhlIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiNEMkI0OENcIiB9fT5NaWRkbGUgRWFzdDwvc3Bhbj4sIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiNEMkI0OENcIiB9fT5BZnJpY2E8L3NwYW4+LCBhbmQgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0QyQjQ4Q1wiIH19PlNvdXRoZWFzdCBBc2lhPC9zcGFuPi4gXHJcbiAgICAgICAgVGhpcyBkaXN0cmlidXRpb24gZXZpZGVuY2VzIGFuIGVmZm9ydCBieSB0aGUgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiIzQ2ODJCNFwiIH19PlVTPC9zcGFuPiwgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0ZGREI1OFwiIH19PiBDaGluYTwvc3Bhbj4sIGFuZCA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjREMxNDNDXCIgfX0+UnVzc2lhPC9zcGFuPiB0byBleHBhbmQgdGhlaXIgc3BoZXJlcyBvZiBpbmZsdWVuY2Ugb3IgY29udGFpbiBlYWNoIG90aGVyLlxyXG4gICAgICA8L3A+XHJcblxyXG4gICAgICA8cCBjbGFzc05hbWU9XCJjdXN0b20tcGFyYWdyYXBoXCI+XHJcbiAgICAgICAgQSBxdWljayBjYXNlIHN0dWR5LCBhcyBzaG93biBvbiB0aGUgbWFwLCBoaWdobGlnaHRzIGEgc2lnbmlmaWNhbnQgaW5jcmVhc2UgaW4gPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0ZGREI1OFwiIH19PkNoaW5hJ3M8L3NwYW4+IGFybXMgdHJhZGUgd2l0aCA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjRDJCNDhDXCIgfX0+QWZyaWNhPC9zcGFuPiBwcmlvciB0byB0aGUgaW5pdGlhdGlvbiBvZiB0aGUgQmVsdCBhbmQgUm9hZCBJbml0aWF0aXZlLCB3aGljaCBvZmZpY2lhbGx5IHN0YXJ0ZWQgaW4gMjAxMy4gVGhpcyBlbXBoYXNpemVzIENoaW5hJ3MgYnJvYWRlciBnZW9wb2xpdGljYWwgc3RyYXRlZ3kgb2YgbGV2ZXJhZ2luZyBhcm1zIHRyYWRlIHRvIHNlY3VyZSBhY2Nlc3MgdG8gcmVzb3VyY2VzIGFuZCBlc3RhYmxpc2ggaW5mbHVlbmNlIGluIGRldmVsb3BpbmcgcmVnaW9ucy5cclxuICAgICAgPC9wPlxyXG4gICAgICBcclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjaGFydC1jb250YWluZXJcIiBzdHlsZT17eyB3aWR0aDogJzgwJScgfX0+XHJcbiAgICAgICAgPFdvcmxkQ2hvcmQgLz5cclxuICAgICAgPC9kaXY+XHJcblxyXG4gICAgICA8cCBjbGFzc05hbWU9XCJjdXN0b20tdGl0bGVcIj5cclxuICAgICAgICBBbiBBbHRlcm5hdGl2ZSBXYXkgdG8gVmlzdWFsaXplIEludGVybmF0aW9uYWwgUmVsYXRpb25zOiBGb3JjZSBEaXJlY3RlZCBHcmFwaCBcclxuICAgICAgPC9wPlxyXG5cclxuICAgICAgPHAgY2xhc3NOYW1lPVwiY3VzdG9tLXBhcmFncmFwaFwiPlxyXG4gICAgICAgIFRoaXMgR2xvYmFsIEFybXMgVHJhZGUgTmV0d29yayBmdXJ0aGVyIGlsbHVzdHJhdGVzIGEgY29tcGxleCBnZW9wb2xpdGljYWwgY2hlc3Nib2FyZCB3aGVyZSB0aGUgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiIzQ2ODJCNFwiIH19PlVuaXRlZCBTdGF0ZXM8L3NwYW4+LCA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjREMxNDNDXCIgfX0+UnVzc2lhPC9zcGFuPiwgYW5kIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiNGRkRCNThcIiB9fT5DaGluYSA8L3NwYW4+XHJcbiAgICAgICAgdXNlIGFybXMgZXhwb3J0cyB0byBleHBhbmQgaW5mbHVlbmNlIGFuZCBzZWN1cmUgYWxsaWFuY2VzIGFjcm9zcyBzdHJhdGVnaWMgcmVnaW9ucy4gRWFjaCBzdXBlcnBvd2Vy4oCZcyBuZXR3b3JrIGNlbnRlcnMgYXJvdW5kIGtleSBhbGxpZXM6XHJcbiAgICAgIDwvcD5cclxuICAgICAgXHJcbiAgICAgIDx1bD5cclxuICAgICAgICA8bGk+XHJcbiAgICAgICAgICBUaGUgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiIzQ2ODJCNFwiIH19PlVuaXRlZCBTdGF0ZXM8L3NwYW4+IHN1cHBvcnRzIGNvdW50cmllcyBpbiBcclxuICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiNEMkI0OENcIiwgZm9udFN0eWxlOiBcIml0YWxpY1wiIH19PiBFdXJvcGUsIHRoZSBNaWRkbGUgRWFzdCwgYW5kIEFzaWEtUGFjaWZpYzwvc3Bhbj4sIHJlaW5mb3JjaW5nIGEgZGVmZW5zZSBsaW5lIGFnYWluc3Qgcml2YWxzLlxyXG4gICAgICAgIDwvbGk+PGJyLz5cclxuICAgICAgICA8bGk+XHJcbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjREMxNDNDXCIgfX0+UnVzc2lhPC9zcGFuPiBzdXBwbGllcyBuYXRpb25zIGluIFxyXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0QyQjQ4Q1wiLCBmb250U3R5bGU6IFwiaXRhbGljXCIgfX0+IEVhc3Rlcm4gRXVyb3BlIGFuZCBDZW50cmFsIEFzaWE8L3NwYW4+IHRvIGNvdW50ZXIgTkFUTydzIHJlYWNoLlxyXG4gICAgICAgIDwvbGk+PGJyLz5cclxuICAgICAgICA8bGk+XHJcbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjRkZEQjU4XCIgfX0+Q2hpbmE8L3NwYW4+IGFybXMgY291bnRyaWVzIGluIFxyXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0QyQjQ4Q1wiLCBmb250U3R5bGU6IFwiaXRhbGljXCIgfX0+IFNvdXRoZWFzdCBBc2lhLCBBZnJpY2EsIGFuZCBTb3V0aCBBc2lhPC9zcGFuPiwgZXhwYW5kaW5nIGl0cyBmb290aG9sZCBpbiByZXNvdXJjZS1yaWNoIGFyZWFzLlxyXG4gICAgICAgIDwvbGk+PGJyLz5cclxuICAgICAgICA8bGk+XHJcbiAgICAgICAgICBDb3VudHJpZXMgbGlrZSA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjRkY2NzFGXCIgfX0+SW5kaWE8L3NwYW4+IGlsbHVzdHJhdGUgYSBtdWx0aWxhdGVyYWwgYXBwcm9hY2gsIGJhbGFuY2luZyByZWxhdGlvbnNoaXBzIHdpdGggdGhlIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiM0NjgyQjRcIiB9fT5VUzwvc3Bhbj4sIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiNEQzE0M0NcIiB9fT5SdXNzaWE8L3NwYW4+LCBhbmQgb3RoZXJzLlxyXG4gICAgICAgIDwvbGk+XHJcbiAgICAgIDwvdWw+IFxyXG5cclxuICAgICAgPHAgY2xhc3NOYW1lPVwiY3VzdG9tLXBhcmFncmFwaFwiPiAgICBcclxuICAgICAgICBUaHJvdWdoIHRoaXMgbmV0d29yaywgYXJtcyB0cmFuc2ZlcnMgcmV2ZWFsIGludGVyZGVwZW5kZW50IGFsbGlhbmNlcywgYm9sc3RlcmVkIGluZmx1ZW5jZSwgYW5kIGVmZm9ydHMgdG8gY29udGFpbiByaXZhbHMuIFRoZSBtYXAgdW5kZXJzY29yZXMgaG93IGFybXMgZXhwb3J0cyBhcmUgbm90IGp1c3QgYWJvdXQgbWlsaXRhcnkgc3RyZW5ndGggYnV0IGFsc28gYWJvdXQgc2hhcGluZyB0aGUgc3RyYXRlZ2ljIHJlbGF0aW9uc2hpcHMgdGhhdCBkZWZpbmUgdGhlIGdsb2JhbCBvcmRlci5cclxuICAgICAgPC9wPlxyXG5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjaGFydC1jb250YWluZXJcIiBzdHlsZT17eyB3aWR0aDogJzgwJScgfX0+XHJcbiAgICAgICAgPEZvcmNlRGlyZWN0ZWRHcmFwaCAvPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvc2VjdGlvbj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYWxsaWFuY2U7XHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsInVzZVJlZiIsInVzZVN0YXRlIiwiZDMiLCJ0b3BvanNvbiIsIk1pZ3JhdGlvbk1hcCIsInN2Z1JlZiIsIndpZHRoIiwiaGVpZ2h0IiwiX3VzZVN0YXRlIiwiX3VzZVN0YXRlMiIsIl9zbGljZWRUb0FycmF5Iiwid29ybGRHZW9KU09OIiwic2V0V29ybGRHZW9KU09OIiwiX3VzZVN0YXRlMyIsIl91c2VTdGF0ZTQiLCJjb3VudHJ5Q2VudHJvaWRzIiwic2V0Q291bnRyeUNlbnRyb2lkcyIsIl91c2VTdGF0ZTUiLCJfdXNlU3RhdGU2IiwidHJhZGVEYXRhIiwic2V0VHJhZGVEYXRhIiwiX3VzZVN0YXRlNyIsIl91c2VTdGF0ZTgiLCJzZWxlY3RlZFllYXIiLCJzZXRTZWxlY3RlZFllYXIiLCJfdXNlU3RhdGU5IiwiX3VzZVN0YXRlMTAiLCJzZWxlY3RlZENvdW50cnkiLCJzZXRTZWxlY3RlZENvdW50cnkiLCJfdXNlU3RhdGUxMSIsIl91c2VTdGF0ZTEyIiwiZXJyb3IiLCJzZXRFcnJvciIsIm9yaWdpbkNvbG9ycyIsInVybHMiLCJnZW9KU09OVXJsIiwibm9ybWFsaXplQ291bnRyeU5hbWUiLCJuYW1lIiwibWFwcGluZyIsImpzb24iLCJ0aGVuIiwid29ybGREYXRhIiwiY2VudHJvaWRzIiwiZmVhdHVyZSIsIm9iamVjdHMiLCJjb3VudHJpZXMiLCJmZWF0dXJlcyIsImZvckVhY2giLCJjb3VudHJ5TmFtZSIsInByb3BlcnRpZXMiLCJnZW9DZW50cm9pZCIsIk9iamVjdCIsImtleXMiLCJjb3VudHJ5IiwiZGF0YSIsInJlY2lwaWVudHMiLCJwcmV2RGF0YSIsIl9vYmplY3RTcHJlYWQiLCJfZGVmaW5lUHJvcGVydHkiLCJjb25jYXQiLCJ2YWx1ZXMiLCJldmVyeSIsImxlbmd0aCIsInN2ZyIsInNlbGVjdCIsImN1cnJlbnQiLCJhdHRyIiwic3R5bGUiLCJzZWxlY3RBbGwiLCJyZW1vdmUiLCJwcm9qZWN0aW9uIiwiZ2VvTWVyY2F0b3IiLCJjZW50ZXIiLCJzY2FsZSIsInRyYW5zbGF0ZSIsInBhdGgiLCJnZW9QYXRoIiwibWFwQ29udGFpbmVyIiwiYXBwZW5kIiwiem9vbSIsInNjYWxlRXh0ZW50Iiwib24iLCJldmVudCIsInRyYW5zZm9ybSIsImNhbGwiLCJ0b29sdGlwIiwiZW50ZXIiLCJjb3VudHJpZXNUb1Nob3ciLCJ2YWxpZFRyYWRlcyIsIm1hcCIsInJlY2lwaWVudCIsIm9yaWdpbkNvb3JkcyIsImRlc3RDb3VudHJ5IiwiZGVzdENvb3JkcyIsInRyYWRlVmFsdWUiLCJ5ZWFycyIsIm9yaWdpbkNvdW50cnkiLCJvcmlnaW5YIiwib3JpZ2luWSIsImRlc3RYIiwiZGVzdFkiLCJmaWx0ZXIiLCJkIiwidG9wUmVjaXBpZW50cyIsInNvcnQiLCJhIiwiYiIsInNsaWNlIiwibWF4VHJhZGVWYWx1ZSIsIm1heCIsInN0cm9rZVNjYWxlIiwic2NhbGVTcXJ0IiwiZG9tYWluIiwicmFuZ2UiLCJodG1sIiwicGFnZVgiLCJwYWdlWSIsImluY2x1ZGVzIiwiTGVnZW5kIiwiY3JlYXRlRWxlbWVudCIsInBvc2l0aW9uIiwiYm90dG9tIiwibGVmdCIsImJhY2tncm91bmQiLCJwYWRkaW5nIiwiYm9yZGVyUmFkaXVzIiwiZm9udFNpemUiLCJjb2xvciIsIm1hcmdpbkJvdHRvbSIsImVudHJpZXMiLCJfcmVmIiwiX3JlZjIiLCJfcmVmMyIsIl9yZWY0Iiwia2V5IiwiZGlzcGxheSIsImFsaWduSXRlbXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJtYXJnaW5SaWdodCIsIm1hcmdpblRvcCIsImN4IiwiY3kiLCJyIiwiZmlsbCIsInRleHRBbGlnbiIsInBhZGRpbmdUb3AiLCJ0b3AiLCJ0eXBlIiwibWluIiwidmFsdWUiLCJvbkNoYW5nZSIsImUiLCJ0YXJnZXQiLCJhcHBlYXJhbmNlIiwib3V0bGluZSIsIm1hcmdpbiIsImFjY2VudENvbG9yIiwicmVmIiwiYm9yZGVyIiwic29tZSIsImZsZXhEaXJlY3Rpb24iLCJodG1sRm9yIiwiZm9udFdlaWdodCIsImlkIiwiRm9yY2VEaXJlY3RlZEdyYXBoIiwiZGF0YVVybCIsInJhd0RhdGEiLCJub2Rlc0FycmF5IiwibGlua3MiLCJub2RlTWFwIiwiTWFwIiwic3VwcGxpZXJFbnRyeSIsInN1cHBsaWVyIiwiaGFzIiwic2V0IiwiZ3JvdXAiLCJwdXNoIiwicmVjaXBpZW50RW50cnkiLCJzb3VyY2UiLCJjb2xvclNjYWxlIiwic2NhbGVPcmRpbmFsIiwibm9kZVNpemVTY2FsZSIsImNvbnRhaW5lciIsImRlZmF1bHRUcmFuc2Zvcm0iLCJ6b29tSWRlbnRpdHkiLCJsaW5rIiwiam9pbiIsIm5vZGUiLCJfbGlua3MkZmluZCIsImZpbmQiLCJkcmFnIiwiYWN0aXZlIiwic2ltdWxhdGlvbiIsImFscGhhVGFyZ2V0IiwicmVzdGFydCIsImZ4IiwieCIsImZ5IiwieSIsImxhYmVsIiwiX2xpbmtzJGZpbmQyIiwibm9kZVZhbHVlIiwidGV4dCIsImZvcmNlU2ltdWxhdGlvbiIsImZvcmNlIiwiZm9yY2VMaW5rIiwiZGlzdGFuY2UiLCJzdHJlbmd0aCIsImZvcmNlTWFueUJvZHkiLCJmb3JjZUNlbnRlciIsImNvdW50cnlDb29yZGluYXRlcyIsIkRlY2tHTCIsIkFyY0xheWVyIiwiTUFQQk9YX1RPS0VOIiwiZXh0cmFjdFllYXJGcm9tUmVjb3JkIiwicmVjb3JkIiwiZGF0ZSIsIm1hdGNoIiwicGFyc2VJbnQiLCJXb3JsZENob3JkIiwic2V0RGF0YSIsImZpbHRlcmVkRGF0YSIsInNldEZpbHRlcmVkRGF0YSIsInllYXIiLCJzZXRZZWFyIiwiaG92ZXJlZEluZm8iLCJzZXRIb3ZlcmVkSW5mbyIsImNvdW50cnlDb2xvcnMiLCJmZXRjaCIsInJlc3BvbnNlIiwiZmV0Y2hlZERhdGEiLCJ1cGRhdGVkRGF0YSIsImluaXRpYWxGaWx0ZXJlZERhdGEiLCJjb25zb2xlIiwidXBkYXRlZEZpbHRlcmVkRGF0YSIsImZpbHRlcmVkQnlDb3VudHJ5Iiwib3JpZ2luIiwidG9Mb3dlckNhc2UiLCJ2YWxpZEZpbHRlcmVkRGF0YSIsImRlc3RpbmF0aW9uIiwibGF5ZXJzIiwiZ2V0U291cmNlUG9zaXRpb24iLCJnZXRUYXJnZXRQb3NpdGlvbiIsImdldFNvdXJjZUNvbG9yIiwiZ2V0VGFyZ2V0Q29sb3IiLCJnZXRXaWR0aCIsIk1hdGgiLCJsb2ciLCJxdWFudGl0eSIsInBpY2thYmxlIiwiZ2V0VG9vbHRpcCIsIm9iamVjdCIsIndlYXBvbiIsImluaXRpYWxWaWV3U3RhdGUiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsInBpdGNoIiwiY29udHJvbGxlciIsIm9uSG92ZXIiLCJpbmZvIiwibWFwYm94QWNjZXNzVG9rZW4iLCJtYXBTdHlsZSIsImF0dHJpYnV0aW9uQ29udHJvbCIsImludGVyYWN0aXZlTGF5ZXJJZHMiLCJwb2ludGVyRXZlbnRzIiwid2hpdGVTcGFjZSIsImFsbGlhbmNlIiwiY2xhc3NOYW1lIiwiY3NzVGV4dCIsImZvbnRTdHlsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4136\n')},9098:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill-rule=%27evenodd%27 fill=%27%23fff%27%3E%3Cpath d=%27M4 10a6 6 0 1 0 12 0 6 6 0 1 0-12 0m5-3a1 1 0 1 0 2 0 1 1 0 1 0-2 0m0 3a1 1 0 1 1 2 0v3a1 1 0 1 1-2 0%27/%3E%3C/svg%3E"},8548:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill-rule=%27evenodd%27%3E%3Cpath d=%27M4 10a6 6 0 1 0 12 0 6 6 0 1 0-12 0m5-3a1 1 0 1 0 2 0 1 1 0 1 0-2 0m0 3a1 1 0 1 1 2 0v3a1 1 0 1 1-2 0%27/%3E%3C/svg%3E"},6008:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},1991:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},2990:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%2333b5e5%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27 display=%27none%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},311:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%2333b5e5%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},5721:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23666%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E"},1340:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23999%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E"},3764:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23aaa%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E"},3200:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23e54e33%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27 display=%27none%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},20:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23e58978%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},5454:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},3825:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E"},5565:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23ccc%27/%3E%3C/svg%3E"},6686:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E"},2556:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E"},2912:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E"},426:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E"},3750:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23ccc%27/%3E%3C/svg%3E"},3873:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E"},6827:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E"},6839:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E"},577:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23999%27/%3E%3C/svg%3E"},4972:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E"},4262:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E"},690:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E"},7324:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E"},7138:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%270.3%27 stroke=%27%23000%27 stroke-width=%273%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%270.9%27 fill=%27%23fff%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E"},7256:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%271%27 stroke=%27%23000%27 stroke-width=%273%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%271%27 fill=%27%23fff%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E"},7354:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%271%27 stroke=%27%23fff%27 stroke-width=%273%27 fill=%27%23fff%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%271%27 fill=%27%23000%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E"}}]);