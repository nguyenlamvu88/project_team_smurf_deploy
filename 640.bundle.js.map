{"version":3,"file":"640.bundle.js","mappings":"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","sources":["webpack://project_team_smurf_deploy/./src/components/graphs/001_DefenseExpenditureMap.js","webpack://project_team_smurf_deploy/./src/components/graphs/001_animatedExportBarChart.js","webpack://project_team_smurf_deploy/./src/components/001_intro.js","webpack://project_team_smurf_deploy/./node_modules/topojson-client/src/identity.js","webpack://project_team_smurf_deploy/./node_modules/topojson-client/src/feature.js","webpack://project_team_smurf_deploy/./node_modules/topojson-client/src/transform.js","webpack://project_team_smurf_deploy/./node_modules/topojson-client/src/reverse.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as topojson from 'topojson-client';\r\n\r\n\r\nconst DefenseExpenditureMap = () => {\r\n  const svgRef = useRef();\r\n  const lineChartRef = useRef();\r\n\r\n  const [tooltip, setTooltip] = useState({ visible: false, x: 0, y: 0, content: null });\r\n  const [lineTooltip, setLineTooltip] = useState({ visible: false, x: 0, y: 0, content: null });\r\n  const [countryData, setCountryData] = useState({});\r\n  const [countries, setCountries] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(1960);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(undefined);\r\n\r\n  const minYear = 1960;\r\n  const maxYear = 2022;\r\n\r\n  const targetCountries = [\"United States\", \"China\", \"Russia\"];\r\n  const countryNameMapping = {\r\n    \"Bahamas, The\": \"Bahamas\",\r\n    \"Congo, Dem. Rep.\": \"Democratic Republic of the Congo\",\r\n    \"Congo, Rep.\": \"Republic of the Congo\",\r\n    \"Côte d'Ivoire\": \"Ivory Coast\",\r\n    \"Egypt, Arab Rep.\": \"Egypt\",\r\n    \"Gambia, The\": \"Gambia\",\r\n    \"Hong Kong SAR, China\": \"Hong Kong\",\r\n    \"Iran, Islamic Rep.\": \"Iran\",\r\n    \"Korea, Dem. People's Rep.\": \"North Korea\",\r\n    \"Korea, Rep.\": \"South Korea\",\r\n    \"Kyrgyz Republic\": \"Kyrgyzstan\",\r\n    \"Lao PDR\": \"Laos\",\r\n    \"Micronesia, Fed. Sts.\": \"Federated States of Micronesia\",\r\n    \"Russian Federation\": \"Russia\",\r\n    \"Sint Maarten (Dutch part)\": \"Sint Maarten\",\r\n    \"Slovak Republic\": \"Slovakia\",\r\n    \"Syrian Arab Republic\": \"Syria\",\r\n    \"Venezuela, RB\": \"Venezuela\",\r\n    \"Yemen, Rep.\": \"Yemen\",\r\n    \"United States\": \"United States of America\",\r\n    \"Viet Nam\": \"Vietnam\",\r\n    \"Vietnam\": \"Vietnam\",\r\n    \"Turkiye\": \"Turkey\",\r\n    \"West Bank and Gaza\": \"Palestine\",\r\n    \"Brunei Darussalam\": \"Brunei\",\r\n    \"Bolivia\": \"Bolivia\",\r\n    \"Cape Verde\": \"Cabo Verde\",\r\n    \"Czechia\": \"Czech Republic\",\r\n    \"Faroe Islands\": \"Faroe Islands\",\r\n    \"Faeroe Islands\": \"Faroe Islands\",\r\n    \"Macao SAR, China\": \"Macau\",\r\n    \"North Macedonia\": \"North Macedonia\",\r\n    \"Palestinian Territories\": \"Palestine\",\r\n    \"Timor-Leste\": \"Timor-Leste\",\r\n    \"East Timor\": \"Timor-Leste\",\r\n    \"Myanmar\": \"Myanmar\",\r\n    \"Burma\": \"Myanmar\",\r\n    \"Ivory Coast\": \"Côte d'Ivoire\",\r\n    \"South Sudan\": \"South Sudan\",\r\n    \"Sao Tome and Principe\": \"São Tomé and Principe\",\r\n    \"Eswatini\": \"Eswatini\",\r\n    \"Taiwan\": \"Taiwan\",\r\n    \"Republic of the Congo\": \"Republic of the Congo\",\r\n    \"Democratic Republic of the Congo\": \"Democratic Republic of the Congo\",\r\n    \"Cabo Verde\": \"Cabo Verde\",\r\n    \"North Korea\": \"North Korea\",\r\n    \"South Korea\": \"South Korea\",\r\n    \"Russia\": \"Russia\",\r\n    \"Laos\": \"Laos\",\r\n    \"Macedonia\": \"North Macedonia\"\r\n  };\r\n    \r\n  const dataUrl = \"/data/processed/processed_defense_expenditure_by_country.csv\";\r\n\r\n  const parseValue = (value) => {\r\n    if (value === \"$-\") return 0;\r\n    return parseFloat(value.replace(/[$,]/g, '')) || 0;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Promise.all([\r\n      d3.json('/countries-110m.json'),\r\n      d3.csv(dataUrl, d => {\r\n        const parsedData = { Country: d.Country };\r\n        for (let year = minYear; year <= maxYear; year++) {\r\n          parsedData[year] = parseValue(d[year]);\r\n        }\r\n        return parsedData;\r\n      })\r\n    ])\r\n    .then(([worldData, defenseData]) => {\r\n      const countriesData = topojson.feature(worldData, worldData.objects.countries).features;\r\n      setCountries(countriesData);\r\n  \r\n      const processedData = {};\r\n      defenseData.forEach(row => {\r\n        const countryName = countryNameMapping[row.Country] || row.Country;\r\n        processedData[countryName] = row;\r\n      });\r\n  \r\n      setCountryData(processedData);\r\n      setLoading(false);\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error loading data:\", error);\r\n      setError(\"Failed to load data.\");\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n  /*\r\n  useEffect(() => {\r\n    const playAnimation = () => {\r\n      setSelectedYear(minYear);\r\n      const interval = setInterval(() => {\r\n        setSelectedYear(prevYear => {\r\n          if (prevYear < maxYear) {\r\n            return prevYear + 1;\r\n          } else {\r\n            clearInterval(interval);\r\n            return prevYear;\r\n          }\r\n        });\r\n      }, 180); // Animation speed\r\n    };\r\n  \r\n    playAnimation();\r\n    return () => clearInterval(playAnimation);\r\n  }, [minYear, maxYear]);\r\n*/\r\n  useEffect(() => {\r\n    if (loading || error || !countries.length || !Object.keys(countryData).length) return;\r\n  \r\n    const width = 800;\r\n    const height = 400;\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('viewBox', `0 0 ${width} ${height}`)\r\n      .style('width', '100%')\r\n      .style('height', 'auto');\r\n  \r\n    const projection = d3.geoMercator().center([0, 20]).scale(130).translate([width / 2, height / 2]);\r\n    const path = d3.geoPath().projection(projection);\r\n  \r\n    // Define color thresholds and colors for legend based on dataset insights\r\n    const thresholds = [5, 25, 55, 85];\r\n    const colors = [\"#f0d8d8\", \"#e3a6a6\", \"#b26464\", \"#8e2a2a\", \"#730f0f\"];\r\n    const colorScale = d3.scaleThreshold()\r\n      .domain(thresholds)\r\n      .range(colors);\r\n  \r\n    svg.selectAll(\"g.map-group\").remove();\r\n    const g = svg.append(\"g\").attr(\"class\", \"map-group\");\r\n  \r\n    svg.call(d3.zoom().scaleExtent([1, 8]).on('zoom', (event) => {\r\n      g.attr('transform', event.transform);\r\n    }));\r\n  \r\n    g.selectAll('path')\r\n      .data(countries)\r\n      .enter()\r\n      .append('path')\r\n      .attr('d', path)\r\n      .attr('fill', d => {\r\n        const country = d.properties.name;\r\n        const value = countryData[country]?.[selectedYear];\r\n        return value > 0 ? colorScale(value) : '#ccc';\r\n      })\r\n      .attr('stroke', '#333')\r\n      .on('mouseenter', (event, d) => {\r\n        const country = d.properties.name;\r\n        const value = countryData[country]?.[selectedYear] || 0;\r\n        setTooltip({\r\n          visible: true,\r\n          x: event.clientX + 10,\r\n          y: event.clientY + 10,\r\n          content: `${country}: $${value.toFixed(2)}B`\r\n        });\r\n      })\r\n      .on('mousemove', (event) => {\r\n        setTooltip(prev => ({ ...prev, x: event.clientX + 10, y: event.clientY + 10 }));\r\n      })\r\n      .on('mouseleave', () => setTooltip({ visible: false, x: 0, y: 0, content: null }));\r\n  \r\n    // Legend setup\r\n    svg.selectAll(\"g.legend\").remove();\r\n    const legendX = width - 65;\r\n    const legendY = height - 110;\r\n  \r\n    const legendGroup = svg.append('g')\r\n      .attr('class', 'legend')\r\n      .attr('transform', `translate(${legendX},${legendY})`);\r\n    \r\n    const reversedThresholds = thresholds.slice().reverse();\r\n    const reversedColors = colors.slice().reverse();\r\n\r\n    // Add background rectangle for the legend once, before the loop\r\n    legendGroup.append(\"rect\")\r\n      .attr(\"x\", -20)  // Adjust positioning to add padding\r\n      .attr(\"y\", -40) \r\n      .attr('rx', 5)\r\n      .attr('ry', 5) // Adjust positioning to add padding above the title\r\n      .attr(\"width\", 80)  // Set the desired width of the legend background\r\n      .attr(\"height\", reversedThresholds.length * 20 + 60)  // Set height to cover all legend items\r\n      .style(\"fill\", \"black\")  // Change to desired background color\r\n      .style(\"opacity\", 0.9)  // Adjust opacity if needed\r\n      .lower();  // Send the background rect to the back\r\n  \r\n    // Add legend title\r\n    legendGroup.append(\"text\")\r\n      .attr(\"x\", -15)\r\n      .attr(\"y\", -20)\r\n      .text(\"Billion USD\")\r\n      .style(\"font-size\", \"10px\")\r\n      .style(\"fill\", \"#e0e0e0\");\r\n  \r\n    // Add color boxes and labels\r\n    reversedThresholds.forEach((threshold, i) => {\r\n      legendGroup.append(\"rect\")\r\n        .attr(\"x\", -15)\r\n        .attr(\"y\", i * 20 - 10)\r\n        .attr(\"width\", 20)\r\n        .attr(\"height\", 20)\r\n        .style(\"fill\", reversedColors[i]);\r\n  \r\n      legendGroup.append(\"text\")\r\n        .attr(\"x\", 15)\r\n        .attr(\"y\", i * 20 )\r\n        .text(i === 0 ? `> ${threshold}` : `${threshold} - ${reversedThresholds[i - 1]}`)\r\n        .style(\"font-size\", \"10px\")\r\n        .style(\"fill\", \"#e0e0e0\");\r\n    });\r\n  \r\n    // Add the last range in the legend\r\n    legendGroup.append(\"rect\")\r\n      .attr(\"x\", -15)\r\n      .attr(\"y\", reversedThresholds.length * 20 - 10)\r\n      .attr(\"width\", 20)\r\n      .attr(\"height\", 20)\r\n      .style(\"fill\", reversedColors[reversedThresholds.length]);\r\n  \r\n    legendGroup.append(\"text\")\r\n      .attr(\"x\", 15)\r\n      .attr(\"y\", reversedThresholds.length * 20)\r\n      .text(`< ${reversedThresholds[reversedThresholds.length - 1]}`)\r\n      .style(\"font-size\", \"9px\")\r\n      .style(\"fill\", \"white\");\r\n  \r\n  }, [countries, countryData, selectedYear, loading, error]);\r\n  \r\n\r\n// Render line chart for target countries\r\nuseEffect(() => {\r\n  if (!lineChartRef.current || !Object.keys(countryData).length) return;\r\n\r\n  const mappedTargetCountries = targetCountries.map(country => countryNameMapping[country] || country);\r\n  const years = d3.range(minYear, selectedYear + 1);\r\n  const lineData = mappedTargetCountries.map(country => ({\r\n    country,\r\n    values: years.map(year => ({\r\n      year,\r\n      value: countryData[country] ? countryData[country][year] : 0\r\n    }))\r\n  }));\r\n\r\n  const margin = { top: 10, right: 40, bottom: 35, left: 40 };\r\n  const width = 300 - margin.left - margin.right;\r\n  const height = 240 - margin.top - margin.bottom;\r\n\r\n  const svg = d3.select(lineChartRef.current);\r\n  svg.selectAll(\"*\").remove();\r\n\r\n  const chartGroup = svg\r\n    .attr('width', width + margin.left + margin.right)\r\n    .attr('height', height + margin.top + margin.bottom)\r\n    .append('g')\r\n    .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n  const xScale = d3.scaleLinear()\r\n    .domain([minYear, maxYear])\r\n    .range([0, width]);\r\n\r\n  const yMax = d3.max(lineData, c => d3.max(c.values, v => v.value)) || 1;\r\n  const yScale = d3.scaleLinear()\r\n    .domain([0, yMax])\r\n    .range([height, 0]);\r\n\r\n  chartGroup.append('g')\r\n    .attr('transform', `translate(0,${height})`)\r\n    .call(d3.axisBottom(xScale).tickFormat(d => {\r\n      // Extract the last two digits of the year\r\n      const year = d % 100;\r\n      return year < 10 ? `0${year}` : `${year}`; // Format to always show two digits\r\n    }))\r\n    .selectAll(\"text\")\r\n    .style(\"font-size\", \"12px\")\r\n    .style(\"fill\", 'e0e0e0');\r\n\r\n  chartGroup.append('g')\r\n    .call(d3.axisLeft(yScale).tickFormat(d => `${d}B`))\r\n    .selectAll(\"text\")\r\n    .style(\"font-size\", \"12px\")\r\n    .style(\"fill\", 'e0e0e0');\r\n\r\n  const colorMap = {\r\n    \"United States of America\": \"#4682B4\",\r\n    \"China\": \"#FFDB58\",\r\n    \"Russia\": \"#DC143C\"\r\n  };\r\n\r\n  const lineGenerator = d3.line()\r\n    .x(d => xScale(d.year))\r\n    .y(d => yScale(d.value));\r\n\r\n  lineData.forEach(d => {\r\n    chartGroup.append('path')\r\n      .datum(d.values)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', colorMap[d.country])\r\n      .attr('stroke-width', 1.5)\r\n      .attr('d', lineGenerator);\r\n  });\r\n\r\n  lineData.forEach(d => {\r\n    chartGroup.selectAll(`.circle-${d.country}`)\r\n      .data(d.values)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('cx', d => xScale(d.year))\r\n      .attr('cy', d => yScale(d.value))\r\n      .attr('r', 4.5)\r\n      .attr('fill', colorMap[d.country])\r\n      .on('mouseenter', (event, datum) => {\r\n        setLineTooltip({\r\n          visible: true,\r\n          x: event.clientX + 10,\r\n          y: event.clientY - 10,\r\n          content: `${d.country}: $${datum.value.toFixed(2)}B in ${datum.year}`\r\n        });\r\n      })\r\n      .on('mousemove', (event) => {\r\n        setLineTooltip(prev => ({\r\n          ...prev,\r\n          x: event.clientX + 10,\r\n          y: event.clientY - 10\r\n        }));\r\n      })\r\n      .on('mouseleave', () => setLineTooltip({ visible: false, x: 0, y: 0, content: null }));\r\n  });\r\n\r\n  // Define display name mapping for the legend in the line chart\r\n  const displayNameMap = {\r\n    \"United States of America\": \"U.S.\",\r\n    \"China\": \"China\",\r\n    \"Russia\": \"Russia\"\r\n  };\r\n\r\n  // Add Legend for Line Chart\r\n  const legend = chartGroup.selectAll(\".legend\")\r\n    .data(mappedTargetCountries)\r\n    .enter()\r\n    .append(\"g\")\r\n    .attr(\"class\", \"legend\")\r\n    .attr(\"transform\", (_, i) => `translate(${width - 200},${i * 16})`);\r\n\r\n  legend.append(\"circle\")\r\n    .attr(\"cx\", 0)\r\n    .attr(\"cy\", 0)\r\n    .attr(\"r\", 6)\r\n    .style(\"fill\", d => colorMap[d]);\r\n\r\n  legend.append(\"text\")\r\n    .attr(\"x\", 12)\r\n    .attr(\"y\", \"0.35em\")\r\n    .text(d => displayNameMap[d] || d)\r\n    .attr(\"text-anchor\", \"start\")\r\n    .style(\"font-size\", \"14px\")\r\n    .style(\"fill\", '#e0e0e0');\r\n}, [countryData, selectedYear]);\r\n\r\nreturn (\r\n  <div style={{ position: 'relative', width: '100%' }}>\r\n        <h3 style={{\r\n          textAlign: 'center',\r\n          fontSize: '24px',\r\n          color: '#e74c3c',\r\n          paddingTop: '20px',\r\n        }}>\r\n          Defense Expenditure by Country {selectedYear}\r\n        </h3>\r\n        {loading && <div style={{ textAlign: 'center' }}>Loading data...</div>}\r\n        {error && <div style={{ color: 'red', textAlign: 'center' }}>{error}</div>}\r\n\r\n        {!loading && !error && (\r\n          <>\r\n            <input\r\n              type=\"range\"\r\n              min={minYear}\r\n              max={maxYear}\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(+e.target.value)}\r\n              style={{\r\n                width: '80%',\r\n                appearance: 'none',\r\n                height: '8px',\r\n                backgroundColor: 'gray',\r\n                borderRadius: '5px',\r\n                outline: 'none',\r\n                margin: '20px auto 10px',\r\n                display: 'block',\r\n                accentColor: '#e74c3c',\r\n              }}\r\n            />\r\n            <svg ref={svgRef} style={{ width: '100%', height: '80vh', border: '3px solid #e74c3c', borderRadius: '8px' }} aria-label=\"Defense Expenditure Map\"></svg>\r\n\r\n            {tooltip.visible && (\r\n              <div style={{\r\n                position: 'fixed',\r\n                top: tooltip.y,\r\n                left: tooltip.x,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n                color: '#e0e0e0',\r\n                padding: '6px 8px',\r\n                borderRadius: '8px',\r\n                pointerEvents: 'none',\r\n                transform: 'translate(-50%, -100%)',\r\n                whiteSpace: 'nowrap',\r\n                fontSize: '16px',\r\n                zIndex: 1000\r\n              }}>\r\n                {tooltip.content}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <div style={{\r\n          position: 'absolute', // Change to absolute to position it within the map container\r\n          bottom: '20px', // Adjust as needed to create space from the bottom border\r\n          left: '20px',\r\n          backgroundColor: '',\r\n          padding: '8px',\r\n          borderRadius: '6px',\r\n          width: '300px',\r\n          height: '240px',\r\n          overflow: 'hidden'\r\n        }}>\r\n          <svg ref={lineChartRef} style={{ width: '100%', height: '100%' }}></svg>\r\n\r\n          {lineTooltip.visible && (\r\n            <div style={{\r\n              position: 'fixed',\r\n              top: lineTooltip.y,\r\n              left: lineTooltip.x,\r\n              backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n              color: 'e0e0e0',\r\n              padding: '6px 8px',\r\n              borderRadius: '8px',\r\n              pointerEvents: 'none',\r\n              transform: 'translate(-50%, -100%)',\r\n              whiteSpace: 'nowrap',\r\n              fontSize: '16px',\r\n              zIndex: 1000\r\n            }}>\r\n              {lineTooltip.content}\r\n            </div>\r\n          )}\r\n        </div>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default DefenseExpenditureMap;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nconst iconPath = '/ar15.svg';\r\nconst iconValue = 2500;\r\n\r\nconst GunBarChart = () => {\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const width = 1000;\r\n    const height = 410;\r\n    const margin = { top: 40, right: 20, bottom: 50, left: 40 };\r\n\r\n    d3.select(svgRef.current).selectAll(\"*\").remove();\r\n\r\n    d3.csv('/data/processed/us_export.csv', d3.autoType).then(data => {\r\n      // Ensure data is sorted by year\r\n      data.sort((a, b) => a.year - b.year);\r\n\r\n      // X and Y scales\r\n      const xScale = d3.scaleBand()\r\n        .domain(data.map(d => d.year))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2);\r\n\r\n      const yScale = d3.scaleLinear()\r\n        .domain([0, 18000])\r\n        .nice()\r\n        .range([height - margin.bottom, margin.top]);\r\n\r\n      // Create SVG container\r\n      const svg = d3.select(svgRef.current)\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"background\", \"\")\r\n        .style(\"border-radius\", \"8px\");\r\n\r\n      // X Axis\r\n      svg.append(\"g\")\r\n        .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\r\n        .call(\r\n          d3.axisBottom(xScale)\r\n            .tickValues(data.map(d => d.year).filter(year => year % 10 === 0)) // Filter years divisible by 10\r\n            .tickFormat(d3.format(\"d\")) // Format the year as a number\r\n        )\r\n        .style(\"font-size\", \"15px\")\r\n        .style(\"fill\", \"#e0e0e0\");\r\n\r\n      // Y Axis\r\n      svg.append(\"g\")\r\n        .attr(\"transform\", `translate(${margin.left}, 0)`)\r\n        .call(d3.axisLeft(yScale).ticks(5).tickFormat(d => `${d / 1000}B`))\r\n        .style(\"font-size\", \"15px\")\r\n        .style(\"fill\", \"#e0e0e0\");\r\n\r\n      // Bars with gun icons\r\n      data.forEach((d, i) => {\r\n        const barGroup = svg.append(\"g\")\r\n          .attr(\"transform\", `translate(${xScale(d.year)}, ${height - margin.bottom})`);\r\n\r\n        const iconsCount = Math.floor(d.export / iconValue); // Full icons\r\n        const partialIconValue = (d.export % iconValue) / iconValue; // Fractional part for chopped gun\r\n        const iconSpacing = 10; // Space between icons\r\n        const iconSize = 34.5// Icon size (width and height)\r\n\r\n        // Sequential animation delay for each year\r\n        const yearDelay = i * 40;\r\n\r\n        // Append full icons\r\n        for (let j = 0; j < iconsCount; j++) {\r\n          barGroup.append(\"image\")\r\n            .attr(\"xlink:href\", iconPath)\r\n            .attr(\"width\", iconSize)\r\n            .attr(\"height\", iconSize)\r\n            .attr(\"x\", xScale.bandwidth() / 2 - iconSize / 2) // Center icon within the bar\r\n            .attr(\"y\", 0) // Start icon from the top\r\n            .style(\"filter\", \"invert(100%)\")\r\n            .style(\"opacity\", 0)\r\n            .transition()\r\n            .delay(yearDelay + j * 20) // Sequentially drop each icon\r\n            .duration(50)\r\n            .ease(d3.easeBounce)\r\n            .attr(\"y\", -(j * (iconSize + iconSpacing)) - iconSize) // Adjust spacing\r\n            .style(\"opacity\", 1);\r\n        }\r\n\r\n        // Append chopped icon for partial value\r\n        if (partialIconValue > 0.3) {\r\n          const partialClipPathId = `clip-${i}`;\r\n        \r\n          // Define a clipping path for the chopped icon, crop from the bottom\r\n          svg.append(\"clipPath\")\r\n            .attr(\"id\", partialClipPathId)\r\n            .append(\"rect\")\r\n            .attr(\"width\", iconSize)\r\n            .attr(\"height\", iconSize * partialIconValue) // Clip height based on the fraction\r\n            .attr(\"x\", xScale.bandwidth() / 2 - iconSize / 2)\r\n            .attr(\"y\", -(iconsCount * (iconSize + iconSpacing)) - iconSize * partialIconValue); // Adjust y to crop from the bottom\r\n          \r\n          // Append the chopped icon with clipping\r\n          barGroup.append(\"image\")\r\n            .attr(\"xlink:href\", iconPath)\r\n            .attr(\"width\", iconSize)\r\n            .attr(\"height\", iconSize)\r\n            .attr(\"clip-path\", `url(#${partialClipPathId})`)\r\n            .attr(\"x\", xScale.bandwidth() / 2 - iconSize / 2)\r\n            .attr(\"y\", -(iconsCount * (iconSize + iconSpacing)) - iconSize) // Adjust position to match clip path\r\n            .style(\"filter\", \"invert(100%)\")\r\n            .style(\"opacity\", 0)\r\n            .transition()\r\n            .delay(yearDelay + iconsCount * 20) // Add delay after the full icons\r\n            .duration(50)\r\n            .ease(d3.easeBounce)\r\n            .style(\"opacity\", 1);\r\n            }\r\n\r\n          svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${width - margin.right - 120}, ${margin.top})`) // Position of the legend\r\n            .call(g => {\r\n              g.append(\"image\")\r\n                .attr(\"xlink:href\", iconPath)\r\n                .attr(\"width\", iconSize)\r\n                .attr(\"height\", iconSize * 1.5)\r\n                .attr(\"x\", 0)\r\n                .attr(\"y\", 0)\r\n                .style(\"filter\", \"invert(100%)\")\r\n                .attr(\"transform\", \"rotate(90)\"); // Rotate 90 degrees clockwise\r\n\r\n              g.append(\"text\")\r\n                .attr(\"x\", 16) // Position text next to the icon\r\n                .attr(\"y\", 16)\r\n                .attr(\"dy\", \"0.35em\")\r\n                .style(\"font-size\", \"16px\")\r\n                .style(\"fill\", \"#e0e0e0\")\r\n                .text(\" = $ 2.5B\");\r\n            });\r\n        });\r\n\r\n    \r\n      /* / Y-axis Label\r\n      svg.append(\"text\")\r\n        .attr(\"x\", -height / 2)\r\n        .attr(\"y\", 30)\r\n        .attr(\"transform\", \"rotate(-90)\")\r\n        .style(\"text-anchor\", \"middle\")\r\n        .style(\"font-size\", \"16px\")\r\n        .style(\"fill\", \"#e0e0e0\")\r\n        .style(\"font-weight\", \"bold\")\r\n        .text(`Value (Billion USD)`)\r\n        .text(\"Billion USD\");\r\n      */\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{display: 'relative', alignItems: 'flex-start', padding: '40px'}}>\r\n      <h3 style={{\r\n          textAlign: 'center',\r\n          fontSize: '24px',\r\n          color: '#e74c3c',\r\n          paddingBottom: '20px',\r\n        }}>\r\n          US Arms Exports By Year\r\n        </h3>\r\n      <svg ref={svgRef} style={{border: '3px solid #e74c3c', borderRadius: '8px'}}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GunBarChart;\r\n","import React, { useState } from 'react';\r\nimport DefenseExpenditureMap from './graphs/001_DefenseExpenditureMap';\r\nimport GunBarChart from './graphs/001_animatedExportBarChart';\r\n\r\nconst intro = () => {\r\n  return (\r\n    <section id=\"001\">\r\n      <p className=\"custom-title\" style={{cssText: 'margin-top: 0'}}>\r\n          Introduction\r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n          The <span style={{ color: '#4682B4' }}>United States</span> has strategically leveraged arms exports as a tool to strengthen alliances, deter adversaries, and advance its geopolitical goals. \r\n          Spanning decades, U.S. arms exports surged during key moments such as the <em style={{ color: 'orange' }}>Cold War</em>, the <em style={{ color: 'orange' }}>War on Terror</em>, and recent conflicts like the <em style={{ color: 'orange' }}>Russia-Ukraine War</em>, shaping global power dynamics. \r\n          The chart below, illustrating U.S. arms exports in billions, demonstrates how these trades align with major geopolitical events, reflecting their role as an integral part of broader <em style={{ color: 'orange' }}>geopolitical strategy</em>. \r\n          More than economic transactions, arms exports function as extensions of diplomacy within the <em style={{ color: 'orange' }}>Diplomatic, Informational, Military, and Economic (DIME)</em> framework to promote stability, counter adversaries, and serve national interests.\r\n      </p>\r\n\r\n\r\n      <div className=\"chart-container\" style={{width: '80%'}}>\r\n        <GunBarChart />\r\n      </div>\r\n\r\n      <p className=\"custom-title\">\r\n          Illustrative Case: The Indo-Pacific as a New Geopolitical Center of Gravity\r\n      </p>\r\n      \r\n      <p className=\"custom-paragraph\">\r\n          As you slide through the year selector, it becomes clear that <span style={{ color: '#FFDB58' }}>China </span> \r\n          has steadily increased its defense budget since the late 1990s and early 2000s, surpassing <span style={{ color: '#DC143C' }}>Russia </span> \r\n          and signaling its ambitions for military modernization and expanded influence, particularly in the Indo-Pacific region. \r\n          In response, Indo-Pacific nations have also significantly increased their defense spending, bolstering military capabilities to address regional security concerns and counterbalance \r\n          <span style={{ color: '#FFDB58' }}> China's </span> growing presence.\r\n      </p> \r\n\r\n      <div className=\"chart-container\" style={{width: '80%'}}>\r\n        <DefenseExpenditureMap />\r\n      </div>\r\n      \r\n    </section>\r\n  );\r\n};\r\n\r\nexport default intro;\r\n","export default function(x) {\n  return x;\n}\n","import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\n\nexport default function(topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n"],"names":["svgRef","useRef","lineChartRef","_useState2","_slicedToArray","useState","visible","x","y","content","tooltip","setTooltip","_useState4","lineTooltip","setLineTooltip","_useState6","countryData","setCountryData","_useState8","countries","setCountries","_useState10","selectedYear","setSelectedYear","_useState12","loading","setLoading","_useState14","undefined","error","setError","minYear","maxYear","targetCountries","countryNameMapping","useEffect","Promise","all","d3","d","value","parsedData","Country","year","parseFloat","replace","then","_ref","_ref2","worldData","defenseData","countriesData","topojson","objects","features","processedData","forEach","row","countryName","console","length","Object","keys","svg","current","attr","concat","style","projection","center","scale","translate","width","height","path","thresholds","colors","colorScale","domain","range","selectAll","remove","g","append","call","scaleExtent","on","event","transform","data","enter","_countryData$country","country","properties","name","_countryData$country2","clientX","clientY","toFixed","prev","_objectSpread","legendGroup","reversedThresholds","slice","reverse","reversedColors","lower","text","threshold","i","mappedTargetCountries","map","years","lineData","values","chartGroup","xScale","yMax","c","v","yScale","tickFormat","colorMap","lineGenerator","datum","displayNameMap","legend","_","React","position","textAlign","fontSize","color","paddingTop","type","min","max","onChange","e","target","appearance","backgroundColor","borderRadius","outline","margin","display","accentColor","ref","border","top","left","padding","pointerEvents","whiteSpace","zIndex","bottom","overflow","iconPath","iconValue","sort","a","b","nice","tickValues","filter","ticks","barGroup","iconsCount","Math","floor","partialIconValue","iconSize","yearDelay","j","bandwidth","transition","delay","duration","ease","partialClipPathId","alignItems","paddingBottom","id","className","cssText","GunBarChart","DefenseExpenditureMap","topology","o","geometries","bbox","geometry","transformPoint","identity","x0","y0","kx","ky","dx","dy","input","n","output","Array","arcs","arc","points","pop","k","push","array","t","point","p","line","ring","polygon","coordinates","object"],"sourceRoot":""}