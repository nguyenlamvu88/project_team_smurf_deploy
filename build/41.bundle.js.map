{"version":3,"file":"41.bundle.js","mappings":"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","sources":["webpack://project_team_smurf_deploy/./src/components/graphs/007_JetAnimation.js","webpack://project_team_smurf_deploy/./src/components/graphs/007_F16.js","webpack://project_team_smurf_deploy/./src/components/graphs/007_ImportStackedBarChart.js","webpack://project_team_smurf_deploy/./src/components/007_taiwan.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { startJetAnimation } from './007_F16';\r\n\r\nconst JetAnimation = () => {\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let cleanupFunction;\r\n    if (containerRef.current) {\r\n      cleanupFunction = startJetAnimation(containerRef.current);\r\n    }\r\n\r\n    // Clean up the animation when the component unmounts\r\n    return () => {\r\n      if (cleanupFunction) cleanupFunction();\r\n    };\r\n  }, []);\r\n  return (\r\n      <div\r\n      id=\"animation-container\"\r\n      ref={containerRef}\r\n      style={{ width: '100%', overflow: 'hidden' }}\r\n    >\r\n      {/* The animation will render inside this div */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JetAnimation;\r\n","// jet_animation.js\r\n\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\n\r\nexport function startJetAnimation(container) {\r\n  let scene, camera, renderer, controls;\r\n  let jets = [];\r\n  const NUM_JETS = 150;\r\n  const jetModelPath = '/f16-c_falcon.glb'; // Adjust path if necessary\r\n  const worldMapPath = '/taiwan_gmap.png';  // Adjust path if necessary\r\n\r\n  let animationFrameId;\r\n  let startTime = Date.now();\r\n\r\n  init();\r\n  animate();\r\n\r\n  function init() {\r\n    // Scene Setup\r\n    scene = new THREE.Scene();\r\n\r\n    // Camera Setup\r\n    camera = new THREE.PerspectiveCamera(\r\n      60, 16/9, 0.1, 1000\r\n    );\r\n    camera.position.set(0, 200, 0); // Position the camera above the map\r\n    camera.lookAt(0, 0, 0); // Make the camera look at the center of the scene\r\n\r\n    // Renderer Setup\r\n    renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true }); // Enable alpha for transparency\r\n    renderer.setClearColor(0x000000, 0); // Transparent background\r\n    renderer.setSize(container.clientWidth, container.clientWidth * 9 /16);\r\n    container.appendChild(renderer.domElement);\r\n\r\n    // OrbitControls Setup (Optional)\r\n    controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableRotate = false; // Disable rotation to keep the camera fixed\r\n    controls.enableZoom = false;   // Disable zoom if necessary\r\n\r\n    // Lighting\r\n    const ambientLight = new THREE.AmbientLight(0xcccccc, 0.5);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    directionalLight.position.set(100, 200, 100);\r\n    scene.add(directionalLight);\r\n\r\n    // Load World Map\r\n    const textureLoader = new THREE.TextureLoader();\r\n    textureLoader.load(worldMapPath, (texture) => {\r\n      const planeGeometry = new THREE.PlaneGeometry(400, 200);\r\n      const planeMaterial = new THREE.MeshBasicMaterial({ map: texture });\r\n      const worldMap = new THREE.Mesh(planeGeometry, planeMaterial);\r\n      worldMap.rotation.x = -Math.PI / 2;\r\n      scene.add(worldMap);\r\n    });\r\n\r\n    // Load Jet Model\r\n    const loader = new GLTFLoader();\r\n    loader.load(\r\n      jetModelPath,\r\n      (gltf) => {\r\n        const jetModel = gltf.scene;\r\n        jetModel.scale.set(0.2, 0.2, 0.2); // Initial scale\r\n\r\n        for (let i = 0; i < NUM_JETS; i++) {\r\n          const jet = jetModel.clone();\r\n          const initialPosition = initializeJet(jet, i);\r\n          scene.add(jet);\r\n          jets.push({\r\n            object: jet,\r\n            index: i,\r\n            landed: false,\r\n            targetPosition: getLandingPosition(i),\r\n            initialPosition: initialPosition.clone(),\r\n            delay: i * 0.1 // Stagger the jets by 0.1 seconds each\r\n          });\r\n        }\r\n      },\r\n      undefined,\r\n      (error) => {\r\n        console.error('Error loading the jet model:', error);\r\n      }\r\n    );\r\n\r\n    // Handle Window Resize\r\n    window.addEventListener('resize', onWindowResize, false);\r\n  }\r\n\r\n  function initializeJet(jet, index) {\r\n    // Position jets along the top edge from left to right\r\n    const startX = -200 + (400 / NUM_JETS) * index;\r\n    const startZ = -100; // Top edge of the map\r\n    const startY = 10;   // Slightly above the map\r\n    const position = new THREE.Vector3(startX, startY, startZ);\r\n    jet.position.copy(position);\r\n\r\n    // Initial rotation towards landing position\r\n    jet.lookAt(getLandingPosition(index));\r\n\r\n    // Rotate the jet 180 degrees around Y-axis to face forward\r\n    jet.rotateY(Math.PI);\r\n\r\n    // Return the initial position for scaling calculations\r\n    return position;\r\n  }\r\n\r\n  function getLandingPosition(index) {\r\n    // Define landing area parameters\r\n    const startAngle = 255; // Starting angle in degrees\r\n    const endAngle = 105;   // Ending angle in degrees\r\n    const totalSpread = startAngle - endAngle; // Should be 150 degrees\r\n    const deltaAngle = totalSpread / (NUM_JETS - 1); // Degrees per jet\r\n\r\n    // Calculate the angle for the current jet\r\n    const angleDegrees = startAngle - deltaAngle * index;\r\n\r\n    // Adjust the angle to rotate the arc by 90 degrees counterclockwise\r\n    const adjustedAngleDegrees = angleDegrees - 90; // Subtract 90 degrees\r\n    const angleRadians = THREE.MathUtils.degToRad(adjustedAngleDegrees);\r\n\r\n    // Landing radius and center position\r\n    const landingRadius = 100; // Adjust as needed\r\n    const centerX = 0;         // Center X-coordinate\r\n    const centerZ = 28;         // last was 21\r\n\r\n    // Calculate landing position along the arc\r\n    const landingX = centerX + landingRadius * Math.cos(angleRadians);\r\n    const landingZ = centerZ + (landingRadius * Math.sin(angleRadians)) * 0.5; // Flattened vertically\r\n\r\n    return new THREE.Vector3(landingX, 0, landingZ);\r\n  }\r\n\r\n  function animate() {\r\n    animationFrameId = requestAnimationFrame(animate);\r\n\r\n    const elapsedTime = (Date.now() - startTime) / 1000; // In seconds\r\n\r\n    jets.forEach((jetData) => {\r\n      if (!jetData.landed) {\r\n        if (elapsedTime > jetData.delay) {\r\n          const jet = jetData.object;\r\n          const target = jetData.targetPosition;\r\n\r\n          // Move jet towards the target\r\n          const direction = new THREE.Vector3().subVectors(target, jet.position).normalize();\r\n          const speed = 1; // Adjust speed if necessary\r\n          jet.position.add(direction.multiplyScalar(speed));\r\n\r\n          // Adjust the jet's scale based on distance to target\r\n          const totalDistance = jetData.initialPosition.distanceTo(target);\r\n          const currentDistance = jet.position.distanceTo(target);\r\n          const scale = 0.2 + 0.8 * (1 - currentDistance / totalDistance); // Scale from 0.2 to 1\r\n          jet.scale.set(scale, scale, scale);\r\n\r\n          // Check if the jet has \"landed\"\r\n          if (jet.position.distanceTo(target) < 1) {\r\n            jetData.landed = true;\r\n            jet.position.copy(target);\r\n\r\n            // Set the jet's rotation to match the adjusted angle\r\n            const angleDegrees = 200 + ((255 - 105) / (NUM_JETS - 1)) * jetData.index;\r\n            const adjustedAngleDegrees = angleDegrees - 90; // Subtract 90 degrees\r\n            const angleRadians = THREE.MathUtils.degToRad(adjustedAngleDegrees);\r\n            jet.rotation.set(0, angleRadians, 0);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // Update controls if you keep OrbitControls\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onWindowResize() {\r\n    camera.aspect = 16 / 9; // fixed ratio\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(container.clientWidth, container.clientWidth * 9 / 16);\r\n  }\r\n\r\n  // Return a clean-up function to stop the animation and remove event listeners\r\n  return () => {\r\n    window.removeEventListener('resize', onWindowResize, false);\r\n    cancelAnimationFrame(animationFrameId);\r\n\r\n    // Clean up Three.js scene\r\n    renderer.dispose();\r\n    controls.dispose();\r\n\r\n    // Remove the renderer's canvas from the container\r\n    container.removeChild(renderer.domElement);\r\n  };\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst StackedBarChart = () => {\r\n  const svgRef = useRef();\r\n  const [data, setData] = useState([]);\r\n  const [tooltip, setTooltip] = useState({ visible: false, x: 0, y: 0, content: '' });\r\n\r\n  useEffect(() => {\r\n    // Fetch the CSV data (you can replace this with your actual CSV URL)\r\n    d3.csv('/data/processed/us_export.csv').then((data) => {\r\n      // Convert columns to numbers\r\n      data.forEach(d => {\r\n        d.year = +d.year;\r\n        d.taiwan = +d.taiwan;\r\n        d.other = +d.other;\r\n      });\r\n\r\n      setData(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!data.length) return;\r\n\r\n    const margin = { top: 20, right: 40, bottom: 40, left: 60 };\r\n    const width = 800;\r\n    const height = 400;\r\n\r\n    // Add the SVG element and define its responsive behavior\r\n    const svg = d3\r\n      .select(svgRef.current)\r\n      .attr('viewBox', `0 0 ${width} ${height}`) // Include the full width and height\r\n      .style('width', '100%') // Responsive width\r\n      .style('height', 'auto') // Preserve aspect ratio\r\n      .append('g') // Group for chart contents\r\n      .attr(\r\n        'transform',\r\n        `translate(${margin.left}, ${margin.top})` // Adjust for margins\r\n      );\r\n\r\n      const innerWidth = width - margin.left - margin.right;\r\n      const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    // Set up the X scale (for years)\r\n    const x = d3.scaleBand()\r\n      .domain(data.map(d => d.year))\r\n      .range([0, innerWidth])\r\n      .padding(0.1);\r\n\r\n    // Set up the Y scale (for export value)\r\n    const y = d3.scaleLinear()\r\n      .domain([0, 18000])\r\n      .nice()\r\n      .range([innerHeight, 0]);\r\n\r\n    // Set up the color scale for Taiwan and Other\r\n    const color = d3.scaleOrdinal()\r\n      .domain(['taiwan', 'other'])\r\n      .range(['#44982A', '#e0e0e0']); // You can customize these colors\r\n\r\n    // Create the X and Y axis\r\n    svg.selectAll('.bar')\r\n      .data(data)\r\n      .enter()\r\n      .append('g')\r\n      .attr('transform', d => `translate(${x(d.year)},0)`)\r\n      .each(function(d) {\r\n        // Taiwan rectangle\r\n        d3.select(this)\r\n          .append('rect')\r\n          .attr('x', 0)\r\n          .attr('y', y(d.export - d.other))  // Start from the top of the stack\r\n          .attr('width', x.bandwidth())\r\n          .attr('height', y(d.export - d.taiwan) - y(d.export))  // Height of Taiwan\r\n          .attr('fill', color('taiwan'))\r\n          .attr('rx', 2)\r\n          .attr('ry', 2)\r\n          .on('mouseover', function (event) {\r\n            const container = svgRef.current.getBoundingClientRect();\r\n            const offsetX = event.clientX - container.left;\r\n            const offsetY = event.clientY - container.top;\r\n            setTooltip({\r\n              visible: true,\r\n              x: offsetX + 10,\r\n              y: offsetY - 10,\r\n              content: <div><strong>{d.year}</strong><br/>Taiwan<br/>${d.taiwan.toLocaleString()}B</div>\r\n            });\r\n          })\r\n          .on('mousemove', (event) => {\r\n            const container = svgRef.current.getBoundingClientRect();\r\n            const offsetX = event.clientX - container.left;\r\n            const offsetY = event.clientY - container.top;\r\n            setTooltip(prev => ({\r\n              ...prev,\r\n              x: offsetX + 10,\r\n              y: offsetY - 10,\r\n            }));\r\n          })\r\n          .on('mouseleave', function () {\r\n\r\n            setTooltip({ visible: false, x: 0, y: 0, content: '' });\r\n          });\r\n\r\n        // Other rectangle\r\n        d3.select(this)\r\n          .append('rect')\r\n          .attr('x', 0)\r\n          .attr('y', y(d.export))  // Start from the top of the Taiwan rectangle\r\n          .attr('width', x.bandwidth())\r\n          .attr('height', y(d.export - d.other) - y(d.export))  // Height of Other\r\n          .attr('fill', color('other'))\r\n          .attr('rx', 2)\r\n          .attr('ry', 2)\r\n          .on('mouseover', function (event) {\r\n            const container = svgRef.current.getBoundingClientRect();\r\n            const offsetX = event.clientX - container.left;\r\n            const offsetY = event.clientY - container.top;\r\n            setTooltip({\r\n              visible: true,\r\n              x: offsetX + 5,\r\n              y: offsetY - 5,\r\n              content: <div><strong>{d.year}</strong><br/>Other Regions<br/>${d.other.toLocaleString()}B</div>\r\n            });\r\n          })\r\n          .on('mousemove', (event) => {\r\n            const container = svgRef.current.getBoundingClientRect();\r\n            const offsetX = event.clientX - container.left;\r\n            const offsetY = event.clientY - container.top;\r\n            setTooltip(prev => ({\r\n              ...prev,\r\n              x: offsetX + 5,\r\n              y: offsetY - 5,\r\n            }));\r\n          })\r\n          .on('mouseleave', function () {\r\n\r\n            setTooltip({ visible: false, x: 0, y: 0, content: '' });\r\n          });\r\n      });\r\n\r\n    // X-axis\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(0,${innerHeight})`)\r\n      .call(\r\n        d3.axisBottom(x)\r\n          .tickValues(data.map(d => d.year).filter(year => year % 10 === 0)) // Filter years divisible by 10\r\n          .tickFormat(d3.format(\"d\")) // Format the year as a number\r\n      )\r\n      .style(\"font-size\", \"15px\")\r\n      .style(\"fill\", \"#e0e0e0\");\r\n\r\n    // Y-axis\r\n    svg.append(\"g\")\r\n        .call(d3.axisLeft(y).ticks(5).tickFormat(d => `${d / 1000}B`))\r\n        .style(\"font-size\", \"15px\")\r\n        .style(\"fill\", \"#e0e0e0\");\r\n  }, [data]);\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100%' }}>\r\n      <h3 style={{\r\n          textAlign: 'center',\r\n          fontSize: '24px',\r\n          color: '#e74c3c',\r\n          paddingTop: '20px',\r\n          paddingBottom: '20px',\r\n        }}>\r\n          US Arms Export\r\n        </h3>\r\n        <svg ref={svgRef} style={{ width: '100%', border: '3px solid #e74c3c', borderRadius: '8px' }}></svg>\r\n        {tooltip.visible && (\r\n        <div\r\n        style={{\r\n          position: 'absolute',\r\n          top: tooltip.y,\r\n          left: tooltip.x,\r\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n          color: '#e0e0e0',\r\n          padding: '12px',\r\n          borderRadius: '8px',\r\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)',\r\n          fontSize: '16px',\r\n          lineHeight: '1.6',\r\n          pointerEvents: 'none',\r\n          transition: 'opacity 0.3s ease',\r\n          opacity: tooltip.visible ? 1 : 0,\r\n          zIndex: 10,\r\n          whiteSpace: 'nowrap',\r\n          width: 'auto',\r\n          height: 'auto',\r\n        }}\r\n        >\r\n          {tooltip.content}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StackedBarChart;\r\n","import React, { useState } from 'react';\r\nimport JetAnimation from './graphs/007_JetAnimation';\r\nimport StackedBarChart from './graphs/007_ImportStackedBarChart';\r\n\r\nconst taiwan = () => {\r\n  return (\r\n    <section id=\"007\">\r\n      <p className=\"custom-title\" style={{cssText: 'margin-top: 0'}}>\r\n        Case Study: Taiwan\r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n        As illustrated in the previous chapters, the SIPRI dataset keeps a detailed record of arms transfers, which include many monumental <span style={{ color: '#4682B4' }}>US</span> arms sales to its allies.\r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n        In 1992, <span style={{ color: '#4682B4' }}>US</span> President George H.W. Bush approved the sale of 150 F-16 fighter jets to <span style={{ color: '#44982A' }}>Taiwan</span>\r\n      </p>\r\n\r\n      <div className=\"chart-container\" style={{width: '80%', border: '3px solid #e74c3c', borderRadius: '8px' }}>\r\n        <JetAnimation />\r\n      </div>\r\n\r\n      <p className=\"custom-title\">\r\n        Arms Trades and Major Historical Events\r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n        In the stacked barchart below, we can see that the <span style={{ color: '#4682B4' }}>United States'</span> weapon exports to <span style={{ color: '#44982A' }}>Taiwan</span> coincide with major historical events:\r\n      </p>\r\n\r\n      <div className=\"chart-container\" style={{width: '80%'}}>\r\n      <StackedBarChart />\r\n      </div>\r\n      \r\n      <ul style={{cssText: 'margin-top: 1.5rem'}}>\r\n        <li>First (1954 - 1955) and second (1958) Taiwan Strait Crisis</li><br />\r\n        <li>Rise of China (early 1990s) and the third Taiwan Strait Crisis (1996)</li><br />\r\n        <li>China's shift in foreign policy (early 2010s)</li><br />\r\n      </ul>\r\n      \r\n    </section>\r\n  );\r\n};\r\n\r\nexport default taiwan;\r\n"],"names":["containerRef","useRef","useEffect","cleanupFunction","current","container","scene","camera","renderer","controls","animationFrameId","jets","startTime","Date","now","initializeJet","jet","index","startX","position","THREE","copy","lookAt","getLandingPosition","rotateY","Math","PI","adjustedAngleDegrees","startAngle","angleRadians","degToRad","landingX","cos","landingZ","sin","onWindowResize","aspect","updateProjectionMatrix","setSize","clientWidth","set","antialias","alpha","setClearColor","appendChild","domElement","OrbitControls","enableRotate","enableZoom","ambientLight","add","directionalLight","load","texture","planeGeometry","planeMaterial","map","worldMap","rotation","x","GLTFLoader","gltf","jetModel","scale","i","clone","initialPosition","push","object","landed","targetPosition","delay","undefined","error","console","window","addEventListener","init","animate","requestAnimationFrame","elapsedTime","forEach","jetData","target","direction","subVectors","normalize","multiplyScalar","totalDistance","distanceTo","update","render","removeEventListener","cancelAnimationFrame","dispose","removeChild","startJetAnimation","React","id","ref","style","width","overflow","svgRef","_useState2","_slicedToArray","useState","data","setData","_useState4","visible","y","content","tooltip","setTooltip","d3","then","d","year","taiwan","other","length","svg","attr","concat","append","domain","range","padding","nice","height","color","selectAll","enter","each","this","bandwidth","on","event","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","toLocaleString","prev","_objectSpread","call","tickValues","filter","tickFormat","ticks","textAlign","fontSize","paddingTop","paddingBottom","border","borderRadius","backgroundColor","boxShadow","lineHeight","pointerEvents","transition","opacity","zIndex","whiteSpace","className","cssText","JetAnimation","StackedBarChart"],"sourceRoot":""}