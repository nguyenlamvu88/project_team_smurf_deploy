{"version":3,"file":"248.bundle.js","mappings":"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","sources":["webpack://project_team_smurf_deploy/./src/components/graphs/004_Top10RecipientsPCC.js","webpack://project_team_smurf_deploy/./src/components/004_proxySupport.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst ParallelCoordinatesChart = ({ selectedYear, setSelectedYear }) => {\r\n  const svgRef = useRef();\r\n  const margin = { top: 80, right: 80, bottom: 40, left: 80 };\r\n  const width = 1000 - margin.left - margin.right;\r\n  const height = 450 - margin.top - margin.bottom;\r\n  const dataUrl = '/data/processed/processed_recipients_of_combined_us_china_russia_arms_hierarchical.json';\r\n\r\n  const [data, setData] = useState(null);\r\n\r\n  const fixedRecipients = [\r\n    'Japan', 'South Korea', 'Taiwan', 'Israel', 'Germany', \r\n    'China', 'India', 'Turkiye', 'Saudi Arabia', 'Iran'\r\n  ];\r\n  \r\n  const colorScale = d3.scaleOrdinal()\r\n    .domain(['United States', 'Russia', 'China'])\r\n    .range(['#4682B4', '#DC143C', '#FFDB58']); // Blue, red, yellow\r\n\r\n    useEffect(() => {\r\n      d3.json(dataUrl).then(rawData => {\r\n        const flattenedData = [];\r\n        rawData.data.forEach((supplierData) => {\r\n          const supplier = supplierData.supplier;\r\n          supplierData.recipients.forEach((recipientData) => {\r\n            const recipient = recipientData.recipient;\r\n            Object.entries(recipientData.years).forEach(([year, value]) => {\r\n              flattenedData.push({ \r\n                supplier: supplier === \"United States of America\" ? \"USA\" : supplier,\r\n                recipient,\r\n                year: +year,\r\n                value \r\n              });\r\n            });\r\n          });\r\n        });\r\n        setData(flattenedData);\r\n      });\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n    if (!data || data.length === 0) return;\r\n\r\n    const filteredYearData = data.filter((d) => d.year === selectedYear);\r\n    // Aggregate total trade value by recipient\r\n    const destinationTotals = d3.rollups(\r\n      filteredYearData,\r\n      (v) => d3.sum(v, (d) => d.value),\r\n      (d) => d.recipient\r\n    );\r\n\r\n    // Sort and take the top 10 recipients by total trade value\r\n    const topDestinations = destinationTotals\r\n      .sort((a, b) => b[1] - a[1])\r\n      .slice(0, 10)\r\n      .map((d) => d[0]);\r\n\r\n    // Filter data to include only the top 10 recipients\r\n    const filteredData = filteredYearData.filter((d) => topDestinations.includes(d.recipient));\r\n    \r\n    const validData = filteredData.map((d) => ({\r\n      supplier: d.supplier || \"Unknown\",\r\n      recipient: d.recipient || \"Unknown\",\r\n      value: d.value !== undefined && !isNaN(d.value) ? d.value : 0,\r\n    }));\r\n    // Define dimensions for parallel coordinates\r\n    const dimensions = [\"supplier\", \"recipient\", \"value\"];\r\n\r\n    // Set up scales for each dimension\r\n    const yScales = {};\r\n    dimensions.forEach((dim) => {\r\n      if (dim === \"value\") {\r\n        yScales[dim] = d3.scaleSymlog()\r\n          .constant(1000)\r\n          .domain([1, 5000])\r\n          .range([height, 0]);\r\n      } else {\r\n        yScales[dim] = d3.scalePoint()\r\n          .domain([...new Set(filteredData.map((d) => d[dim]))])\r\n          .range([height, 0]);\r\n      }\r\n    });\r\n\r\n    // X scale for each dimension\r\n    const xScale = d3.scalePoint()\r\n      .domain(dimensions)\r\n      .range([0, width]);\r\n\r\n\r\n    // Select the SVG element and clear previous content\r\n    const svg = d3.select(svgRef.current)\r\n      .attr(\"viewBox\", `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`);\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    const tooltip = d3.select(\"body\").append(\"div\")\r\n      .attr(\"class\", \"tooltip\") // Assign a class for styling\r\n      .style(\"position\", \"absolute\")\r\n      .style(\"background\", \"rgba(0, 0, 0, 0.9)\")\r\n      .style(\"color\", \"white\")\r\n      .style(\"padding\", \"12px\")\r\n      .style(\"border-radius\", \"8px\")\r\n      .style(\"pointer-events\", \"none\")\r\n      .style(\"line-height\", \"1.6\")\r\n      .style(\"display\", \"none\");\r\n\r\n    // Add a group element for margins\r\n    const chartGroup = svg.append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n    // Helper function to draw each line\r\n    const path = (d) => d3.line()(dimensions.map((dim) => [xScale(dim), yScales[dim](d[dim])]));\r\n\r\n    // Draw each line for each data point\r\n    chartGroup.selectAll(\"path\")\r\n      .data(validData)\r\n      .join(\"path\")\r\n      .attr(\"d\", path)\r\n      .style(\"fill\", \"none\")\r\n      .style(\"stroke\", (d) => colorScale(d.supplier)) // Use supplier color scale\r\n      .style(\"opacity\", 0.8)\r\n      .style(\"stroke-width\", 3)\r\n      .on(\"mouseover\", (event, d) => {\r\n        d3.select(event.currentTarget)\r\n          .style(\"opacity\", 1) // Highlight line\r\n          .style(\"stroke-width\", 3); // Increase width on hover\r\n        tooltip.style(\"display\", \"block\")\r\n          .html(`\r\n            <strong>Supplier:</strong> ${d.supplier}<br>\r\n            <strong>Recipient:</strong> ${d.recipient}<br>\r\n            <strong>Value:</strong> $${d.value.toLocaleString()}M\r\n          `);\r\n      })\r\n      .on(\"mousemove\", (event) => {\r\n        tooltip.style(\"top\", `${event.pageY - 10}px`)\r\n          .style(\"left\", `${event.pageX + 10}px`);\r\n      })\r\n      .on(\"mouseout\", (event) => {\r\n        d3.select(event.currentTarget)\r\n          .style(\"opacity\", 0.8) // Reset opacity\r\n          .style(\"stroke-width\", 5); // Reset width\r\n        tooltip.style(\"display\", \"none\");\r\n      });\r\n    \r\n    const labelMapping = {\r\n        supplier: \"Supplier\",\r\n        recipient: \"Recipient\",\r\n        value: \"Million USD\",\r\n      };\r\n    // Draw axes for each dimension\r\n    dimensions.forEach((dim) => {\r\n      const axisGroup = chartGroup.append(\"g\")\r\n        .attr(\"transform\", `translate(${xScale(dim)}, 0)`);\r\n    \r\n      // Add Y-axis for each dimension\r\n      axisGroup.call(\r\n        d3.axisLeft(yScales[dim])\r\n          .ticks(5)\r\n          .tickSize(10) // Make ticks longer\r\n          .tickSizeOuter(0)\r\n      )\r\n      .selectAll(\"line\") // Style the tick lines\r\n        .style(\"stroke\", \"#e0e0e0\")\r\n        .style(\"stroke-width\", 2); // Thicker tick lines\r\n    \r\n      // Style the axis line\r\n      axisGroup.select(\".domain\")\r\n        .style(\"stroke\", \"#e0e0e0\")\r\n        .style(\"stroke-width\", 3); // Thicker axis bar\r\n    \r\n      // Customize tick labels\r\n      axisGroup.selectAll(\"text\")\r\n        .style(\"font-size\", \"14px\")\r\n        .style(\"font-weight\", \"bold\")\r\n        .style(\"fill\", \"#e0e0e0\");\r\n    \r\n      // Axis label\r\n      axisGroup.append(\"text\")\r\n        .attr(\"y\", -25)\r\n        .attr(\"x\", -5)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .text(labelMapping[dim])\r\n        .style(\"fill\", \"#e0e0e0\")\r\n        .style(\"font-size\", \"16px\")\r\n        .style(\"font-weight\", \"bold\");\r\n    });\r\n\r\n  }, [data, selectedYear]);\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100%' }}>\r\n      <h3 style={{\r\n          textAlign: 'center',\r\n          fontSize: '24px',\r\n          color: '#e74c3c',\r\n          paddingTop: '20px',\r\n        }}>\r\n          Top Arms Trades {selectedYear}\r\n        </h3>\r\n      <input\r\n        type=\"range\"\r\n        min=\"1950\"\r\n        max=\"2023\"\r\n        value={selectedYear}\r\n        onChange={(e) => setSelectedYear(+e.target.value)}\r\n        style={{\r\n          width: '80%',\r\n          appearance: 'none',\r\n          height: '8px',\r\n          backgroundColor: 'gray',\r\n          borderRadius: '5px',\r\n          outline: 'none',\r\n          margin: '20px auto 10px',\r\n          display: 'block',\r\n          accentColor: '#e74c3c',\r\n        }}\r\n      />\r\n\r\n      <svg ref={svgRef} style={{ width: '100%', border: '3px solid #e74c3c', borderRadius: '8px'}} ></svg>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParallelCoordinatesChart;\r\n","import React, { useState } from 'react';\r\nimport ParallelCoordinatesChart from './graphs/004_Top10RecipientsPCC';\r\n\r\nconst proxySupport = () => {\r\n  const [selectedYear, setSelectedYear] = useState(2014);\r\n  \r\n  const handleYearChange = (year) => {\r\n    setSelectedYear(year);\r\n  };\r\n\r\n  return (\r\n    <section id=\"004\">\r\n      <p className=\"custom-title\" style={{ cssText: 'margin-top: 0' }}>\r\n        Countering through Proxy Support\r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n        The <strong style={{ color: \"#4682B4\" }}>US</strong> maintains strategic alliances across Asia and the Middle East to counter regional threats. This includes supplying advanced weaponry to <strong style={{ color: \"#D2B48C\" }}>Taiwan</strong>, <strong style={{ color: \"#D2B48C\" }}>Japan</strong>, <strong style={{ color: \"#D2B48C\" }}>South Korea</strong>, <strong style={{ color: \"#D2B48C\" }}>Israel</strong>, and <strong style={{ color: \"#D2B48C\" }}>Saudi Arabia</strong>, aimed at countering China's influence and ensuring regional stability.\r\n      </p>\r\n      \r\n      <p className=\"custom-paragraph\">\r\n        <strong style={{ color: \"#FFD700\" }}>China</strong> relies mainly on domestic arms production, with significant support from <strong style={{ color: \"#DC143C\" }}>Russia</strong> for strategic gains. Meanwhile, <strong style={{ color: \"#D2B48C\" }}>India</strong> diversifies its procurement with major imports from Russia, the <strong style={{ color: \"#4682B4\" }}>US</strong>, and Israel to enhance security.\r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n        Within NATO, countries like <strong style={{ color: \"#D2B48C\" }}>Turkey</strong> and <strong style={{ color: \"#D2B48C\" }}>Germany</strong> balance Western alliances with regional ambitions, similar to <strong style={{ color: \"#D2B48C\" }}>Saudi Arabia</strong>'s approach to stabilizing its region with Western support. Additionally, <strong style={{ color: \"#DC143C\" }}>Iran</strong> maintains limited but strategic ties with Russia to assert its influence against Western powers.\r\n      </p>\r\n\r\n      <p className=\"custom-title\">\r\n        Geopolitical Shifts\r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n        <strong>Cold War Era (1947-1991)</strong>: The <strong style={{ color: \"#4682B4\" }}>US</strong> and <strong style={{ color: \"#DC143C\" }}>Soviet Union</strong> engaged in proxy wars, driving high arms trade volumes. <button onClick={() => handleYearChange(1970)}>View</button>\r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n        <strong>Post-Cold War (1991-Present)</strong>: The <strong style={{ color: \"#4682B4\" }}>US</strong> dominates, exporting to strategic regions, with <strong style={{ color: \"#FFD700\" }}>China</strong> and <strong style={{ color: \"#D2B48C\" }}>India</strong> emerging as key players. <button onClick={() => handleYearChange(1993)}>View</button>\r\n      </p>\r\n\r\n      <p className=\"custom-paragraph\">\r\n        <strong>Recent Decades (2000s-2020s)</strong>: Middle Eastern and Asia-Pacific tensions drive significant arms trade with <strong style={{ color: \"#D2B48C\" }}>Saudi Arabia</strong>, <strong style={{ color: \"#D2B48C\" }}>Israel</strong>, <strong style={{ color: \"#D2B48C\" }}>Turkey</strong>, <strong style={{ color: \"#D2B48C\" }}>Japan</strong>, <strong style={{ color: \"#D2B48C\" }}>South Korea</strong>, and <strong style={{ color: \"#D2B48C\" }}>Taiwan</strong>. <button onClick={() => handleYearChange(2006)}>View</button>\r\n      </p>\r\n      \r\n      <p className=\"custom-paragraph\">\r\n        <strong>Russia-Ukraine Conflict</strong>: The conflict reshapes trade, with Western nations backing Ukraine and <strong style={{ color: \"#DC143C\" }}>Russia</strong> facing sanctions. <button onClick={() => handleYearChange(2022)}>View</button>\r\n      </p>\r\n    \r\n      <p className=\"custom-paragraph\">\r\n        <strong>Great Power Competition</strong>: <strong style={{ color: \"#4682B4\" }}>US</strong>-<strong style={{ color: \"#FFD700\" }}>China</strong> competition redefines global alliances, with the <strong style={{ color: \"#4682B4\" }}>US</strong> fortifying Indo-Pacific ties and <strong style={{ color: \"#FFD700\" }}>China</strong> expanding its influence. <button onClick={() => handleYearChange(2016)}>View</button>\r\n      </p>  \r\n\r\n      <div className=\"chart-container\" style={{ width: '80%' }}>\r\n        <ParallelCoordinatesChart selectedYear={selectedYear} setSelectedYear={setSelectedYear} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default proxySupport;\r\n"],"names":["_ref","selectedYear","setSelectedYear","svgRef","useRef","_useState2","_slicedToArray","useState","data","setData","colorScale","d3","domain","range","useEffect","then","rawData","flattenedData","forEach","supplierData","supplier","recipients","recipientData","recipient","Object","entries","years","_ref2","_ref3","year","value","push","length","filteredYearData","filter","d","topDestinations","v","sort","a","b","slice","map","filteredData","includes","validData","undefined","isNaN","dimensions","yScales","dim","constant","Set","xScale","svg","current","attr","concat","width","height","selectAll","remove","tooltip","append","style","chartGroup","join","on","event","currentTarget","html","toLocaleString","pageY","pageX","labelMapping","axisGroup","call","ticks","tickSize","tickSizeOuter","select","text","React","position","textAlign","fontSize","color","paddingTop","type","min","max","onChange","e","target","appearance","backgroundColor","borderRadius","outline","margin","display","accentColor","ref","border","handleYearChange","id","className","cssText","onClick","ParallelCoordinatesChart"],"sourceRoot":""}